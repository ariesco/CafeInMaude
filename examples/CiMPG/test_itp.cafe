open 2P-MUTEX .

:goal {
eq [inv1 :nonexec] : inv1(S:Sys) = true .
}

:ind on (S:Sys)

:apply (si)

:sel (3)

:show proof

:apply (rd)

:desc .

-- enter1(S#Sys)
:imp [inv1] .
:def csb1 = :ctf{ eq pc2(S#Sys) = rs . }
:apply(csb1)
:apply (rd)
:apply (rd)

-- enter2(S#Sys)
:imp [inv1] .
:def csb3 = :ctf{ eq pc1(S#Sys) = rs . }
:apply(csb3)
:apply (rd)
:apply (rd)

-- leave1(S#Sys)
:imp [inv1] .
:def csb2 = :ctf{ eq pc1(S#Sys) = cs . }
:apply(csb2)
:apply (rd)
:apply (rd)

-- leave2(S#Sys)
:imp [inv1] .
:def csb4 = :ctf{ eq pc2(S#Sys) = cs . }
:apply(csb4)
:apply (rd)
:apply (rd)

:desc proof

close