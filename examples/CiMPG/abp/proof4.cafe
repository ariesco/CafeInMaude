-- init
open ABP .
  op b : -> Bit .
  red inv4(init,b) .
close

-- snd1(s)
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  red inv4(s,b) implies inv4(snd1(s),b) .
close

-- rec1(s)
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = e .
  red inv4(s,b) implies inv4(rec1(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op b10 : -> Bit .
  op bs10 : -> BSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = b10,bs10 .
  eq bs10 = e .
  red inv4(s,b) implies inv4(rec1(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op b10 : -> Bit .
  op bs10 : -> BSeq .
  op b20 : -> Bit .
  op bs20 : -> BSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = b10,bs10 .
  eq bs10 = b20,bs20 .
  eq b = b20 .
  red inv4(s,b) implies inv4(rec1(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op b10 : -> Bit .
  op bs10 : -> BSeq .
  op b20 : -> Bit .
  op bs20 : -> BSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = b10,bs10 .
  eq bs10 = b20,bs20 .
  eq (b = b20) = false .
  eq b \in bs20 = true .
  eq b10 = b20 .
  eq sb(s) = b20 .
  red inv4(s,b) implies inv4(rec1(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op b10 : -> Bit .
  op bs10 : -> BSeq .
  op b20 : -> Bit .
  op bs20 : -> BSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = b10,bs10 .
  eq bs10 = b20,bs20 .
  eq (b = b20) = false .
  eq b \in bs20 = true .
  eq b10 = b20 .
  eq (sb(s) = b20) = false .
  red inv4(s,b) implies inv4(rec1(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op b10 : -> Bit .
  op bs10 : -> BSeq .
  op b20 : -> Bit .
  op bs20 : -> BSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = b10,bs10 .
  eq bs10 = b20,bs20 .
  eq (b = b20) = false .
  eq b \in bs20 = true .
  eq (b10 = b20) = false .
  red inv8(s,b10,b20,b,e,bs20) implies inv4(s,b) implies inv4(rec1(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op b10 : -> Bit .
  op bs10 : -> BSeq .
  op b20 : -> Bit .
  op bs20 : -> BSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = b10,bs10 .
  eq bs10 = b20,bs20 .
  eq (b = b20) = false .
  eq b \in bs20 = false .
  red inv4(s,b) implies inv4(rec1(s),b) .
close

-- snd2(s)
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = e .
  eq rb(s) = b .
  red inv4(s,b) implies inv4(snd2(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = e .
  eq (rb(s) = b) = false .
  red inv4(s,b) implies inv4(snd2(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op b10 : -> Bit .
  op bs10 : -> BSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = b10,bs10 .
  eq b10 = b .
  red inv4(s,b) implies inv4(snd2(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op b10 : -> Bit .
  op bs10 : -> BSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = b10,bs10 .
  eq (b10 = b) = false .
  eq b \in bs10 = true .
  red inv4(s,b) implies inv4(snd2(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op b10 : -> Bit .
  op bs10 : -> BSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = b10,bs10 .
  eq (b10 = b) = false .
  eq b \in bs10 = false .
  eq rb(s) = b .
  red inv2(s) implies inv4(s,b) implies inv4(snd2(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op b10 : -> Bit .
  op bs10 : -> BSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = b10,bs10 .
  eq (b10 = b) = false .
  eq b \in bs10 = false .
  eq (rb(s) = b) = false .
  red inv4(s,b) implies inv4(snd2(s),b) .
close

-- rec2(s)
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq dc(s) = e .
  red inv4(s,b) implies inv4(rec2(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op p10 : -> Packet .
  op b10 : -> Bit .
  op prs10 : -> PBPSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq dc(s) = < p10,b10 >,prs10 .
  red inv4(s,b) implies inv4(rec2(s),b) .
close

-- dup1(s)
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq dc(s) = e .
  red inv4(s,b) implies inv4(dup1(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op p10 : -> Packet .
  op b10 : -> Bit .
  op prs10 : -> PBPSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq dc(s) = < p10,b10 >,prs10 .
  red inv4(s,b) implies inv4(dup1(s),b) .
close

-- drp1(s)
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq dc(s) = e .
  red inv4(s,b) implies inv4(drp1(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op p10 : -> Packet .
  op b10 : -> Bit .
  op prs10 : -> PBPSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq dc(s) = < p10,b10 >,prs10 .
  red inv4(s,b) implies inv4(drp1(s),b) .
close

-- dup2(s)
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = e .
  red inv4(s,b) implies inv4(dup2(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op b10 : -> Bit .
  op bs10 : -> BSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = b10,bs10 .
  red inv4(s,b) implies inv4(dup2(s),b) .
close

-- drp2(s)
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = e .
  red inv4(s,b) implies inv4(drp2(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op b10 : -> Bit .
  op bs10 : -> BSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = b10,bs10 .
  eq bs10 = e .
  red inv4(s,b) implies inv4(drp2(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op b10 : -> Bit .
  op bs10 : -> BSeq .
  op b20 : -> Bit .
  op bs20 : -> BSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = b10,bs10 .
  eq bs10 = b20,bs20 .
  eq b = b20 .
  red inv4(s,b) implies inv4(drp2(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op b10 : -> Bit .
  op bs10 : -> BSeq .
  op b20 : -> Bit .
  op bs20 : -> BSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = b10,bs10 .
  eq bs10 = b20,bs20 .
  eq (b = b20) = false .
  eq b \in bs20 = true .
  eq b10 = b20 .
  red inv4(s,b) implies inv4(drp2(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op b10 : -> Bit .
  op bs10 : -> BSeq .
  op b20 : -> Bit .
  op bs20 : -> BSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = b10,bs10 .
  eq bs10 = b20,bs20 .
  eq (b = b20) = false .
  eq b \in bs20 = true .
  eq (b10 = b20) = false .
  red inv8(s,b10,b20,b,e,bs20) implies inv4(s,b) implies inv4(drp2(s),b) .
close
open ABP .
  op s : -> Sys .
  op b : -> Bit .
  op b10 : -> Bit .
  op bs10 : -> BSeq .
  op b20 : -> Bit .
  op bs20 : -> BSeq .
  eq [inv1 :nonexec] : inv1(s) = true .
  eq [inv2 :nonexec] : inv2(s) = true .
  eq [inv3 :nonexec] : inv3(s) = true .
  eq [inv4 :nonexec] : inv4(s,B:Bit) = true .
  eq [inv5 :nonexec] : inv5(s,B:Bit) = true .
  eq [inv6 :nonexec] : inv6(s,P:Packet,B:Bit) = true .
  eq [inv7 :nonexec] : inv7(s,P:Packet,B:Bit) = true .
  eq [inv8 :nonexec] : inv8(s,B1:Bit,B2:Bit,B3:Bit,BS1:BSeq,BS2:BSeq) = true .
  eq [inv9 :nonexec] : inv9(s,B1:Bit,B2:Bit,B3:Bit,P1:Packet,P2:Packet,P3:Packet,PRS1:PBPSeq,PRS2:PBPSeq) = true .
  eq [inv10 :nonexec] : inv10(s,B:Bit) = true .
  eq [inv11 :nonexec] : inv11(s,B:Bit,P:Packet) = true .
  eq ac(s) = b10,bs10 .
  eq bs10 = b20,bs20 .
  eq (b = b20) = false .
  eq b \in bs20 = false .
  red inv4(s,b) implies inv4(drp2(s),b) .
close

--
-- QED
--
