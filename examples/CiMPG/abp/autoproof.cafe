open ABP .
	:goal{
		eq [proofABP :nonexec] : inv4(S:Sys,B:Bit) = true .
		eq [proofABP1 :nonexec] : inv6(S:Sys,P:Packet,B:Bit) = true .
	}

	:ind on (S:Sys)

	:apply(si)

	:apply(tc)

	:def csb1 = :cevs [dc(S#Sys) .]

	:apply(csb1)

	:imp [proofABP] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb2 = :cevs [dc(S#Sys) .]

	:apply(csb2)

	:imp [proofABP1] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb3 = :cevs [P0#EVS12PBPSeq  .]

	:apply(csb3)

	:imp [proofABP1] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb4 = :ctf {eq B#EVS122SubBit  = B@Bit .}

	:apply(csb4)

	:def csb5 = :ctf {eq P#EVS122SubPacket  = P@Packet .}

	:apply(csb5)

	:imp [proofABP1] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

 :desc proof
close

