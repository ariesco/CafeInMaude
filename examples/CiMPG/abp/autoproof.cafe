open ABP .
	:goal{
		eq [proofABP :nonexec] : inv1(S:Sys) = true .
		eq [proofABP1 :nonexec] : inv2(S:Sys) = true .
		eq [proofABP2 :nonexec] : inv3(S:Sys) = true .
		eq [proofABP3 :nonexec] : inv10(S:Sys,B:Bit) = true .
		eq [proofABP4 :nonexec] : inv4(S:Sys,B:Bit) = true .
		eq [proofABP5 :nonexec] : inv5(S:Sys,B:Bit) = true .
		eq [proofABP6 :nonexec] : inv11(S:Sys,B:Bit,P:Packet) = true .
		eq [proofABP7 :nonexec] : inv6(S:Sys,P:Packet,B:Bit) = true .
		eq [proofABP8 :nonexec] : inv7(S:Sys,P:Packet,B:Bit) = true .
		eq [proofABP9 :nonexec] : inv8(S:Sys,B:Bit,B1:Bit,B0:Bit,B:BSeq,B0:BSeq) = true .
		eq [proofABP10 :nonexec] : inv9(S:Sys,B:Bit,B1:Bit,B0:Bit,P:Packet,P1:Packet,P0:Packet,P:PBPSeq,P0:PBPSeq) = true .
	}

	:ind on (S:Sys)

	:apply(si)

	:apply(tc)

	:def csb1 = :cevs [dc(S#Sys) .]

	:apply(csb1)

	:imp [proofABP] .

	:apply (rd)

	:imp [proofABP] .

	:apply (rd)

	:def csb2 = :cevs [dc(S#Sys) .]

	:apply(csb2)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb3 = :cevs [dc(S#Sys) .]

	:apply(csb3)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb4 = :cevs [dc(S#Sys) .]

	:apply(csb4)

	:imp [proofABP1] .

	:apply (rd)

	:imp [proofABP1] .

	:apply (rd)

	:def csb5 = :cevs [dc(S#Sys) .]

	:apply(csb5)

	:imp [proofABP2] .

	:apply (rd)

	:def csb6 = :cevs [P0#EVS15PBPSeq  .]

	:apply(csb6)

	:imp [proofABP2] .

	:apply (rd)

	:imp [proofABP2] .

	:imp [proofABP8] by {B:Bit <- B#EVS152SubBit ; P:Packet <- P#EVS152SubPacket ;}

	:apply (rd)

	:def csb7 = :cevs [dc(S#Sys) .]

	:apply(csb7)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb8 = :cevs [dc(S#Sys) .]

	:apply(csb8)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb9 = :cevs [dc(S#Sys) .]

	:apply(csb9)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb10 = :cevs [P0#EVS18PBPSeq  .]

	:apply(csb10)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb11 = :ctf {eq P#EVS182SubPacket  = P@Packet .}

	:apply(csb11)

	:def csb12 = :ctf {eq B#EVS182SubBit  = B@Bit .}

	:apply(csb12)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb13 = :ctf [< P@Packet,B@Bit > \in P0#EVS182PBPSeq  .]

	:apply(csb13)

	:def csb14 = :ctf {eq P#EVS18SubPacket  = P@Packet .}

	:apply(csb14)

	:def csb15 = :ctf {eq B#EVS18SubBit  = B@Bit .}

	:apply(csb15)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS182SubBit ; B:Bit <- B#EVS18SubBit ; P0:PBPSeq <- P0#EVS182PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS182SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS18SubPacket ;}

	:apply (rd)

	:def csb16 = :ctf {eq B#EVS18SubBit  = B#EVS182SubBit .}

	:apply(csb16)

	:def csb17 = :ctf {eq rb(S#Sys) = B#EVS182SubBit .}

	:apply(csb17)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS182SubBit ; B:Bit <- B#EVS18SubBit ; P0:PBPSeq <- P0#EVS182PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS182SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS18SubPacket ;}

	:apply (rd)

	:def csb18 = :ctf {eq B#EVS18SubBit  = B#EVS182SubBit .}

	:apply(csb18)

	:def csb19 = :ctf {eq rb(S#Sys) = B#EVS182SubBit .}

	:apply(csb19)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS182SubBit ; B:Bit <- B#EVS18SubBit ; P0:PBPSeq <- P0#EVS182PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS182SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS18SubPacket ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb20 = :ctf [< P@Packet,B@Bit > \in P0#EVS182PBPSeq  .]

	:apply(csb20)

	:def csb21 = :ctf {eq P#EVS18SubPacket  = P@Packet .}

	:apply(csb21)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS182SubBit ; B:Bit <- B#EVS18SubBit ; P0:PBPSeq <- P0#EVS182PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS182SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS18SubPacket ;}

	:apply (rd)

	:def csb22 = :ctf {eq rb(S#Sys) = B#EVS182SubBit .}

	:apply(csb22)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS182SubBit ; B:Bit <- B#EVS18SubBit ; P0:PBPSeq <- P0#EVS182PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS182SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS18SubPacket ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb23 = :cevs [dc(S#Sys) .]

	:apply(csb23)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb24 = :cevs [dc(S#Sys) .]

	:apply(csb24)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb25 = :cevs [dc(S#Sys) .]

	:apply(csb25)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb26 = :cevs [P@PBPSeq  .]

	:apply(csb26)

	:def csb27 = :ctf {eq P0#EVS111PBPSeq  = < P@Packet,B@Bit >,< P1@Packet,B1@Bit >,P0@PBPSeq .}

	:apply(csb27)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:Packet <- P@Packet
    ; P:PBPSeq <- <_`,_>(P#EVS111SubPacket,B#EVS111SubBit);}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb28 = :ctf {eq P0#EVS111PBPSeq  = < P#EVS1112SubPacket,B#EVS1112SubBit >,P0#EVS1112PBPSeq,< P@Packet,B@Bit >,< P1@Packet,B1@Bit >,P0@PBPSeq .}

	:apply(csb28)

	:def csb29 = :ctf {eq < P@Packet,B@Bit >  = < P1@Packet,B1@Bit > .}

	:apply(csb29)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb30 = :ctf {eq < p2s(S#Sys),sb(S#Sys)>  = < P1@Packet,B1@Bit > .}

	:apply(csb30)

	:def csb31 = :ctf {eq < P0@Packet,B0@Bit >  = < P1@Packet,B1@Bit > .}

	:apply(csb31)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb32 = :ctf [< P0@Packet,B0@Bit > \in P0@PBPSeq  .]

	:apply(csb32)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:Packet <- P@Packet
    ; P:PBPSeq <- _`,_(<_`,_>(P#EVS111SubPacket,B#EVS111SubBit),P@PBPSeq);}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:Packet <- P@Packet
    ; P:PBPSeq <- _`,_(<_`,_>(P#EVS111SubPacket,B#EVS111SubBit),P@PBPSeq);}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:apply(tc)

	:def csb33 = :cevs [ac(S#Sys) .]

	:apply(csb33)

	:imp [proofABP] .

	:apply (rd)

	:imp [proofABP] .

	:apply (rd)

	:def csb34 = :cevs [ac(S#Sys) .]

	:apply(csb34)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb35 = :cevs [ac(S#Sys) .]

	:apply(csb35)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb36 = :cevs [ac(S#Sys) .]

	:apply(csb36)

	:imp [proofABP1] .

	:apply (rd)

	:def csb37 = :cevs [B0#EVS24BSeq  .]

	:apply(csb37)

	:imp [proofABP1] .

	:apply (rd)

	:imp [proofABP1] .

	:imp [proofABP5] by {B:Bit <- B0EVS242Bit ;}

	:apply (rd)

	:def csb38 = :cevs [ac(S#Sys) .]

	:apply(csb38)

	:imp [proofABP2] .

	:apply (rd)

	:imp [proofABP2] .

	:apply (rd)

	:def csb39 = :cevs [ac(S#Sys) .]

	:apply(csb39)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb40 = :cevs [B0#EVS26BSeq  .]

	:apply(csb40)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb41 = :ctf {eq B@Bit  = B0EVS262Bit .}

	:apply(csb41)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb42 = :ctf [B@Bit \in B0#EVS262BSeq  .]

	:apply(csb42)

	:def csb43 = :ctf {eq B0EVS26Bit  = B0EVS262Bit .}

	:apply(csb43)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:imp [proofABP9] by {B0:BSeq <- B0#EVS262BSeq ; B0:Bit <- B@Bit ; B1:Bit <- B0EVS262Bit ; B:BSeq <- e.BSeq ; B:Bit <- B0EVS26Bit ;}

	:apply (rd)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb44 = :cevs [ac(S#Sys) .]

	:apply(csb44)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb45 = :cevs [ac(S#Sys) .]

	:apply(csb45)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb46 = :cevs [ac(S#Sys) .]

	:apply(csb46)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb47 = :cevs [ac(S#Sys) .]

	:apply(csb47)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb48 = :cevs [B@BSeq  .]

	:apply(csb48)

	:def csb49 = :ctf {eq B0#EVS210BSeq  = B@Bit,B1@Bit,B0@BSeq .}

	:apply(csb49)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B0EVS210Bit ; B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb50 = :ctf {eq B0#EVS210BSeq  = B0EVS2102Bit,B0#EVS2102BSeq,B@Bit,B1@Bit,B0@BSeq .}

	:apply(csb50)

	:def csb51 = :ctf {eq B@Bit  = B1@Bit .}

	:apply(csb51)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb52 = :ctf {eq rb(S#Sys) = B1@Bit .}

	:apply(csb52)

	:def csb53 = :ctf {eq B0@Bit  = B1@Bit .}

	:apply(csb53)

	:def csb54 = :ctf [B1@Bit \in B0@BSeq  .]

	:apply(csb54)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb55 = :ctf [B0@Bit \in B0@BSeq  .]

	:apply(csb55)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; B:BSeq <- _`,_(B0EVS210Bit,B@BSeq);}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; B:BSeq <- _`,_(B0EVS210Bit,B@BSeq);}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb56 = :cevs [ac(S#Sys) .]

	:apply(csb56)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:apply(tc)

	:def csb57 = :cevs [dc(S#Sys) .]

	:apply(csb57)

	:imp [proofABP] .

	:apply (rd)

	:imp [proofABP] .

	:apply (rd)

	:def csb58 = :cevs [dc(S#Sys) .]

	:apply(csb58)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb59 = :cevs [dc(S#Sys) .]

	:apply(csb59)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb60 = :cevs [dc(S#Sys) .]

	:apply(csb60)

	:imp [proofABP1] .

	:apply (rd)

	:imp [proofABP1] .

	:apply (rd)

	:def csb61 = :cevs [dc(S#Sys) .]

	:apply(csb61)

	:imp [proofABP2] .

	:apply (rd)

	:imp [proofABP2] .

	:apply (rd)

	:def csb62 = :cevs [dc(S#Sys) .]

	:apply(csb62)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb63 = :cevs [dc(S#Sys) .]

	:apply(csb63)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb64 = :cevs [dc(S#Sys) .]

	:apply(csb64)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb65 = :cevs [dc(S#Sys) .]

	:apply(csb65)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb66 = :cevs [dc(S#Sys) .]

	:apply(csb66)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb67 = :cevs [dc(S#Sys) .]

	:apply(csb67)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb68 = :cevs [P@PBPSeq  .]

	:apply(csb68)

	:def csb69 = :ctf {eq < P@Packet,B@Bit >  = < P#EVS311SubPacket,B#EVS311SubBit > .}

	:apply(csb69)

	:def csb70 = :ctf {eq < P1@Packet,B1@Bit >  = < P#EVS311SubPacket,B#EVS311SubBit > .}

	:apply(csb70)

	:def csb71 = :ctf {eq P0@PBPSeq  = P0#EVS311PBPSeq .}

	:apply(csb71)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb72 = :ctf {eq < P#EVS3112SubPacket,B#EVS3112SubBit >  = < P#EVS311SubPacket,B#EVS311SubBit > .}

	:apply(csb72)

	:def csb73 = :ctf {eq P0#EVS3112PBPSeq,< P@Packet,B@Bit >,< P1@Packet,B1@Bit >,P0@PBPSeq  = < P#EVS311SubPacket,B#EVS311SubBit >,P0#EVS311PBPSeq .}

	:apply(csb73)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <-
    P0#EVS3112PBPSeq ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:apply(tc)

	:def csb74 = :cevs [ac(S#Sys) .]

	:apply(csb74)

	:imp [proofABP] .

	:apply (rd)

	:imp [proofABP] .

	:apply (rd)

	:def csb75 = :cevs [ac(S#Sys) .]

	:apply(csb75)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb76 = :cevs [ac(S#Sys) .]

	:apply(csb76)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb77 = :cevs [ac(S#Sys) .]

	:apply(csb77)

	:imp [proofABP1] .

	:apply (rd)

	:imp [proofABP1] .

	:apply (rd)

	:def csb78 = :cevs [ac(S#Sys) .]

	:apply(csb78)

	:imp [proofABP2] .

	:apply (rd)

	:imp [proofABP2] .

	:apply (rd)

	:def csb79 = :cevs [ac(S#Sys) .]

	:apply(csb79)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb80 = :cevs [ac(S#Sys) .]

	:apply(csb80)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb81 = :cevs [ac(S#Sys) .]

	:apply(csb81)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb82 = :cevs [ac(S#Sys) .]

	:apply(csb82)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb83 = :cevs [ac(S#Sys) .]

	:apply(csb83)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb84 = :cevs [B@BSeq  .]

	:apply(csb84)

	:def csb85 = :ctf {eq B@Bit  = B0EVS410Bit .}

	:apply(csb85)

	:def csb86 = :ctf {eq B1@Bit  = B0EVS410Bit .}

	:apply(csb86)

	:def csb87 = :ctf {eq B0@BSeq  = B0#EVS410BSeq .}

	:apply(csb87)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb88 = :ctf {eq B0EVS4102Bit  = B0EVS410Bit .}

	:apply(csb88)

	:def csb89 = :ctf {eq B0#EVS4102BSeq,B@Bit,B1@Bit,B0@BSeq  = B0EVS410Bit,B0#EVS410BSeq .}

	:apply(csb89)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B0#EVS4102BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb90 = :cevs [ac(S#Sys) .]

	:apply(csb90)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:apply(tc)

	:apply (rd)

	:apply (rd)

	:apply (rd)

	:apply (rd)

	:apply (rd)

	:apply (rd)

	:apply (rd)

	:apply (rd)

	:apply (rd)

	:apply (rd)

	:apply (rd)

	:apply(tc)

	:def csb91 = :cevs [ac(S#Sys) .]

	:apply(csb91)

	:imp [proofABP] .

	:apply (rd)

	:def csb92 = :ctf {eq sb(S#Sys) = B0EVS61Bit .}

	:apply(csb92)

	:imp [proofABP] .

	:apply (rd)

	:def csb93 = :ctf {eq rb(S#Sys) = B0EVS61Bit .}

	:apply(csb93)

	:def csb94 = :ctf {eq psr(S#Sys) = mksq(p2s(S#Sys)).}

	:apply(csb94)

	:imp [proofABP] .

	:apply (rd)

	:imp [proofABP] .

	:apply (rd)

	:imp [proofABP] .

	:imp [proofABP1] .

	:apply (rd)

	:def csb95 = :cevs [ac(S#Sys) .]

	:apply(csb95)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb96 = :ctf {eq sb(S#Sys) = B@Bit .}

	:apply(csb96)

	:def csb97 = :ctf {eq B@Bit  = B0EVS62Bit .}

	:apply(csb97)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb98 = :ctf [B@Bit \in B0#EVS62BSeq  .]

	:apply(csb98)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb99 = :ctf {eq sb(S#Sys) = B0EVS62Bit .}

	:apply(csb99)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb100 = :ctf [B@Bit \in B0#EVS62BSeq  .]

	:apply(csb100)

	:def csb101 = :ctf {eq rb(S#Sys) = sb(S#Sys).}

	:apply(csb101)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb102 = :cevs [ac(S#Sys) .]

	:apply(csb102)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb103 = :ctf {eq rb(S#Sys) = B0EVS63Bit .}

	:apply(csb103)

	:def csb104 = :ctf {eq sb(S#Sys) = B0EVS63Bit .}

	:apply(csb104)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb105 = :ctf {eq sb(S#Sys) = B0EVS63Bit .}

	:apply(csb105)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP1] .

	:apply (rd)

	:def csb106 = :cevs [ac(S#Sys) .]

	:apply(csb106)

	:imp [proofABP1] .

	:apply (rd)

	:def csb107 = :cevs [B0#EVS64BSeq  .]

	:apply(csb107)

	:imp [proofABP1] .

	:apply (rd)

	:def csb108 = :ctf {eq sb(S#Sys) = B0EVS64Bit .}

	:apply(csb108)

	:imp [proofABP1] .

	:imp [proofABP5] by {B:Bit <- B0EVS642Bit ;}

	:apply (rd)

	:def csb109 = :ctf {eq rb(S#Sys) = B0EVS64Bit .}

	:apply(csb109)

	:imp [proofABP1] .

	:imp [proofABP4] by {B:Bit <- B0EVS642Bit ;}

	:apply (rd)

	:imp [proofABP1] .

	:apply (rd)

	:def csb110 = :cevs [ac(S#Sys) .]

	:apply(csb110)

	:imp [proofABP2] .

	:apply (rd)

	:def csb111 = :ctf {eq sb(S#Sys) = B0EVS65Bit .}

	:apply(csb111)

	:imp [proofABP2] .

	:apply (rd)

	:def csb112 = :ctf {eq rb(S#Sys) = B0EVS65Bit .}

	:apply(csb112)

	:def csb113 = :ctf {eq p2s(S#Sys) = 1st(hd(dc(S#Sys))).}

	:apply(csb113)

	:def csb114 = :ctf {eq 2nd(hd(dc(S#Sys))) = sb(S#Sys).}

	:apply(csb114)

	:imp [proofABP2] .

	:apply (rd)

	:imp [proofABP2] .

	:apply (rd)

	:imp [proofABP2] .

	:apply (rd)

	:imp [proofABP2] .

	:imp [proofABP1] .

	:apply (rd)

	:def csb115 = :cevs [ac(S#Sys) .]

	:apply(csb115)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb116 = :cevs [B0#EVS66BSeq  .]

	:apply(csb116)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb117 = :ctf {eq B@Bit  = B0EVS662Bit .}

	:apply(csb117)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb118 = :ctf [B@Bit \in B0#EVS662BSeq  .]

	:apply(csb118)

	:def csb119 = :ctf {eq B0EVS66Bit  = B0EVS662Bit .}

	:apply(csb119)

	:def csb120 = :ctf {eq sb(S#Sys) = B0EVS662Bit .}

	:apply(csb120)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:imp [proofABP9] by {B0:BSeq <- B0#EVS662BSeq ; B0:Bit <- B@Bit ; B1:Bit <- B0EVS662Bit ; B:BSeq <- e.BSeq ; B:Bit <- B0EVS66Bit ;}

	:apply (rd)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb121 = :cevs [ac(S#Sys) .]

	:apply(csb121)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb122 = :cevs [B0#EVS67BSeq  .]

	:apply(csb122)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb123 = :ctf {eq sb(S#Sys) = B0EVS67Bit .}

	:apply(csb123)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb124 = :ctf {eq B@Bit  = B0EVS67Bit .}

	:apply(csb124)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb125 = :cevs [ac(S#Sys) .]

	:apply(csb125)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb126 = :cevs [ac(S#Sys) .]

	:apply(csb126)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb127 = :ctf {eq sb(S#Sys) = B0EVS69Bit .}

	:apply(csb127)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb128 = :ctf {eq B@Bit  = B0EVS69Bit .}

	:apply(csb128)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb129 = :ctf [< P@Packet,B@Bit > \in dc(S#Sys) .]

	:apply(csb129)

	:def csb130 = :ctf {eq rb(S#Sys) = B@Bit .}

	:apply(csb130)

	:def csb131 = :ctf {eq sb(S#Sys) = B@Bit .}

	:apply(csb131)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP1] .

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb132 = :cevs [ac(S#Sys) .]

	:apply(csb132)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb133 = :ctf {eq B0#EVS610BSeq  = B@BSeq,B@Bit,B1@Bit,B0@BSeq .}

	:apply(csb133)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; B:BSeq <- _`,_(B0EVS610Bit,B@BSeq);}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb134 = :cevs [ac(S#Sys) .]

	:apply(csb134)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb135 = :ctf {eq sb(S#Sys) = B0EVS611Bit .}

	:apply(csb135)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb136 = :ctf {eq dc(S#Sys) = P@PBPSeq,< P@Packet,B@Bit >,< P1@Packet,B1@Bit >,P0@PBPSeq .}

	:apply(csb136)

	:def csb137 = :ctf {eq P@Packet  = p2s(S#Sys).}

	:apply(csb137)

	:def csb138 = :ctf {eq B@Bit  = sb(S#Sys).}

	:apply(csb138)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb139 = :ctf {eq rb(S#Sys) = B0EVS611Bit .}

	:apply(csb139)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP3] by {B:Bit <- B0EVS611Bit ;}

	:apply (rd)

	:def csb140 = :ctf {eq rb(S#Sys) = B0EVS611Bit .}

	:apply(csb140)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP3] by {B:Bit <- B0EVS611Bit ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:apply(tc)

	:def csb141 = :cevs [dc(S#Sys) .]

	:apply(csb141)

	:imp [proofABP] .

	:apply (rd)

	:def csb142 = :ctf {eq rb(S#Sys) = B#EVS71SubBit .}

	:apply(csb142)

	:def csb143 = :ctf {eq p2s(S#Sys) = P#EVS71SubPacket .}

	:apply(csb143)

	:def csb144 = :ctf {eq sb(S#Sys) = B#EVS71SubBit .}

	:apply(csb144)

	:imp [proofABP] .

	:apply (rd)

	:imp [proofABP] .

	:imp [proofABP2] .

	:apply (rd)

	:imp [proofABP] .

	:imp [proofABP2] .

	:apply (rd)

	:imp [proofABP] .

	:apply (rd)

	:def csb145 = :cevs [dc(S#Sys) .]

	:apply(csb145)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb146 = :ctf {eq rb(S#Sys) = B#EVS72SubBit .}

	:apply(csb146)

	:def csb147 = :ctf {eq sb(S#Sys) = B#EVS72SubBit .}

	:apply(csb147)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:imp [proofABP2] .

	:apply (rd)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb148 = :cevs [dc(S#Sys) .]

	:apply(csb148)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb149 = :ctf {eq rb(S#Sys) = B#EVS73SubBit .}

	:apply(csb149)

	:def csb150 = :ctf [< P@Packet,B@Bit > \in P0#EVS73PBPSeq  .]

	:apply(csb150)

	:def csb151 = :ctf {eq sb(S#Sys) = B#EVS73SubBit .}

	:apply(csb151)

	:def csb152 = :ctf {eq B#EVS73SubBit  = B@Bit .}

	:apply(csb152)

	:def csb153 = :ctf {eq p2s(S#Sys) = P@Packet .}

	:apply(csb153)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb154 = :cevs [dc(S#Sys) .]

	:apply(csb154)

	:imp [proofABP1] .

	:apply (rd)

	:def csb155 = :ctf {eq rb(S#Sys) = B#EVS74SubBit .}

	:apply(csb155)

	:def csb156 = :ctf {eq sb(S#Sys) = B#EVS74SubBit .}

	:apply(csb156)

	:imp [proofABP1] .

	:apply (rd)

	:imp [proofABP1] .

	:imp [proofABP2] .

	:apply (rd)

	:imp [proofABP1] .

	:apply (rd)

	:def csb157 = :cevs [dc(S#Sys) .]

	:apply(csb157)

	:imp [proofABP2] .

	:apply (rd)

	:def csb158 = :cevs [P0#EVS75PBPSeq  .]

	:apply(csb158)

	:imp [proofABP2] .

	:apply (rd)

	:def csb159 = :ctf {eq rb(S#Sys) = B#EVS75SubBit .}

	:apply(csb159)

	:def csb160 = :ctf {eq P#EVS75SubPacket  = P#EVS752SubPacket .}

	:apply(csb160)

	:def csb161 = :ctf {eq B#EVS75SubBit  = B#EVS752SubBit .}

	:apply(csb161)

	:imp [proofABP2] .

	:apply (rd)

	:imp [proofABP2] .

	:imp [proofABP7] by {B:Bit <- B#EVS752SubBit ; P:Packet <- P#EVS752SubPacket ;}

	:apply (rd)

	:imp [proofABP2] .

	:imp [proofABP7] by {B:Bit <- B#EVS752SubBit ; P:Packet <- P#EVS752SubPacket ;}

	:apply (rd)

	:def csb162 = :ctf {eq P#EVS752SubPacket  = P#EVS75SubPacket .}

	:apply(csb162)

	:def csb163 = :ctf {eq B#EVS752SubBit  = B#EVS75SubBit .}

	:apply(csb163)

	:imp [proofABP2] .

	:apply (rd)

	:imp [proofABP2] .

	:imp [proofABP8] by {B:Bit <- B#EVS752SubBit ; P:Packet <- P#EVS752SubPacket ;}

	:apply (rd)

	:imp [proofABP2] .

	:imp [proofABP8] by {B:Bit <- B#EVS752SubBit ; P:Packet <- P#EVS752SubPacket ;}

	:apply (rd)

	:def csb164 = :cevs [dc(S#Sys) .]

	:apply(csb164)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb165 = :cevs [dc(S#Sys) .]

	:apply(csb165)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb166 = :ctf {eq rb(S#Sys) = B#EVS77SubBit .}

	:apply(csb166)

	:def csb167 = :ctf {eq sb(S#Sys) = B#EVS77SubBit .}

	:apply(csb167)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:imp [proofABP2] .

	:apply (rd)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb168 = :cevs [dc(S#Sys) .]

	:apply(csb168)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb169 = :cevs [P0#EVS78PBPSeq  .]

	:apply(csb169)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb170 = :ctf {eq P#EVS782SubPacket  = P@Packet .}

	:apply(csb170)

	:def csb171 = :ctf {eq B#EVS782SubBit  = B@Bit .}

	:apply(csb171)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb172 = :ctf [< P@Packet,B@Bit > \in P0#EVS782PBPSeq  .]

	:apply(csb172)

	:def csb173 = :ctf {eq P#EVS78SubPacket  = P@Packet .}

	:apply(csb173)

	:def csb174 = :ctf {eq B#EVS78SubBit  = B@Bit .}

	:apply(csb174)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS782SubBit ; B:Bit <- B#EVS78SubBit ; P0:PBPSeq <- P0#EVS782PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS782SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS78SubPacket ;}

	:apply (rd)

	:def csb175 = :ctf {eq B#EVS78SubBit  = B#EVS782SubBit .}

	:apply(csb175)

	:def csb176 = :ctf {eq rb(S#Sys) = B#EVS782SubBit .}

	:apply(csb176)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS782SubBit ; B:Bit <- B#EVS78SubBit ; P0:PBPSeq <- P0#EVS782PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS782SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS78SubPacket ;}

	:apply (rd)

	:def csb177 = :ctf {eq B#EVS78SubBit  = B#EVS782SubBit .}

	:apply(csb177)

	:def csb178 = :ctf {eq rb(S#Sys) = B#EVS782SubBit .}

	:apply(csb178)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS782SubBit ; B:Bit <- B#EVS78SubBit ; P0:PBPSeq <- P0#EVS782PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS782SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS78SubPacket ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb179 = :ctf {eq B#EVS78SubBit  = B#EVS782SubBit .}

	:apply(csb179)

	:def csb180 = :ctf {eq rb(S#Sys) = B#EVS782SubBit .}

	:apply(csb180)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS782SubBit ; B:Bit <- B#EVS78SubBit ; P0:PBPSeq <- P0#EVS782PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS782SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS78SubPacket ;}

	:apply (rd)

	:def csb181 = :cevs [dc(S#Sys) .]

	:apply(csb181)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb182 = :cevs [P0#EVS79PBPSeq  .]

	:apply(csb182)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb183 = :ctf {eq P#EVS79SubPacket  = P#EVS792SubPacket .}

	:apply(csb183)

	:def csb184 = :ctf {eq B#EVS79SubBit  = B#EVS792SubBit .}

	:apply(csb184)

	:def csb185 = :ctf {eq rb(S#Sys) = B#EVS792SubBit .}

	:apply(csb185)

	:def csb186 = :ctf {eq P@Packet  = P#EVS792SubPacket .}

	:apply(csb186)

	:def csb187 = :ctf {eq B@Bit  = B#EVS792SubBit .}

	:apply(csb187)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb188 = :ctf {eq rb(S#Sys) = B#EVS792SubBit .}

	:apply(csb188)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb189 = :ctf {eq P@Packet  = P#EVS792SubPacket .}

	:apply(csb189)

	:def csb190 = :ctf {eq B@Bit  = B#EVS792SubBit .}

	:apply(csb190)

	:def csb191 = :ctf {eq sb(S#Sys) = B#EVS792SubBit .}

	:apply(csb191)

	:def csb192 = :ctf {eq p2s(S#Sys) = P#EVS792SubPacket .}

	:apply(csb192)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS792SubBit ; B:Bit <- B#EVS79SubBit ; P0:PBPSeq <- P0#EVS792PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS792SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS79SubPacket ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS792SubBit ; B:Bit <- B#EVS79SubBit ; P0:PBPSeq <- P0#EVS792PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS792SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS79SubPacket ;}

	:apply (rd)

	:def csb193 = :ctf {eq rb(S#Sys) = B#EVS79SubBit .}

	:apply(csb193)

	:def csb194 = :ctf {eq sb(S#Sys) = B@Bit .}

	:apply(csb194)

	:def csb195 = :ctf {eq p2s(S#Sys) = P@Packet .}

	:apply(csb195)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS792SubBit ; B:Bit <- B#EVS79SubBit ; P0:PBPSeq <- P0#EVS792PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS792SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS79SubPacket ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS792SubBit ; B:Bit <- B#EVS79SubBit ; P0:PBPSeq <- P0#EVS792PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS792SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS79SubPacket ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS792SubBit ; B:Bit <- B#EVS79SubBit ; P0:PBPSeq <- P0#EVS792PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS792SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS79SubPacket ;}

	:apply (rd)

	:def csb196 = :ctf {eq P@Packet  = P#EVS792SubPacket .}

	:apply(csb196)

	:def csb197 = :ctf {eq B@Bit  = B#EVS792SubBit .}

	:apply(csb197)

	:def csb198 = :ctf {eq rb(S#Sys) = B#EVS792SubBit .}

	:apply(csb198)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS792SubBit ; B:Bit <- B#EVS79SubBit ; P0:PBPSeq <- P0#EVS792PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS792SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS79SubPacket ;}

	:apply (rd)

	:def csb199 = :ctf {eq rb(S#Sys) = B#EVS792SubBit .}

	:apply(csb199)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS792SubBit ; B:Bit <- B#EVS79SubBit ; P0:PBPSeq <- P0#EVS792PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS792SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS79SubPacket ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS792SubBit ; B:Bit <- B#EVS79SubBit ; P0:PBPSeq <- P0#EVS792PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS792SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS79SubPacket ;}

	:apply (rd)

	:def csb200 = :ctf {eq rb(S#Sys) = B#EVS792SubBit .}

	:apply(csb200)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS792SubBit ; B:Bit <- B#EVS79SubBit ; P0:PBPSeq <- P0#EVS792PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS792SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS79SubPacket ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B@Bit ; B1:Bit <- B#EVS792SubBit ; B:Bit <- B#EVS79SubBit ; P0:PBPSeq <- P0#EVS792PBPSeq ; P0:Packet <- P@Packet ; P1:Packet <-
    P#EVS792SubPacket ; P:PBPSeq <- e.PBPSeq ; P:Packet <- P#EVS79SubPacket ;}

	:apply (rd)

	:def csb201 = :cevs [dc(S#Sys) .]

	:apply(csb201)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb202 = :ctf {eq rb(S#Sys) = B#EVS710SubBit .}

	:apply(csb202)

	:def csb203 = :ctf {eq ac(S#Sys) = B@BSeq,B@Bit,B1@Bit,B0@BSeq .}

	:apply(csb203)

	:def csb204 = :ctf {eq B@Bit  = B#EVS710SubBit .}

	:apply(csb204)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:imp [proofABP6] by {B:Bit <- B#EVS710SubBit ; P:Packet <- P#EVS710SubPacket ;}

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb205 = :cevs [dc(S#Sys) .]

	:apply(csb205)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb206 = :ctf {eq P0#EVS711PBPSeq  = P@PBPSeq,< P@Packet,B@Bit >,< P1@Packet,B1@Bit >,P0@PBPSeq .}

	:apply(csb206)

	:def csb207 = :ctf {eq < P@Packet,B@Bit >  = < P1@Packet,B1@Bit > .}

	:apply(csb207)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb208 = :ctf {eq < P0@Packet,B0@Bit >  = < P1@Packet,B1@Bit > .}

	:apply(csb208)

	:def csb209 = :ctf [< P1@Packet,B1@Bit > \in P0@PBPSeq  .]

	:apply(csb209)

	:def csb210 = :ctf {eq < p2s(S#Sys),sb(S#Sys)>  = < P1@Packet,B1@Bit > .}

	:apply(csb210)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:Packet <- P@Packet
    ; P:PBPSeq <- _`,_(<_`,_>(P#EVS711SubPacket,B#EVS711SubBit),P@PBPSeq);}

	:apply (rd)

	:def csb211 = :ctf {eq < p2s(S#Sys),sb(S#Sys)>  = < P1@Packet,B1@Bit > .}

	:apply(csb211)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:Packet <- P@Packet
    ; P:PBPSeq <- _`,_(<_`,_>(P#EVS711SubPacket,B#EVS711SubBit),P@PBPSeq);}

	:apply (rd)

	:def csb212 = :ctf [< P0@Packet,B0@Bit > \in P0@PBPSeq  .]

	:apply(csb212)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:Packet <- P@Packet
    ; P:PBPSeq <- _`,_(<_`,_>(P#EVS711SubPacket,B#EVS711SubBit),P@PBPSeq);}

	:apply (rd)

	:def csb213 = :ctf {eq < p2s(S#Sys),sb(S#Sys)>  = < P1@Packet,B1@Bit > .}

	:apply(csb213)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:Packet <- P@Packet
    ; P:PBPSeq <- _`,_(<_`,_>(P#EVS711SubPacket,B#EVS711SubBit),P@PBPSeq);}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:apply(tc)

	:imp [proofABP] .

	:apply (rd)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb214 = :ctf {eq sb(S#Sys) = rb(S#Sys).}

	:apply(csb214)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb215 = :ctf {eq B@Bit  = sb(S#Sys).}

	:apply(csb215)

	:def csb216 = :ctf {eq P@Packet  = p2s(S#Sys).}

	:apply(csb216)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP1] .

	:apply (rd)

	:def csb217 = :cevs [dc(S#Sys) .]

	:apply(csb217)

	:imp [proofABP2] .

	:apply (rd)

	:imp [proofABP2] .

	:apply (rd)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb218 = :cevs [dc(S#Sys) .]

	:apply(csb218)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb219 = :ctf {eq P#EVS88SubPacket  = P@Packet .}

	:apply(csb219)

	:def csb220 = :ctf {eq B#EVS88SubBit  = B@Bit .}

	:apply(csb220)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb221 = :ctf [< P@Packet,B@Bit > \in P0#EVS88PBPSeq  .]

	:apply(csb221)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb222 = :ctf {eq rb(S#Sys) = B#EVS88SubBit .}

	:apply(csb222)

	:def csb223 = :ctf {eq sb(S#Sys) = B@Bit .}

	:apply(csb223)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP2] .

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb224 = :ctf [< P@Packet,B@Bit > \in P0#EVS88PBPSeq  .]

	:apply(csb224)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb225 = :ctf {eq rb(S#Sys) = B#EVS88SubBit .}

	:apply(csb225)

	:def csb226 = :ctf {eq p2s(S#Sys) = P@Packet .}

	:apply(csb226)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:imp [proofABP2] .

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb227 = :cevs [dc(S#Sys) .]

	:apply(csb227)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb228 = :ctf {eq P#EVS89SubPacket  = P@Packet .}

	:apply(csb228)

	:def csb229 = :ctf {eq B#EVS89SubBit  = B@Bit .}

	:apply(csb229)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb230 = :ctf [< P@Packet,B@Bit > \in P0#EVS89PBPSeq  .]

	:apply(csb230)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb231 = :ctf {eq p2s(S#Sys) = P@Packet .}

	:apply(csb231)

	:def csb232 = :ctf {eq sb(S#Sys) = B@Bit .}

	:apply(csb232)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb233 = :ctf [< P@Packet,B@Bit > \in P0#EVS89PBPSeq  .]

	:apply(csb233)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb234 = :ctf {eq p2s(S#Sys) = P@Packet .}

	:apply(csb234)

	:def csb235 = :ctf {eq sb(S#Sys) = B@Bit .}

	:apply(csb235)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb236 = :ctf {eq dc(S#Sys) = P@PBPSeq,< P@Packet,B@Bit > .}

	:apply(csb236)

	:def csb237 = :ctf {eq sb(S#Sys) = B1@Bit .}

	:apply(csb237)

	:def csb238 = :ctf {eq p2s(S#Sys) = P1@Packet .}

	:apply(csb238)

	:def csb239 = :cevs [P0@PBPSeq  .]

	:apply(csb239)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb240 = :cesv [P0@PBPSeq  .]

	:apply(csb240)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb241 = :ctf {eq dc(S#Sys) = P@PBPSeq,< P@Packet,B@Bit >,< P1@Packet,B1@Bit >,P#ESV8112PBPSeq .}

	:apply(csb241)

	:def csb242 = :ctf {eq < P@Packet,B@Bit >  = < P1@Packet,B1@Bit > .}

	:apply(csb242)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb243 = :ctf {eq < p2s(S#Sys),sb(S#Sys)>  = < P#ESV8112SubPacket,B#ESV8112SubBit > .}

	:apply(csb243)

	:def csb244 = :ctf {eq < P#ESV8112SubPacket,B#ESV8112SubBit >  = < P0@Packet,B0@Bit > .}

	:apply(csb244)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P#ESV8112PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <-
    P@PBPSeq ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P#ESV8112PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <-
    P@PBPSeq ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

	:apply(tc)

	:imp [proofABP] .

	:apply (rd)

	:def csb245 = :ctf {eq sb(S#Sys) = rb(S#Sys).}

	:apply(csb245)

	:def csb246 = :ctf {eq B@Bit  = rb(S#Sys).}

	:apply(csb246)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP3] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP6] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb247 = :cevs [ac(S#Sys) .]

	:apply(csb247)

	:imp [proofABP1] .

	:apply (rd)

	:imp [proofABP1] .

	:apply (rd)

	:imp [proofABP2] .

	:apply (rd)

	:def csb248 = :cevs [ac(S#Sys) .]

	:apply(csb248)

	:def csb249 = :ctf {eq rb(S#Sys) = B@Bit .}

	:apply(csb249)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb250 = :ctf {eq B0EVS96Bit  = B@Bit .}

	:apply(csb250)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb251 = :ctf [B@Bit \in B0#EVS96BSeq  .]

	:apply(csb251)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb252 = :ctf {eq rb(S#Sys) = B@Bit .}

	:apply(csb252)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:imp [proofABP1] .

	:apply (rd)

	:imp [proofABP4] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb253 = :cevs [ac(S#Sys) .]

	:apply(csb253)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb254 = :ctf {eq B0EVS97Bit  = B@Bit .}

	:apply(csb254)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb255 = :ctf [B@Bit \in B0#EVS97BSeq  .]

	:apply(csb255)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb256 = :ctf {eq rb(S#Sys) = B@Bit .}

	:apply(csb256)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:imp [proofABP1] .

	:apply (rd)

	:imp [proofABP5] by {B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP7] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:imp [proofABP8] by {B:Bit <- B@Bit ; P:Packet <- P@Packet ;}

	:apply (rd)

	:def csb257 = :ctf {eq ac(S#Sys) = B@BSeq,B@Bit .}

	:apply(csb257)

	:def csb258 = :ctf {eq rb(S#Sys) = B1@Bit .}

	:apply(csb258)

	:def csb259 = :cevs [B0@BSeq  .]

	:apply(csb259)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb260 = :cesv [B0@BSeq  .]

	:apply(csb260)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb261 = :ctf {eq ac(S#Sys) = B@BSeq,B@Bit,B1@Bit,B#ESV9102BSeq .}

	:apply(csb261)

	:def csb262 = :ctf {eq rb(S#Sys) = B0ESV9102Bit .}

	:apply(csb262)

	:def csb263 = :ctf {eq B@Bit  = B1@Bit .}

	:apply(csb263)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:def csb264 = :ctf {eq B0ESV9102Bit  = B0@Bit .}

	:apply(csb264)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:imp [proofABP9] by {B0:BSeq <- B#ESV9102BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:imp [proofABP9] by {B0:BSeq <- B#ESV9102BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP9] by {B0:BSeq <- B0@BSeq ; B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:BSeq <- B@BSeq ; B:Bit <- B@Bit ;}

	:apply (rd)

	:imp [proofABP10] by {B0:Bit <- B0@Bit ; B1:Bit <- B1@Bit ; B:Bit <- B@Bit ; P0:PBPSeq <- P0@PBPSeq ; P0:Packet <- P0@Packet ; P1:Packet <- P1@Packet ; P:PBPSeq <- P@PBPSeq
    ; P:Packet <- P@Packet ;}

	:apply (rd)

close