
:goal{
eq [mcs :nonexec] : inv1(S:Sys, p:Pid, q:Pid)  = true .
 eq [mcs1 :nonexec] : inv2(S:Sys, p:Pid, q:Pid)  = true .
 eq [mcs2 :nonexec] : inv3(S:Sys, p:Pid)  = true .
 eq [mcs3 :nonexec] : inv4(S:Sys, p:Pid)  = true .
 eq [mcs4 :nonexec] : inv5(S:Sys, p:Pid, q:Pid)  = true .
 eq [mcs5 :nonexec] : inv6(S:Sys, p:Pid, q:Pid)  = true .
 eq [mcs6 :nonexec] : inv7(S:Sys, p:Pid, q:Pid)  = true .
 eq [mcs7 :nonexec] : mutex(S:Sys, p:Pid, q:Pid)  = true .
}
:ind on (S:Sys)
:apply(si)
:sel(4)
	:apply(tc)

	-- Goal`4-1  -  inv1(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb1#4 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb1#4)

		-- Goal`4-1-1 Success by reduction
		:apply (rd)

		-- Goal`4-1-2  -  inv1(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb2#4 = :ctf [lock(S#Sys, p@Pid)  .]

		:apply(csb2#4)

			-- Goal`4-1-2-1  -  inv1(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb3#4 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb3#4)

				-- Goal`4-1-2-1-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-1-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-1-3  -  inv1(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb4#4 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb4#4)

					-- Goal`4-1-2-1-3-1  -  inv1(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb5#4 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb5#4)

						-- Goal`4-1-2-1-3-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`4-1-2-1-3-1-2 Success by reduction
						:apply (rd)

						-- Goal`4-1-2-1-3-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`4-1-2-1-3-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`4-1-2-1-3-1-5 Success by reduction
						:apply (rd)

						-- Goal`4-1-2-1-3-1-6 Success by reduction
						:apply (rd)

						-- Goal`4-1-2-1-3-1-7 Success by reduction
						:apply (rd)

						-- Goal`4-1-2-1-3-1-8 Success by reduction
						:apply (rd)

						-- Goal`4-1-2-1-3-1-9 Success by reduction
						:apply (rd)

						-- Goal`4-1-2-1-3-1-10 Success by reduction
						:apply (rd)

						-- Goal`4-1-2-1-3-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`4-1-2-1-3-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`4-1-2-1-3-1-13 Success by reduction
						:apply (rd)

						-- Goal`4-1-2-1-3-1-14 Success by reduction
						:apply (rd)

					-- Goal`4-1-2-1-3-2 Success by implication and reduction.
					:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

					:apply (rd)

				-- Goal`4-1-2-1-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-1-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-1-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-1-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-1-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-1-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-1-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-1-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-1-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-1-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-1-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

			-- Goal`4-1-2-2  -  inv1(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb6#4 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb6#4)

				-- Goal`4-1-2-2-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-2-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-2-3  -  inv1(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb7#4 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb7#4)

					-- Goal`4-1-2-2-3-1  -  inv1(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb8#4 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb8#4)

						-- Goal`4-1-2-2-3-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`4-1-2-2-3-1-2 Success by reduction
						:apply (rd)

						-- Goal`4-1-2-2-3-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`4-1-2-2-3-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`4-1-2-2-3-1-5 Success by reduction
						:apply (rd)

						-- Goal`4-1-2-2-3-1-6 Success by reduction
						:apply (rd)

						-- Goal`4-1-2-2-3-1-7 Success by reduction
						:apply (rd)

						-- Goal`4-1-2-2-3-1-8 Success by reduction
						:apply (rd)

						-- Goal`4-1-2-2-3-1-9 Success by reduction
						:apply (rd)

						-- Goal`4-1-2-2-3-1-10 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`4-1-2-2-3-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`4-1-2-2-3-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`4-1-2-2-3-1-13 Success by reduction
						:apply (rd)

						-- Goal`4-1-2-2-3-1-14 Success by reduction
						:apply (rd)

					-- Goal`4-1-2-2-3-2 Success by implication and reduction.
					:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

					:apply (rd)

				-- Goal`4-1-2-2-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-2-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-2-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-2-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-2-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-2-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-2-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-2-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-2-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-2-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`4-1-2-2-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

	-- Goal`4-2  -  inv2(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb9#4 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb9#4)

		-- Goal`4-2-1 Success by reduction
		:apply (rd)

		-- Goal`4-2-2  -  inv2(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb10#4 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb10#4)

			-- Goal`4-2-2-1 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-2-2-2 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-2-2-3  -  inv2(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb11#4 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb11#4)

				-- Goal`4-2-2-3-1  -  inv2(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb12#4 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb12#4)

					-- Goal`4-2-2-3-1-1 Success by reduction
					:apply (rd)

					-- Goal`4-2-2-3-1-2 Success by reduction
					:apply (rd)

					-- Goal`4-2-2-3-1-3  -  inv2(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb13#4 = :ctf [next(S#Sys, p@Pid)  .]

					:apply(csb13#4)

						-- Goal`4-2-2-3-1-3-1 Success by reduction
						:apply (rd)

					-- Goal`4-2-2-3-1-4 Success by reduction
					:apply (rd)

					-- Goal`4-2-2-3-1-5 Success by reduction
					:apply (rd)

					-- Goal`4-2-2-3-1-6 Success by reduction
					:apply (rd)

					-- Goal`4-2-2-3-1-7 Success by implication and reduction.
					:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-2-2-3-1-8 Success by reduction
					:apply (rd)

					-- Goal`4-2-2-3-1-9 Success by reduction
					:apply (rd)

					-- Goal`4-2-2-3-1-10 Success by reduction
					:apply (rd)

					-- Goal`4-2-2-3-1-11 Success by reduction
					:apply (rd)

					-- Goal`4-2-2-3-1-12 Success by reduction
					:apply (rd)

					-- Goal`4-2-2-3-1-13 Success by reduction
					:apply (rd)

					-- Goal`4-2-2-3-1-14 Success by reduction
					:apply (rd)

				-- Goal`4-2-2-3-2 Success by implication and reduction.
				:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:imp [mcs]  by {p:Pid <- P#Pid ; q:Pid <- p@Pid ;}

				:apply (rd)

			-- Goal`4-2-2-4 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-2-2-5 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-2-2-6 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-2-2-7 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-2-2-8 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-2-2-9 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-2-2-10 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-2-2-11 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-2-2-12 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-2-2-13 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-2-2-14 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

	-- Goal`4-3  -  inv3(chnxt2(S#Sys, P#Pid), p@Pid)  - Success
	:def csb14#4 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb14#4)

		-- Goal`4-3-1 Success by reduction
		:apply (rd)

		-- Goal`4-3-2  -  inv3(chnxt2(S#Sys, P#Pid), p@Pid)  - Success
		:def csb15#4 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb15#4)

			-- Goal`4-3-2-1 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`4-3-2-2 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`4-3-2-3  -  inv3(chnxt2(S#Sys, P#Pid), p@Pid)  - Success
			:def csb16#4 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb16#4)

				-- Goal`4-3-2-3-1  -  inv3(chnxt2(S#Sys, P#Pid), p@Pid)  - Success
				:def csb17#4 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb17#4)

					-- Goal`4-3-2-3-1-1 Success by reduction
					:apply (rd)

					-- Goal`4-3-2-3-1-2 Success by reduction
					:apply (rd)

					-- Goal`4-3-2-3-1-3  -  inv3(chnxt2(S#Sys, P#Pid), p@Pid)  - Success
					:def csb18#4 = :ctf [next(S#Sys, p@Pid)  .]

					:apply(csb18#4)

						-- Goal`4-3-2-3-1-3-1 Success by reduction
						:apply (rd)

					-- Goal`4-3-2-3-1-4 Success by reduction
					:apply (rd)

					-- Goal`4-3-2-3-1-5 Success by reduction
					:apply (rd)

					-- Goal`4-3-2-3-1-6 Success by reduction
					:apply (rd)

					-- Goal`4-3-2-3-1-7 Success by reduction
					:apply (rd)

					-- Goal`4-3-2-3-1-8 Success by reduction
					:apply (rd)

					-- Goal`4-3-2-3-1-9 Success by implication and reduction.
					:imp [mcs2]  by {p:Pid <- p@Pid ;}

					:apply (rd)

					-- Goal`4-3-2-3-1-10 Success by reduction
					:apply (rd)

					-- Goal`4-3-2-3-1-11 Success by reduction
					:apply (rd)

					-- Goal`4-3-2-3-1-12 Success by reduction
					:apply (rd)

					-- Goal`4-3-2-3-1-13 Success by reduction
					:apply (rd)

					-- Goal`4-3-2-3-1-14 Success by reduction
					:apply (rd)

				-- Goal`4-3-2-3-2 Success by implication and reduction.
				:imp [mcs2]  by {p:Pid <- p@Pid ;}

				:apply (rd)

			-- Goal`4-3-2-4 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`4-3-2-5 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`4-3-2-6 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`4-3-2-7 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`4-3-2-8 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`4-3-2-9 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`4-3-2-10 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`4-3-2-11 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`4-3-2-12 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`4-3-2-13 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`4-3-2-14 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

	:def csb19#4 = :ctf {eq pc(S#Sys, P#Pid)  = l10 .}

	:apply(csb19#4)

	:def csb20#4 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb20#4)

	:def csb21#4 = :ctf {eq next(S#Sys, P#Pid)  = nop .}

	:apply(csb21#4)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	-- Goal`4-5  -  inv5(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb22#4 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb22#4)

		-- Goal`4-5-1 Success by reduction
		:apply (rd)

		-- Goal`4-5-2  -  inv5(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb23#4 = :ctf {eq next(S#Sys, q@Pid)  = p@Pid .}

		:apply(csb23#4)

			-- Goal`4-5-2-1  -  inv5(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb24#4 = :ctf {eq prede(S#Sys, p@Pid)  = q@Pid .}

			:apply(csb24#4)

				-- Goal`4-5-2-1-1  -  inv5(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb25#4 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb25#4)

					-- Goal`4-5-2-1-1-1 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-1-2 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-1-3  -  inv5(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb26#4 = :ctf [glock(S#Sys)  .]

					:apply(csb26#4)

						-- Goal`4-5-2-1-1-3-1  -  inv5(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb27#4 = :ctf [pc(S#Sys, p@Pid)  .]

						:apply(csb27#4)

							-- Goal`4-5-2-1-1-3-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-1-3-1-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-1-3-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-1-3-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-1-3-1-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-1-3-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-1-3-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-1-3-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-1-3-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-1-3-1-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-1-3-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-1-3-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-1-3-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-1-3-1-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

					-- Goal`4-5-2-1-1-4 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-1-5 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-1-6 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-1-7 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-1-8 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-1-9 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-1-10 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-1-11 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-1-12 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-1-13 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-1-14 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

				-- Goal`4-5-2-1-2  -  inv5(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb28#4 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb28#4)

					-- Goal`4-5-2-1-2-1 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-2-2 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-2-3  -  inv5(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb29#4 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb29#4)

						-- Goal`4-5-2-1-2-3-1  -  inv5(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb30#4 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb30#4)

							-- Goal`4-5-2-1-2-3-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-2-3-1-2 Success by reduction
							:apply (rd)

							-- Goal`4-5-2-1-2-3-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-2-3-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-2-3-1-5 Success by reduction
							:apply (rd)

							-- Goal`4-5-2-1-2-3-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-2-3-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-2-3-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-2-3-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-2-3-1-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-2-3-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-2-3-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-2-3-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`4-5-2-1-2-3-1-14 Success by reduction
							:apply (rd)

						-- Goal`4-5-2-1-2-3-2 Success by implication and reduction.
						:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

					-- Goal`4-5-2-1-2-4 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-2-5 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-2-6 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-2-7 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-2-8 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-2-9 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-2-10 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-2-11 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-2-12 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-2-13 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-5-2-1-2-14 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`4-5-2-2 Success by reduction
			:apply (rd)

	:def csb31#4 = :ctf {eq pc(S#Sys, P#Pid)  = l10 .}

	:apply(csb31#4)

	:def csb32#4 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb32#4)

	:def csb33#4 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb33#4)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb34#4 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb34#4)

	:def csb35#4 = :ctf {eq next(S#Sys, P#Pid)  = nop .}

	:apply(csb35#4)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb36#4 = :ctf {eq pc(S#Sys, P#Pid)  = l10 .}

	:apply(csb36#4)

	:def csb37#4 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb37#4)

	:def csb38#4 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb38#4)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb39#4 = :ctf {eq next(S#Sys, P#Pid)  = nop .}

	:apply(csb39#4)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb40#4 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb40#4)

	:def csb41#4 = :ctf {eq next(S#Sys, P#Pid)  = nop .}

	:apply(csb41#4)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	-- Goal`4-8  -  mutex(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb42#4 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb42#4)

		-- Goal`4-8-1 Success by reduction
		:apply (rd)

		-- Goal`4-8-2  -  mutex(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb43#4 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb43#4)

			-- Goal`4-8-2-1 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-8-2-2 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-8-2-3  -  mutex(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb44#4 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb44#4)

				-- Goal`4-8-2-3-1  -  mutex(chnxt2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb45#4 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb45#4)

					-- Goal`4-8-2-3-1-1 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-8-2-3-1-2 Success by reduction
					:apply (rd)

					-- Goal`4-8-2-3-1-3 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:imp [mcs6]  by {p:Pid <- P#Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`4-8-2-3-1-4 Success by reduction
					:apply (rd)

					-- Goal`4-8-2-3-1-5 Success by reduction
					:apply (rd)

					-- Goal`4-8-2-3-1-6 Success by reduction
					:apply (rd)

					-- Goal`4-8-2-3-1-7 Success by reduction
					:apply (rd)

					-- Goal`4-8-2-3-1-8 Success by reduction
					:apply (rd)

					-- Goal`4-8-2-3-1-9 Success by reduction
					:apply (rd)

					-- Goal`4-8-2-3-1-10 Success by reduction
					:apply (rd)

					-- Goal`4-8-2-3-1-11 Success by reduction
					:apply (rd)

					-- Goal`4-8-2-3-1-12 Success by reduction
					:apply (rd)

					-- Goal`4-8-2-3-1-13 Success by reduction
					:apply (rd)

					-- Goal`4-8-2-3-1-14 Success by reduction
					:apply (rd)

				-- Goal`4-8-2-3-2 Success by implication and reduction.
				:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:imp [mcs6]  by {p:Pid <- P#Pid ; q:Pid <- p@Pid ;}

				:apply (rd)

			-- Goal`4-8-2-4 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-8-2-5 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-8-2-6 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-8-2-7 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-8-2-8 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-8-2-9 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-8-2-10 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-8-2-11 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-8-2-12 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-8-2-13 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`4-8-2-14 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)


:sel(3)
	:apply(tc)

	-- Goal`3-1  -  inv1(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb1#3 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb1#3)

		-- Goal`3-1-1 Success by reduction
		:apply (rd)

		-- Goal`3-1-2  -  inv1(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb2#3 = :ctf [lock(S#Sys, p@Pid)  .]

		:apply(csb2#3)

			-- Goal`3-1-2-1  -  inv1(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb3#3 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb3#3)

				-- Goal`3-1-2-1-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-1-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-1-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-1-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-1-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-1-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-1-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-1-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-1-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-1-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-1-11  -  inv1(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb4#3 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb4#3)

					-- Goal`3-1-2-1-11-1  -  inv1(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb5#3 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb5#3)

						-- Goal`3-1-2-1-11-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`3-1-2-1-11-1-2 Success by reduction
						:apply (rd)

						-- Goal`3-1-2-1-11-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`3-1-2-1-11-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`3-1-2-1-11-1-5 Success by reduction
						:apply (rd)

						-- Goal`3-1-2-1-11-1-6 Success by reduction
						:apply (rd)

						-- Goal`3-1-2-1-11-1-7 Success by reduction
						:apply (rd)

						-- Goal`3-1-2-1-11-1-8 Success by reduction
						:apply (rd)

						-- Goal`3-1-2-1-11-1-9 Success by reduction
						:apply (rd)

						-- Goal`3-1-2-1-11-1-10 Success by reduction
						:apply (rd)

						-- Goal`3-1-2-1-11-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`3-1-2-1-11-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`3-1-2-1-11-1-13 Success by reduction
						:apply (rd)

						-- Goal`3-1-2-1-11-1-14 Success by reduction
						:apply (rd)

					-- Goal`3-1-2-1-11-2 Success by implication and reduction.
					:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

					:apply (rd)

				-- Goal`3-1-2-1-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-1-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-1-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

			-- Goal`3-1-2-2  -  inv1(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb6#3 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb6#3)

				-- Goal`3-1-2-2-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-2-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-2-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-2-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-2-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-2-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-2-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-2-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-2-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-2-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-2-11  -  inv1(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb7#3 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb7#3)

					-- Goal`3-1-2-2-11-1  -  inv1(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb8#3 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb8#3)

						-- Goal`3-1-2-2-11-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`3-1-2-2-11-1-2 Success by reduction
						:apply (rd)

						-- Goal`3-1-2-2-11-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`3-1-2-2-11-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`3-1-2-2-11-1-5 Success by reduction
						:apply (rd)

						-- Goal`3-1-2-2-11-1-6 Success by reduction
						:apply (rd)

						-- Goal`3-1-2-2-11-1-7 Success by reduction
						:apply (rd)

						-- Goal`3-1-2-2-11-1-8 Success by reduction
						:apply (rd)

						-- Goal`3-1-2-2-11-1-9 Success by reduction
						:apply (rd)

						-- Goal`3-1-2-2-11-1-10 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`3-1-2-2-11-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`3-1-2-2-11-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`3-1-2-2-11-1-13 Success by reduction
						:apply (rd)

						-- Goal`3-1-2-2-11-1-14 Success by reduction
						:apply (rd)

					-- Goal`3-1-2-2-11-2 Success by implication and reduction.
					:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

					:apply (rd)

				-- Goal`3-1-2-2-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-2-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`3-1-2-2-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

	-- Goal`3-2  -  inv2(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb9#3 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb9#3)

		-- Goal`3-2-1 Success by reduction
		:apply (rd)

		-- Goal`3-2-2  -  inv2(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb10#3 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb10#3)

			-- Goal`3-2-2-1 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-2-2-2 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-2-2-3 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-2-2-4 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-2-2-5 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-2-2-6 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-2-2-7 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-2-2-8 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-2-2-9 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-2-2-10 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-2-2-11  -  inv2(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb11#3 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb11#3)

				-- Goal`3-2-2-11-1  -  inv2(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb12#3 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb12#3)

					-- Goal`3-2-2-11-1-1 Success by reduction
					:apply (rd)

					-- Goal`3-2-2-11-1-2 Success by reduction
					:apply (rd)

					-- Goal`3-2-2-11-1-3 Success by reduction
					:apply (rd)

					-- Goal`3-2-2-11-1-4 Success by reduction
					:apply (rd)

					-- Goal`3-2-2-11-1-5 Success by reduction
					:apply (rd)

					-- Goal`3-2-2-11-1-6 Success by reduction
					:apply (rd)

					-- Goal`3-2-2-11-1-7 Success by implication and reduction.
					:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-2-2-11-1-8 Success by reduction
					:apply (rd)

					-- Goal`3-2-2-11-1-9 Success by reduction
					:apply (rd)

					-- Goal`3-2-2-11-1-10 Success by reduction
					:apply (rd)

					-- Goal`3-2-2-11-1-11  -  inv2(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb13#3 = :ctf [next(S#Sys, p@Pid)  .]

					:apply(csb13#3)

						-- Goal`3-2-2-11-1-11-1 Success by reduction
						:apply (rd)

					-- Goal`3-2-2-11-1-12 Success by reduction
					:apply (rd)

					-- Goal`3-2-2-11-1-13 Success by reduction
					:apply (rd)

					-- Goal`3-2-2-11-1-14 Success by reduction
					:apply (rd)

				-- Goal`3-2-2-11-2 Success by implication and reduction.
				:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:imp [mcs]  by {p:Pid <- P#Pid ; q:Pid <- p@Pid ;}

				:apply (rd)

			-- Goal`3-2-2-12 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-2-2-13 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-2-2-14 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

	-- Goal`3-3  -  inv3(chnxt(S#Sys, P#Pid), p@Pid)  - Success
	:def csb14#3 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb14#3)

		-- Goal`3-3-1 Success by reduction
		:apply (rd)

		-- Goal`3-3-2  -  inv3(chnxt(S#Sys, P#Pid), p@Pid)  - Success
		:def csb15#3 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb15#3)

			-- Goal`3-3-2-1 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`3-3-2-2 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`3-3-2-3 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`3-3-2-4 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`3-3-2-5 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`3-3-2-6 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`3-3-2-7 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`3-3-2-8 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`3-3-2-9 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`3-3-2-10 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`3-3-2-11  -  inv3(chnxt(S#Sys, P#Pid), p@Pid)  - Success
			:def csb16#3 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb16#3)

				-- Goal`3-3-2-11-1  -  inv3(chnxt(S#Sys, P#Pid), p@Pid)  - Success
				:def csb17#3 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb17#3)

					-- Goal`3-3-2-11-1-1 Success by reduction
					:apply (rd)

					-- Goal`3-3-2-11-1-2 Success by reduction
					:apply (rd)

					-- Goal`3-3-2-11-1-3 Success by reduction
					:apply (rd)

					-- Goal`3-3-2-11-1-4 Success by reduction
					:apply (rd)

					-- Goal`3-3-2-11-1-5 Success by reduction
					:apply (rd)

					-- Goal`3-3-2-11-1-6 Success by reduction
					:apply (rd)

					-- Goal`3-3-2-11-1-7 Success by reduction
					:apply (rd)

					-- Goal`3-3-2-11-1-8 Success by reduction
					:apply (rd)

					-- Goal`3-3-2-11-1-9 Success by implication and reduction.
					:imp [mcs2]  by {p:Pid <- p@Pid ;}

					:apply (rd)

					-- Goal`3-3-2-11-1-10 Success by reduction
					:apply (rd)

					-- Goal`3-3-2-11-1-11  -  inv3(chnxt(S#Sys, P#Pid), p@Pid)  - Success
					:def csb18#3 = :ctf [next(S#Sys, p@Pid)  .]

					:apply(csb18#3)

						-- Goal`3-3-2-11-1-11-1 Success by reduction
						:apply (rd)

					-- Goal`3-3-2-11-1-12 Success by reduction
					:apply (rd)

					-- Goal`3-3-2-11-1-13 Success by reduction
					:apply (rd)

					-- Goal`3-3-2-11-1-14 Success by reduction
					:apply (rd)

				-- Goal`3-3-2-11-2 Success by implication and reduction.
				:imp [mcs2]  by {p:Pid <- p@Pid ;}

				:apply (rd)

			-- Goal`3-3-2-12 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`3-3-2-13 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`3-3-2-14 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

	:def csb19#3 = :ctf {eq pc(S#Sys, P#Pid)  = l7 .}

	:apply(csb19#3)

	:def csb20#3 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb20#3)

	:def csb21#3 = :ctf {eq next(S#Sys, P#Pid)  = nop .}

	:apply(csb21#3)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	-- Goal`3-5  -  inv5(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb22#3 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb22#3)

		-- Goal`3-5-1 Success by reduction
		:apply (rd)

		-- Goal`3-5-2  -  inv5(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb23#3 = :ctf {eq next(S#Sys, q@Pid)  = p@Pid .}

		:apply(csb23#3)

			-- Goal`3-5-2-1  -  inv5(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb24#3 = :ctf {eq prede(S#Sys, p@Pid)  = q@Pid .}

			:apply(csb24#3)

				-- Goal`3-5-2-1-1  -  inv5(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb25#3 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb25#3)

					-- Goal`3-5-2-1-1-1 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-1-2 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-1-3 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-1-4 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-1-5 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-1-6 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-1-7 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-1-8 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-1-9 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-1-10 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-1-11  -  inv5(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb26#3 = :ctf [glock(S#Sys)  .]

					:apply(csb26#3)

						-- Goal`3-5-2-1-1-11-1  -  inv5(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb27#3 = :ctf [pc(S#Sys, p@Pid)  .]

						:apply(csb27#3)

							-- Goal`3-5-2-1-1-11-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-1-11-1-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-1-11-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-1-11-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-1-11-1-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-1-11-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-1-11-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-1-11-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-1-11-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-1-11-1-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-1-11-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-1-11-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-1-11-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-1-11-1-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

					-- Goal`3-5-2-1-1-12 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-1-13 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-1-14 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

				-- Goal`3-5-2-1-2  -  inv5(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb28#3 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb28#3)

					-- Goal`3-5-2-1-2-1 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-2-2 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-2-3 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-2-4 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-2-5 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-2-6 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-2-7 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-2-8 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-2-9 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-2-10 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-2-11  -  inv5(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb29#3 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb29#3)

						-- Goal`3-5-2-1-2-11-1  -  inv5(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb30#3 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb30#3)

							-- Goal`3-5-2-1-2-11-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-2-11-1-2 Success by reduction
							:apply (rd)

							-- Goal`3-5-2-1-2-11-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-2-11-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-2-11-1-5 Success by reduction
							:apply (rd)

							-- Goal`3-5-2-1-2-11-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-2-11-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-2-11-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-2-11-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-2-11-1-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-2-11-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-2-11-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-2-11-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`3-5-2-1-2-11-1-14 Success by reduction
							:apply (rd)

						-- Goal`3-5-2-1-2-11-2 Success by implication and reduction.
						:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

					-- Goal`3-5-2-1-2-12 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-2-13 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-5-2-1-2-14 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`3-5-2-2 Success by reduction
			:apply (rd)

	:def csb31#3 = :ctf {eq pc(S#Sys, P#Pid)  = l7 .}

	:apply(csb31#3)

	:def csb32#3 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb32#3)

	:def csb33#3 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb33#3)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb34#3 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb34#3)

	:def csb35#3 = :ctf {eq next(S#Sys, P#Pid)  = nop .}

	:apply(csb35#3)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb36#3 = :ctf {eq pc(S#Sys, P#Pid)  = l7 .}

	:apply(csb36#3)

	:def csb37#3 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb37#3)

	:def csb38#3 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb38#3)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb39#3 = :ctf {eq next(S#Sys, P#Pid)  = nop .}

	:apply(csb39#3)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb40#3 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb40#3)

	:def csb41#3 = :ctf {eq next(S#Sys, P#Pid)  = nop .}

	:apply(csb41#3)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	-- Goal`3-8  -  mutex(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb42#3 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb42#3)

		-- Goal`3-8-1 Success by reduction
		:apply (rd)

		-- Goal`3-8-2  -  mutex(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb43#3 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb43#3)

			-- Goal`3-8-2-1 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-8-2-2 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-8-2-3 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-8-2-4 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-8-2-5 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-8-2-6 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-8-2-7 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-8-2-8 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-8-2-9 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-8-2-10 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-8-2-11  -  mutex(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb44#3 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb44#3)

				-- Goal`3-8-2-11-1  -  mutex(chnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb45#3 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb45#3)

					-- Goal`3-8-2-11-1-1 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-8-2-11-1-2 Success by reduction
					:apply (rd)

					-- Goal`3-8-2-11-1-3 Success by reduction
					:apply (rd)

					-- Goal`3-8-2-11-1-4 Success by reduction
					:apply (rd)

					-- Goal`3-8-2-11-1-5 Success by reduction
					:apply (rd)

					-- Goal`3-8-2-11-1-6 Success by reduction
					:apply (rd)

					-- Goal`3-8-2-11-1-7 Success by reduction
					:apply (rd)

					-- Goal`3-8-2-11-1-8 Success by reduction
					:apply (rd)

					-- Goal`3-8-2-11-1-9 Success by reduction
					:apply (rd)

					-- Goal`3-8-2-11-1-10 Success by reduction
					:apply (rd)

					-- Goal`3-8-2-11-1-11 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:imp [mcs6]  by {p:Pid <- P#Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`3-8-2-11-1-12 Success by reduction
					:apply (rd)

					-- Goal`3-8-2-11-1-13 Success by reduction
					:apply (rd)

					-- Goal`3-8-2-11-1-14 Success by reduction
					:apply (rd)

				-- Goal`3-8-2-11-2 Success by implication and reduction.
				:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:imp [mcs6]  by {p:Pid <- P#Pid ; q:Pid <- p@Pid ;}

				:apply (rd)

			-- Goal`3-8-2-12 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-8-2-13 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`3-8-2-14 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)


:sel(6)
	:apply(tc)

	-- Goal`6-1  -  inv1(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb1#6 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb1#6)

		-- Goal`6-1-1 Success by reduction
		:apply (rd)

		-- Goal`6-1-2  -  inv1(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb2#6 = :ctf [lock(S#Sys, p@Pid)  .]

		:apply(csb2#6)

			-- Goal`6-1-2-1  -  inv1(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb3#6 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb3#6)

				-- Goal`6-1-2-1-1  -  inv1(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb4#6 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb4#6)

					-- Goal`6-1-2-1-1-1  -  inv1(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb5#6 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb5#6)

						-- Goal`6-1-2-1-1-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`6-1-2-1-1-1-2 Success by reduction
						:apply (rd)

						-- Goal`6-1-2-1-1-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`6-1-2-1-1-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`6-1-2-1-1-1-5 Success by reduction
						:apply (rd)

						-- Goal`6-1-2-1-1-1-6 Success by reduction
						:apply (rd)

						-- Goal`6-1-2-1-1-1-7 Success by reduction
						:apply (rd)

						-- Goal`6-1-2-1-1-1-8 Success by reduction
						:apply (rd)

						-- Goal`6-1-2-1-1-1-9 Success by reduction
						:apply (rd)

						-- Goal`6-1-2-1-1-1-10 Success by reduction
						:apply (rd)

						-- Goal`6-1-2-1-1-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`6-1-2-1-1-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`6-1-2-1-1-1-13 Success by reduction
						:apply (rd)

						-- Goal`6-1-2-1-1-1-14 Success by reduction
						:apply (rd)

					-- Goal`6-1-2-1-1-2 Success by implication and reduction.
					:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

					:apply (rd)

				-- Goal`6-1-2-1-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-1-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-1-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-1-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-1-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-1-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-1-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-1-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-1-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-1-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-1-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-1-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-1-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

			-- Goal`6-1-2-2  -  inv1(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb6#6 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb6#6)

				-- Goal`6-1-2-2-1  -  inv1(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb7#6 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb7#6)

					-- Goal`6-1-2-2-1-1  -  inv1(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb8#6 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb8#6)

						-- Goal`6-1-2-2-1-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`6-1-2-2-1-1-2 Success by reduction
						:apply (rd)

						-- Goal`6-1-2-2-1-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`6-1-2-2-1-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`6-1-2-2-1-1-5 Success by reduction
						:apply (rd)

						-- Goal`6-1-2-2-1-1-6 Success by reduction
						:apply (rd)

						-- Goal`6-1-2-2-1-1-7 Success by reduction
						:apply (rd)

						-- Goal`6-1-2-2-1-1-8 Success by reduction
						:apply (rd)

						-- Goal`6-1-2-2-1-1-9 Success by reduction
						:apply (rd)

						-- Goal`6-1-2-2-1-1-10 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`6-1-2-2-1-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`6-1-2-2-1-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`6-1-2-2-1-1-13 Success by reduction
						:apply (rd)

						-- Goal`6-1-2-2-1-1-14 Success by reduction
						:apply (rd)

					-- Goal`6-1-2-2-1-2 Success by implication and reduction.
					:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

					:apply (rd)

				-- Goal`6-1-2-2-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-2-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-2-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-2-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-2-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-2-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-2-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-2-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-2-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-2-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-2-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-2-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`6-1-2-2-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

	-- Goal`6-2  -  inv2(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb9#6 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb9#6)

		-- Goal`6-2-1 Success by reduction
		:apply (rd)

		-- Goal`6-2-2  -  inv2(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb10#6 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb10#6)

			-- Goal`6-2-2-1  -  inv2(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb11#6 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb11#6)

				-- Goal`6-2-2-1-1  -  inv2(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb12#6 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb12#6)

					-- Goal`6-2-2-1-1-1 Success by reduction
					:apply (rd)

					-- Goal`6-2-2-1-1-2 Success by reduction
					:apply (rd)

					-- Goal`6-2-2-1-1-3 Success by reduction
					:apply (rd)

					-- Goal`6-2-2-1-1-4 Success by reduction
					:apply (rd)

					-- Goal`6-2-2-1-1-5 Success by reduction
					:apply (rd)

					-- Goal`6-2-2-1-1-6 Success by reduction
					:apply (rd)

					-- Goal`6-2-2-1-1-7 Success by implication and reduction.
					:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-2-2-1-1-8 Success by reduction
					:apply (rd)

					-- Goal`6-2-2-1-1-9 Success by reduction
					:apply (rd)

					-- Goal`6-2-2-1-1-10 Success by reduction
					:apply (rd)

					-- Goal`6-2-2-1-1-11 Success by reduction
					:apply (rd)

					-- Goal`6-2-2-1-1-12 Success by reduction
					:apply (rd)

					-- Goal`6-2-2-1-1-13 Success by reduction
					:apply (rd)

					-- Goal`6-2-2-1-1-14 Success by reduction
					:apply (rd)

				-- Goal`6-2-2-1-2 Success by implication and reduction.
				:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:imp [mcs]  by {p:Pid <- P#Pid ; q:Pid <- p@Pid ;}

				:apply (rd)

			-- Goal`6-2-2-2 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-2-2-3 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-2-2-4 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-2-2-5 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-2-2-6 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-2-2-7 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-2-2-8 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-2-2-9 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-2-2-10 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-2-2-11 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-2-2-12 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-2-2-13 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-2-2-14 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

	-- Goal`6-3  -  inv3(exit(S#Sys, P#Pid), p@Pid)  - Success
	:def csb13#6 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb13#6)

		-- Goal`6-3-1 Success by reduction
		:apply (rd)

		-- Goal`6-3-2  -  inv3(exit(S#Sys, P#Pid), p@Pid)  - Success
		:def csb14#6 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb14#6)

			-- Goal`6-3-2-1  -  inv3(exit(S#Sys, P#Pid), p@Pid)  - Success
			:def csb15#6 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb15#6)

				-- Goal`6-3-2-1-1  -  inv3(exit(S#Sys, P#Pid), p@Pid)  - Success
				:def csb16#6 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb16#6)

					-- Goal`6-3-2-1-1-1 Success by reduction
					:apply (rd)

					-- Goal`6-3-2-1-1-2 Success by reduction
					:apply (rd)

					-- Goal`6-3-2-1-1-3 Success by reduction
					:apply (rd)

					-- Goal`6-3-2-1-1-4 Success by reduction
					:apply (rd)

					-- Goal`6-3-2-1-1-5 Success by reduction
					:apply (rd)

					-- Goal`6-3-2-1-1-6 Success by reduction
					:apply (rd)

					-- Goal`6-3-2-1-1-7 Success by reduction
					:apply (rd)

					-- Goal`6-3-2-1-1-8 Success by reduction
					:apply (rd)

					-- Goal`6-3-2-1-1-9 Success by implication and reduction.
					:imp [mcs2]  by {p:Pid <- p@Pid ;}

					:apply (rd)

					-- Goal`6-3-2-1-1-10 Success by reduction
					:apply (rd)

					-- Goal`6-3-2-1-1-11 Success by reduction
					:apply (rd)

					-- Goal`6-3-2-1-1-12 Success by reduction
					:apply (rd)

					-- Goal`6-3-2-1-1-13 Success by reduction
					:apply (rd)

					-- Goal`6-3-2-1-1-14 Success by reduction
					:apply (rd)

				-- Goal`6-3-2-1-2 Success by implication and reduction.
				:imp [mcs2]  by {p:Pid <- p@Pid ;}

				:apply (rd)

			-- Goal`6-3-2-2 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`6-3-2-3 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`6-3-2-4 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`6-3-2-5 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`6-3-2-6 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`6-3-2-7 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`6-3-2-8 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`6-3-2-9 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`6-3-2-10 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`6-3-2-11 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`6-3-2-12 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`6-3-2-13 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`6-3-2-14 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

	:def csb17#6 = :ctf {eq pc(S#Sys, P#Pid)  = cs .}

	:apply(csb17#6)

	:def csb18#6 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb18#6)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	-- Goal`6-5  -  inv5(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb19#6 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb19#6)

		-- Goal`6-5-1 Success by reduction
		:apply (rd)

		-- Goal`6-5-2  -  inv5(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb20#6 = :ctf {eq next(S#Sys, q@Pid)  = p@Pid .}

		:apply(csb20#6)

			-- Goal`6-5-2-1  -  inv5(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb21#6 = :ctf {eq prede(S#Sys, p@Pid)  = q@Pid .}

			:apply(csb21#6)

				-- Goal`6-5-2-1-1  -  inv5(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb22#6 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb22#6)

					-- Goal`6-5-2-1-1-1  -  inv5(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb23#6 = :ctf [glock(S#Sys)  .]

					:apply(csb23#6)

						-- Goal`6-5-2-1-1-1-1  -  inv5(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb24#6 = :ctf [pc(S#Sys, p@Pid)  .]

						:apply(csb24#6)

							-- Goal`6-5-2-1-1-1-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-1-1-1-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-1-1-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-1-1-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-1-1-1-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-1-1-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-1-1-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-1-1-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-1-1-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-1-1-1-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-1-1-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-1-1-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-1-1-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-1-1-1-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

					-- Goal`6-5-2-1-1-2 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-1-3 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-1-4 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-1-5 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-1-6 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-1-7 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-1-8 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-1-9 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-1-10 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-1-11 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-1-12 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-1-13 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-1-14 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

				-- Goal`6-5-2-1-2  -  inv5(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb25#6 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb25#6)

					-- Goal`6-5-2-1-2-1  -  inv5(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb26#6 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb26#6)

						-- Goal`6-5-2-1-2-1-1  -  inv5(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb27#6 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb27#6)

							-- Goal`6-5-2-1-2-1-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-2-1-1-2 Success by reduction
							:apply (rd)

							-- Goal`6-5-2-1-2-1-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-2-1-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-2-1-1-5 Success by reduction
							:apply (rd)

							-- Goal`6-5-2-1-2-1-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-2-1-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-2-1-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-2-1-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-2-1-1-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-2-1-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-2-1-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-2-1-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-5-2-1-2-1-1-14 Success by reduction
							:apply (rd)

						-- Goal`6-5-2-1-2-1-2 Success by implication and reduction.
						:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

					-- Goal`6-5-2-1-2-2 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-2-3 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-2-4 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-2-5 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-2-6 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-2-7 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-2-8 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-2-9 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-2-10 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-2-11 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-2-12 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-2-13 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-5-2-1-2-14 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`6-5-2-2 Success by reduction
			:apply (rd)

	-- Goal`6-6  -  inv6(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb28#6 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb28#6)

		-- Goal`6-6-1 Success by reduction
		:apply (rd)

		-- Goal`6-6-2  -  inv6(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb29#6 = :ctf [lock(S#Sys, p@Pid)  .]

		:apply(csb29#6)

			-- Goal`6-6-2-1  -  inv6(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb30#6 = :ctf [lock(S#Sys, q@Pid)  .]

			:apply(csb30#6)

				-- Goal`6-6-2-1-1 Success by reduction
				:apply (rd)

				-- Goal`6-6-2-1-2  -  inv6(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb31#6 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb31#6)

					-- Goal`6-6-2-1-2-1  -  inv6(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb32#6 = :ctf {eq P#Pid  = p@Pid .}

					:apply(csb32#6)

						-- Goal`6-6-2-1-2-1-1  -  inv6(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb33#6 = :ctf [pc(S#Sys, p@Pid)  .]

						:apply(csb33#6)

							-- Goal`6-6-2-1-2-1-1-1 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-6-2-1-2-1-1-2 Success by reduction
							:apply (rd)

							-- Goal`6-6-2-1-2-1-1-3 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-6-2-1-2-1-1-4 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-6-2-1-2-1-1-5 Success by reduction
							:apply (rd)

							-- Goal`6-6-2-1-2-1-1-6 Success by reduction
							:apply (rd)

							-- Goal`6-6-2-1-2-1-1-7 Success by reduction
							:apply (rd)

							-- Goal`6-6-2-1-2-1-1-8 Success by reduction
							:apply (rd)

							-- Goal`6-6-2-1-2-1-1-9 Success by reduction
							:apply (rd)

							-- Goal`6-6-2-1-2-1-1-10 Success by reduction
							:apply (rd)

							-- Goal`6-6-2-1-2-1-1-11 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-6-2-1-2-1-1-12 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-6-2-1-2-1-1-13 Success by reduction
							:apply (rd)

							-- Goal`6-6-2-1-2-1-1-14 Success by reduction
							:apply (rd)

						-- Goal`6-6-2-1-2-1-2 Success by implication and reduction.
						:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

						:apply (rd)

					-- Goal`6-6-2-1-2-2 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-1-2-3 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-1-2-4 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-1-2-5 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-1-2-6 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-1-2-7 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-1-2-8 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-1-2-9 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-1-2-10 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-1-2-11 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-1-2-12 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-1-2-13 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-1-2-14 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`6-6-2-2  -  inv6(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb34#6 = :ctf [lock(S#Sys, q@Pid)  .]

			:apply(csb34#6)

				-- Goal`6-6-2-2-1 Success by reduction
				:apply (rd)

				-- Goal`6-6-2-2-2  -  inv6(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb35#6 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb35#6)

					-- Goal`6-6-2-2-2-1  -  inv6(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb36#6 = :ctf {eq P#Pid  = p@Pid .}

					:apply(csb36#6)

						-- Goal`6-6-2-2-2-1-1  -  inv6(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb37#6 = :ctf [pc(S#Sys, p@Pid)  .]

						:apply(csb37#6)

							-- Goal`6-6-2-2-2-1-1-1 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-6-2-2-2-1-1-2 Success by reduction
							:apply (rd)

							-- Goal`6-6-2-2-2-1-1-3 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-6-2-2-2-1-1-4 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-6-2-2-2-1-1-5 Success by reduction
							:apply (rd)

							-- Goal`6-6-2-2-2-1-1-6 Success by reduction
							:apply (rd)

							-- Goal`6-6-2-2-2-1-1-7 Success by reduction
							:apply (rd)

							-- Goal`6-6-2-2-2-1-1-8 Success by reduction
							:apply (rd)

							-- Goal`6-6-2-2-2-1-1-9 Success by reduction
							:apply (rd)

							-- Goal`6-6-2-2-2-1-1-10 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-6-2-2-2-1-1-11 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-6-2-2-2-1-1-12 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`6-6-2-2-2-1-1-13 Success by reduction
							:apply (rd)

							-- Goal`6-6-2-2-2-1-1-14 Success by reduction
							:apply (rd)

						-- Goal`6-6-2-2-2-1-2 Success by implication and reduction.
						:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

						:apply (rd)

					-- Goal`6-6-2-2-2-2 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-2-2-3 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-2-2-4 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-2-2-5 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-2-2-6 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-2-2-7 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-2-2-8 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-2-2-9 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-2-2-10 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-2-2-11 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-2-2-12 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-2-2-13 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`6-6-2-2-2-14 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

	:def csb38#6 = :ctf {eq pc(S#Sys, P#Pid)  = cs .}

	:apply(csb38#6)

	:def csb39#6 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb39#6)

	:def csb40#6 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb40#6)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb41#6 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb41#6)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	-- Goal`6-8  -  mutex(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb42#6 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb42#6)

		-- Goal`6-8-1 Success by reduction
		:apply (rd)

		-- Goal`6-8-2  -  mutex(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb43#6 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb43#6)

			-- Goal`6-8-2-1  -  mutex(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb44#6 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb44#6)

				-- Goal`6-8-2-1-1  -  mutex(exit(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb45#6 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb45#6)

					-- Goal`6-8-2-1-1-1 Success by reduction
					:apply (rd)

					-- Goal`6-8-2-1-1-2 Success by reduction
					:apply (rd)

					-- Goal`6-8-2-1-1-3 Success by reduction
					:apply (rd)

					-- Goal`6-8-2-1-1-4 Success by reduction
					:apply (rd)

					-- Goal`6-8-2-1-1-5 Success by reduction
					:apply (rd)

					-- Goal`6-8-2-1-1-6 Success by reduction
					:apply (rd)

					-- Goal`6-8-2-1-1-7 Success by reduction
					:apply (rd)

					-- Goal`6-8-2-1-1-8 Success by reduction
					:apply (rd)

					-- Goal`6-8-2-1-1-9 Success by reduction
					:apply (rd)

					-- Goal`6-8-2-1-1-10 Success by reduction
					:apply (rd)

					-- Goal`6-8-2-1-1-11 Success by reduction
					:apply (rd)

					-- Goal`6-8-2-1-1-12 Success by reduction
					:apply (rd)

					-- Goal`6-8-2-1-1-13 Success by reduction
					:apply (rd)

					-- Goal`6-8-2-1-1-14 Success by reduction
					:apply (rd)

				-- Goal`6-8-2-1-2 Success by implication and reduction.
				:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:imp [mcs6]  by {p:Pid <- P#Pid ; q:Pid <- p@Pid ;}

				:apply (rd)

			-- Goal`6-8-2-2 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-8-2-3 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-8-2-4 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-8-2-5 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-8-2-6 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-8-2-7 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-8-2-8 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-8-2-9 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-8-2-10 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-8-2-11 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-8-2-12 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-8-2-13 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`6-8-2-14 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)


:sel(1)
	:apply(tc)

	-- Goal`1-1  -  inv1(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb1#1 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb1#1)

		-- Goal`1-1-1 Success by reduction
		:apply (rd)

		-- Goal`1-1-2  -  inv1(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb2#1 = :ctf [lock(S#Sys, p@Pid)  .]

		:apply(csb2#1)

			-- Goal`1-1-2-1  -  inv1(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb3#1 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb3#1)

				-- Goal`1-1-2-1-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-1-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-1-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-1-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-1-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-1-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-1-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-1-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-1-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-1-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-1-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-1-12  -  inv1(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb4#1 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb4#1)

					-- Goal`1-1-2-1-12-1  -  inv1(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb5#1 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb5#1)

						-- Goal`1-1-2-1-12-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`1-1-2-1-12-1-2 Success by reduction
						:apply (rd)

						-- Goal`1-1-2-1-12-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`1-1-2-1-12-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`1-1-2-1-12-1-5 Success by reduction
						:apply (rd)

						-- Goal`1-1-2-1-12-1-6 Success by reduction
						:apply (rd)

						-- Goal`1-1-2-1-12-1-7 Success by reduction
						:apply (rd)

						-- Goal`1-1-2-1-12-1-8 Success by reduction
						:apply (rd)

						-- Goal`1-1-2-1-12-1-9 Success by reduction
						:apply (rd)

						-- Goal`1-1-2-1-12-1-10 Success by reduction
						:apply (rd)

						-- Goal`1-1-2-1-12-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`1-1-2-1-12-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`1-1-2-1-12-1-13 Success by reduction
						:apply (rd)

						-- Goal`1-1-2-1-12-1-14 Success by reduction
						:apply (rd)

					-- Goal`1-1-2-1-12-2 Success by implication and reduction.
					:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

					:apply (rd)

				-- Goal`1-1-2-1-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-1-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

			-- Goal`1-1-2-2  -  inv1(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb6#1 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb6#1)

				-- Goal`1-1-2-2-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-2-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-2-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-2-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-2-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-2-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-2-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-2-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-2-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-2-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-2-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-2-12  -  inv1(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb7#1 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb7#1)

					-- Goal`1-1-2-2-12-1  -  inv1(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb8#1 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb8#1)

						-- Goal`1-1-2-2-12-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`1-1-2-2-12-1-2 Success by reduction
						:apply (rd)

						-- Goal`1-1-2-2-12-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`1-1-2-2-12-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`1-1-2-2-12-1-5 Success by reduction
						:apply (rd)

						-- Goal`1-1-2-2-12-1-6 Success by reduction
						:apply (rd)

						-- Goal`1-1-2-2-12-1-7 Success by reduction
						:apply (rd)

						-- Goal`1-1-2-2-12-1-8 Success by reduction
						:apply (rd)

						-- Goal`1-1-2-2-12-1-9 Success by reduction
						:apply (rd)

						-- Goal`1-1-2-2-12-1-10 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`1-1-2-2-12-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`1-1-2-2-12-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`1-1-2-2-12-1-13 Success by reduction
						:apply (rd)

						-- Goal`1-1-2-2-12-1-14 Success by reduction
						:apply (rd)

					-- Goal`1-1-2-2-12-2 Success by implication and reduction.
					:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

					:apply (rd)

				-- Goal`1-1-2-2-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`1-1-2-2-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

	-- Goal`1-2  -  inv2(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb9#1 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb9#1)

		-- Goal`1-2-1 Success by reduction
		:apply (rd)

		-- Goal`1-2-2  -  inv2(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb10#1 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb10#1)

			-- Goal`1-2-2-1 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-2-2-2 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-2-2-3 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-2-2-4 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-2-2-5 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-2-2-6 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-2-2-7 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-2-2-8 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-2-2-9 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-2-2-10 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-2-2-11 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-2-2-12  -  inv2(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb11#1 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb11#1)

				-- Goal`1-2-2-12-1  -  inv2(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb12#1 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb12#1)

					-- Goal`1-2-2-12-1-1 Success by reduction
					:apply (rd)

					-- Goal`1-2-2-12-1-2 Success by reduction
					:apply (rd)

					-- Goal`1-2-2-12-1-3 Success by reduction
					:apply (rd)

					-- Goal`1-2-2-12-1-4 Success by reduction
					:apply (rd)

					-- Goal`1-2-2-12-1-5 Success by reduction
					:apply (rd)

					-- Goal`1-2-2-12-1-6 Success by reduction
					:apply (rd)

					-- Goal`1-2-2-12-1-7 Success by implication and reduction.
					:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-2-2-12-1-8 Success by reduction
					:apply (rd)

					-- Goal`1-2-2-12-1-9 Success by reduction
					:apply (rd)

					-- Goal`1-2-2-12-1-10 Success by reduction
					:apply (rd)

					-- Goal`1-2-2-12-1-11 Success by reduction
					:apply (rd)

					-- Goal`1-2-2-12-1-12  -  inv2(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb13#1 = :ctf {eq glock(S#Sys)  = p@Pid .}

					:apply(csb13#1)

						-- Goal`1-2-2-12-1-12-1 Success by reduction
						:apply (rd)

						-- Goal`1-2-2-12-1-12-2 Success by reduction
						:apply (rd)

					-- Goal`1-2-2-12-1-13 Success by reduction
					:apply (rd)

					-- Goal`1-2-2-12-1-14 Success by reduction
					:apply (rd)

				-- Goal`1-2-2-12-2 Success by implication and reduction.
				:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:imp [mcs]  by {p:Pid <- P#Pid ; q:Pid <- p@Pid ;}

				:apply (rd)

			-- Goal`1-2-2-13 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-2-2-14 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

	-- Goal`1-3  -  inv3(chglk(S#Sys, P#Pid), p@Pid)  - Success
	:def csb14#1 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb14#1)

		-- Goal`1-3-1 Success by reduction
		:apply (rd)

		-- Goal`1-3-2  -  inv3(chglk(S#Sys, P#Pid), p@Pid)  - Success
		:def csb15#1 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb15#1)

			-- Goal`1-3-2-1 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`1-3-2-2 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`1-3-2-3 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`1-3-2-4 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`1-3-2-5 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`1-3-2-6 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`1-3-2-7 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`1-3-2-8 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`1-3-2-9 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`1-3-2-10 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`1-3-2-11 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`1-3-2-12  -  inv3(chglk(S#Sys, P#Pid), p@Pid)  - Success
			:def csb16#1 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb16#1)

				-- Goal`1-3-2-12-1  -  inv3(chglk(S#Sys, P#Pid), p@Pid)  - Success
				:def csb17#1 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb17#1)

					-- Goal`1-3-2-12-1-1 Success by reduction
					:apply (rd)

					-- Goal`1-3-2-12-1-2 Success by reduction
					:apply (rd)

					-- Goal`1-3-2-12-1-3 Success by reduction
					:apply (rd)

					-- Goal`1-3-2-12-1-4 Success by reduction
					:apply (rd)

					-- Goal`1-3-2-12-1-5 Success by reduction
					:apply (rd)

					-- Goal`1-3-2-12-1-6 Success by reduction
					:apply (rd)

					-- Goal`1-3-2-12-1-7 Success by reduction
					:apply (rd)

					-- Goal`1-3-2-12-1-8 Success by reduction
					:apply (rd)

					-- Goal`1-3-2-12-1-9 Success by implication and reduction.
					:imp [mcs2]  by {p:Pid <- p@Pid ;}

					:apply (rd)

					-- Goal`1-3-2-12-1-10 Success by reduction
					:apply (rd)

					-- Goal`1-3-2-12-1-11 Success by reduction
					:apply (rd)

					-- Goal`1-3-2-12-1-12  -  inv3(chglk(S#Sys, P#Pid), p@Pid)  - Success
					:def csb18#1 = :ctf {eq glock(S#Sys)  = p@Pid .}

					:apply(csb18#1)

						-- Goal`1-3-2-12-1-12-1 Success by reduction
						:apply (rd)

						-- Goal`1-3-2-12-1-12-2 Success by reduction
						:apply (rd)

					-- Goal`1-3-2-12-1-13 Success by reduction
					:apply (rd)

					-- Goal`1-3-2-12-1-14 Success by reduction
					:apply (rd)

				-- Goal`1-3-2-12-2 Success by implication and reduction.
				:imp [mcs2]  by {p:Pid <- p@Pid ;}

				:apply (rd)

			-- Goal`1-3-2-13 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`1-3-2-14 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

	:def csb19#1 = :ctf {eq pc(S#Sys, P#Pid)  = l8 .}

	:apply(csb19#1)

	:def csb20#1 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb20#1)

	:def csb21#1 = :ctf {eq glock(S#Sys)  = P#Pid .}

	:apply(csb21#1)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb22#1 = :ctf {eq glock(S#Sys)  = P#Pid .}

	:apply(csb22#1)

	:def csb23#1 = :ctf {eq pc(S#Sys, p@Pid)  = cs .}

	:apply(csb23#1)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb24#1 = :ctf {eq pc(S#Sys, p@Pid)  = l10 .}

	:apply(csb24#1)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb25#1 = :ctf {eq pc(S#Sys, p@Pid)  = l11 .}

	:apply(csb25#1)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb26#1 = :ctf {eq pc(S#Sys, p@Pid)  = l3 .}

	:apply(csb26#1)

	:def csb27#1 = :ctf {eq prede(S#Sys, p@Pid)  = nop .}

	:apply(csb27#1)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:imp [mcs]  by {p:Pid <- P#Pid ; q:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb28#1 = :ctf {eq pc(S#Sys, p@Pid)  = l6 .}

	:apply(csb28#1)

	:def csb29#1 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb29#1)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb30#1 = :ctf {eq pc(S#Sys, p@Pid)  = l7 .}

	:apply(csb30#1)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb31#1 = :ctf {eq pc(S#Sys, p@Pid)  = l8 .}

	:apply(csb31#1)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	-- Goal`1-5  -  inv5(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb32#1 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb32#1)

		-- Goal`1-5-1 Success by reduction
		:apply (rd)

		-- Goal`1-5-2  -  inv5(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb33#1 = :ctf {eq next(S#Sys, q@Pid)  = p@Pid .}

		:apply(csb33#1)

			-- Goal`1-5-2-1  -  inv5(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb34#1 = :ctf {eq prede(S#Sys, p@Pid)  = q@Pid .}

			:apply(csb34#1)

				-- Goal`1-5-2-1-1  -  inv5(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb35#1 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb35#1)

					-- Goal`1-5-2-1-1-1 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-1-2 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-1-3 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-1-4 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-1-5 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-1-6 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-1-7 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-1-8 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-1-9 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-1-10 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-1-11 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-1-12  -  inv5(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb36#1 = :ctf [glock(S#Sys)  .]

					:apply(csb36#1)

						-- Goal`1-5-2-1-1-12-1  -  inv5(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb37#1 = :ctf [pc(S#Sys, p@Pid)  .]

						:apply(csb37#1)

							-- Goal`1-5-2-1-1-12-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-1-12-1-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-1-12-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-1-12-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-1-12-1-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-1-12-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-1-12-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-1-12-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-1-12-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-1-12-1-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-1-12-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-1-12-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-1-12-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-1-12-1-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- P#Pid ;}

							:apply (rd)

					-- Goal`1-5-2-1-1-13 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-1-14 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

				-- Goal`1-5-2-1-2  -  inv5(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb38#1 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb38#1)

					-- Goal`1-5-2-1-2-1 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-2-2 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-2-3 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-2-4 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-2-5 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-2-6 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-2-7 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-2-8 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-2-9 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-2-10 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-2-11 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-2-12  -  inv5(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb39#1 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb39#1)

						-- Goal`1-5-2-1-2-12-1  -  inv5(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb40#1 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb40#1)

							-- Goal`1-5-2-1-2-12-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-2-12-1-2 Success by reduction
							:apply (rd)

							-- Goal`1-5-2-1-2-12-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-2-12-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-2-12-1-5 Success by reduction
							:apply (rd)

							-- Goal`1-5-2-1-2-12-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-2-12-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-2-12-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-2-12-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-2-12-1-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-2-12-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-2-12-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-2-12-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`1-5-2-1-2-12-1-14 Success by reduction
							:apply (rd)

						-- Goal`1-5-2-1-2-12-2 Success by implication and reduction.
						:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

					-- Goal`1-5-2-1-2-13 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-5-2-1-2-14 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`1-5-2-2 Success by reduction
			:apply (rd)

	:def csb41#1 = :ctf {eq pc(S#Sys, P#Pid)  = l8 .}

	:apply(csb41#1)

	:def csb42#1 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb42#1)

	:def csb43#1 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb43#1)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb44#1 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb44#1)

	:def csb45#1 = :ctf {eq glock(S#Sys)  = P#Pid .}

	:apply(csb45#1)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb46#1 = :ctf {eq pc(S#Sys, P#Pid)  = l8 .}

	:apply(csb46#1)

	:def csb47#1 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb47#1)

	:def csb48#1 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb48#1)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb49#1 = :ctf {eq glock(S#Sys)  = P#Pid .}

	:apply(csb49#1)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb50#1 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb50#1)

	:def csb51#1 = :ctf {eq glock(S#Sys)  = P#Pid .}

	:apply(csb51#1)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	-- Goal`1-8  -  mutex(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb52#1 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb52#1)

		-- Goal`1-8-1 Success by reduction
		:apply (rd)

		-- Goal`1-8-2  -  mutex(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb53#1 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb53#1)

			-- Goal`1-8-2-1 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-8-2-2 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-8-2-3 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-8-2-4 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-8-2-5 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-8-2-6 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-8-2-7 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-8-2-8 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-8-2-9 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-8-2-10 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-8-2-11 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-8-2-12  -  mutex(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb54#1 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb54#1)

				-- Goal`1-8-2-12-1  -  mutex(chglk(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb55#1 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb55#1)

					-- Goal`1-8-2-12-1-1 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-8-2-12-1-2 Success by reduction
					:apply (rd)

					-- Goal`1-8-2-12-1-3 Success by reduction
					:apply (rd)

					-- Goal`1-8-2-12-1-4 Success by reduction
					:apply (rd)

					-- Goal`1-8-2-12-1-5 Success by reduction
					:apply (rd)

					-- Goal`1-8-2-12-1-6 Success by reduction
					:apply (rd)

					-- Goal`1-8-2-12-1-7 Success by reduction
					:apply (rd)

					-- Goal`1-8-2-12-1-8 Success by reduction
					:apply (rd)

					-- Goal`1-8-2-12-1-9 Success by reduction
					:apply (rd)

					-- Goal`1-8-2-12-1-10 Success by reduction
					:apply (rd)

					-- Goal`1-8-2-12-1-11 Success by reduction
					:apply (rd)

					-- Goal`1-8-2-12-1-12 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:imp [mcs6]  by {p:Pid <- P#Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`1-8-2-12-1-13 Success by reduction
					:apply (rd)

					-- Goal`1-8-2-12-1-14 Success by reduction
					:apply (rd)

				-- Goal`1-8-2-12-2 Success by implication and reduction.
				:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:imp [mcs6]  by {p:Pid <- P#Pid ; q:Pid <- p@Pid ;}

				:apply (rd)

			-- Goal`1-8-2-13 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`1-8-2-14 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)


:sel(8)
	:apply(tc)

	-- Goal`8-1  -  inv1(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb1#8 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb1#8)

		-- Goal`8-1-1 Success by reduction
		:apply (rd)

		-- Goal`8-1-2  -  inv1(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb2#8 = :ctf [lock(S#Sys, p@Pid)  .]

		:apply(csb2#8)

			-- Goal`8-1-2-1  -  inv1(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb3#8 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb3#8)

				-- Goal`8-1-2-1-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-1-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-1-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-1-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-1-5  -  inv1(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb4#8 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb4#8)

					-- Goal`8-1-2-1-5-1  -  inv1(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb5#8 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb5#8)

						-- Goal`8-1-2-1-5-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`8-1-2-1-5-1-2 Success by reduction
						:apply (rd)

						-- Goal`8-1-2-1-5-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`8-1-2-1-5-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`8-1-2-1-5-1-5 Success by reduction
						:apply (rd)

						-- Goal`8-1-2-1-5-1-6 Success by reduction
						:apply (rd)

						-- Goal`8-1-2-1-5-1-7 Success by reduction
						:apply (rd)

						-- Goal`8-1-2-1-5-1-8 Success by reduction
						:apply (rd)

						-- Goal`8-1-2-1-5-1-9 Success by reduction
						:apply (rd)

						-- Goal`8-1-2-1-5-1-10 Success by reduction
						:apply (rd)

						-- Goal`8-1-2-1-5-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`8-1-2-1-5-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`8-1-2-1-5-1-13 Success by reduction
						:apply (rd)

						-- Goal`8-1-2-1-5-1-14 Success by reduction
						:apply (rd)

					-- Goal`8-1-2-1-5-2  -  inv1(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb6#8 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb6#8)

						-- Goal`8-1-2-1-5-2-1  -  inv1(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb7#8 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb7#8)

							-- Goal`8-1-2-1-5-2-1-1 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-1-5-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-1-5-2-1-3 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-1-5-2-1-4 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-1-5-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-1-5-2-1-6 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-1-5-2-1-7 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-1-2-1-5-2-1-8 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-1-5-2-1-9 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-1-5-2-1-10 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-1-5-2-1-11 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-1-5-2-1-12 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-1-5-2-1-13 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-1-5-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`8-1-2-1-5-2-2 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

				-- Goal`8-1-2-1-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-1-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-1-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-1-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-1-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-1-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-1-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-1-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-1-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

			-- Goal`8-1-2-2  -  inv1(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb8#8 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb8#8)

				-- Goal`8-1-2-2-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-2-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-2-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-2-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-2-5  -  inv1(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb9#8 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb9#8)

					-- Goal`8-1-2-2-5-1  -  inv1(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb10#8 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb10#8)

						-- Goal`8-1-2-2-5-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`8-1-2-2-5-1-2 Success by reduction
						:apply (rd)

						-- Goal`8-1-2-2-5-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`8-1-2-2-5-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`8-1-2-2-5-1-5 Success by reduction
						:apply (rd)

						-- Goal`8-1-2-2-5-1-6 Success by reduction
						:apply (rd)

						-- Goal`8-1-2-2-5-1-7 Success by reduction
						:apply (rd)

						-- Goal`8-1-2-2-5-1-8 Success by reduction
						:apply (rd)

						-- Goal`8-1-2-2-5-1-9 Success by reduction
						:apply (rd)

						-- Goal`8-1-2-2-5-1-10 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`8-1-2-2-5-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`8-1-2-2-5-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`8-1-2-2-5-1-13 Success by reduction
						:apply (rd)

						-- Goal`8-1-2-2-5-1-14 Success by reduction
						:apply (rd)

					-- Goal`8-1-2-2-5-2  -  inv1(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb11#8 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb11#8)

						-- Goal`8-1-2-2-5-2-1  -  inv1(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb12#8 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb12#8)

							-- Goal`8-1-2-2-5-2-1-1 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-2-5-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-2-5-2-1-3 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-2-5-2-1-4 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-2-5-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-2-5-2-1-6 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-2-5-2-1-7 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-1-2-2-5-2-1-8 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-2-5-2-1-9 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-2-5-2-1-10 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-2-5-2-1-11 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-2-5-2-1-12 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-2-5-2-1-13 Success by reduction
							:apply (rd)

							-- Goal`8-1-2-2-5-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`8-1-2-2-5-2-2 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

				-- Goal`8-1-2-2-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-2-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-2-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-2-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-2-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-2-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-2-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-2-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`8-1-2-2-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

	-- Goal`8-2  -  inv2(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb13#8 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb13#8)

		-- Goal`8-2-1 Success by reduction
		:apply (rd)

		-- Goal`8-2-2  -  inv2(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb14#8 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb14#8)

			-- Goal`8-2-2-1 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-2-2-2 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-2-2-3 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-2-2-4 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-2-2-5  -  inv2(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb15#8 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb15#8)

				-- Goal`8-2-2-5-1  -  inv2(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb16#8 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb16#8)

					-- Goal`8-2-2-5-1-1 Success by reduction
					:apply (rd)

					-- Goal`8-2-2-5-1-2 Success by reduction
					:apply (rd)

					-- Goal`8-2-2-5-1-3 Success by reduction
					:apply (rd)

					-- Goal`8-2-2-5-1-4 Success by reduction
					:apply (rd)

					-- Goal`8-2-2-5-1-5 Success by reduction
					:apply (rd)

					-- Goal`8-2-2-5-1-6 Success by reduction
					:apply (rd)

					-- Goal`8-2-2-5-1-7 Success by implication and reduction.
					:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-2-2-5-1-8 Success by reduction
					:apply (rd)

					-- Goal`8-2-2-5-1-9 Success by reduction
					:apply (rd)

					-- Goal`8-2-2-5-1-10 Success by reduction
					:apply (rd)

					-- Goal`8-2-2-5-1-11 Success by reduction
					:apply (rd)

					-- Goal`8-2-2-5-1-12 Success by reduction
					:apply (rd)

					-- Goal`8-2-2-5-1-13 Success by reduction
					:apply (rd)

					-- Goal`8-2-2-5-1-14 Success by reduction
					:apply (rd)

				-- Goal`8-2-2-5-2  -  inv2(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb17#8 = :ctf {eq P#Pid  = q@Pid .}

				:apply(csb17#8)

					-- Goal`8-2-2-5-2-1  -  inv2(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb18#8 = :ctf [pc(S#Sys, q@Pid)  .]

					:apply(csb18#8)

						-- Goal`8-2-2-5-2-1-1 Success by reduction
						:apply (rd)

						-- Goal`8-2-2-5-2-1-2 Success by reduction
						:apply (rd)

						-- Goal`8-2-2-5-2-1-3 Success by reduction
						:apply (rd)

						-- Goal`8-2-2-5-2-1-4 Success by reduction
						:apply (rd)

						-- Goal`8-2-2-5-2-1-5 Success by reduction
						:apply (rd)

						-- Goal`8-2-2-5-2-1-6 Success by reduction
						:apply (rd)

						-- Goal`8-2-2-5-2-1-7 Success by implication and reduction.
						:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`8-2-2-5-2-1-8 Success by reduction
						:apply (rd)

						-- Goal`8-2-2-5-2-1-9 Success by reduction
						:apply (rd)

						-- Goal`8-2-2-5-2-1-10 Success by reduction
						:apply (rd)

						-- Goal`8-2-2-5-2-1-11 Success by reduction
						:apply (rd)

						-- Goal`8-2-2-5-2-1-12 Success by reduction
						:apply (rd)

						-- Goal`8-2-2-5-2-1-13 Success by reduction
						:apply (rd)

						-- Goal`8-2-2-5-2-1-14 Success by reduction
						:apply (rd)

					-- Goal`8-2-2-5-2-2 Success by implication and reduction.
					:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`8-2-2-6 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-2-2-7 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-2-2-8 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-2-2-9 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-2-2-10 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-2-2-11 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-2-2-12 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-2-2-13 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-2-2-14 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

	-- Goal`8-3  -  inv3(go2rs2(S#Sys, P#Pid), p@Pid)  - Success
	:def csb19#8 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb19#8)

		-- Goal`8-3-1 Success by reduction
		:apply (rd)

		-- Goal`8-3-2  -  inv3(go2rs2(S#Sys, P#Pid), p@Pid)  - Success
		:def csb20#8 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb20#8)

			-- Goal`8-3-2-1 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`8-3-2-2 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`8-3-2-3 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`8-3-2-4 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`8-3-2-5  -  inv3(go2rs2(S#Sys, P#Pid), p@Pid)  - Success
			:def csb21#8 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb21#8)

				-- Goal`8-3-2-5-1  -  inv3(go2rs2(S#Sys, P#Pid), p@Pid)  - Success
				:def csb22#8 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb22#8)

					-- Goal`8-3-2-5-1-1 Success by reduction
					:apply (rd)

					-- Goal`8-3-2-5-1-2 Success by reduction
					:apply (rd)

					-- Goal`8-3-2-5-1-3 Success by reduction
					:apply (rd)

					-- Goal`8-3-2-5-1-4 Success by reduction
					:apply (rd)

					-- Goal`8-3-2-5-1-5 Success by reduction
					:apply (rd)

					-- Goal`8-3-2-5-1-6 Success by reduction
					:apply (rd)

					-- Goal`8-3-2-5-1-7 Success by reduction
					:apply (rd)

					-- Goal`8-3-2-5-1-8 Success by reduction
					:apply (rd)

					-- Goal`8-3-2-5-1-9 Success by implication and reduction.
					:imp [mcs2]  by {p:Pid <- p@Pid ;}

					:apply (rd)

					-- Goal`8-3-2-5-1-10 Success by reduction
					:apply (rd)

					-- Goal`8-3-2-5-1-11 Success by reduction
					:apply (rd)

					-- Goal`8-3-2-5-1-12 Success by reduction
					:apply (rd)

					-- Goal`8-3-2-5-1-13 Success by reduction
					:apply (rd)

					-- Goal`8-3-2-5-1-14 Success by reduction
					:apply (rd)

				-- Goal`8-3-2-5-2 Success by implication and reduction.
				:imp [mcs2]  by {p:Pid <- p@Pid ;}

				:apply (rd)

			-- Goal`8-3-2-6 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`8-3-2-7 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`8-3-2-8 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`8-3-2-9 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`8-3-2-10 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`8-3-2-11 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`8-3-2-12 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`8-3-2-13 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`8-3-2-14 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

	:def csb23#8 = :ctf {eq pc(S#Sys, P#Pid)  = l12 .}

	:apply(csb23#8)

	:def csb24#8 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb24#8)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	-- Goal`8-5  -  inv5(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb25#8 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb25#8)

		-- Goal`8-5-1 Success by reduction
		:apply (rd)

		-- Goal`8-5-2  -  inv5(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb26#8 = :ctf {eq next(S#Sys, q@Pid)  = p@Pid .}

		:apply(csb26#8)

			-- Goal`8-5-2-1  -  inv5(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb27#8 = :ctf {eq prede(S#Sys, p@Pid)  = q@Pid .}

			:apply(csb27#8)

				-- Goal`8-5-2-1-1  -  inv5(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb28#8 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb28#8)

					-- Goal`8-5-2-1-1-1  -  inv5(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb29#8 = :ctf [lock(S#Sys, p@Pid)  .]

					:apply(csb29#8)

						-- Goal`8-5-2-1-1-1-1  -  inv5(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb30#8 = :ctf [pc(S#Sys, p@Pid)  .]

						:apply(csb30#8)

							-- Goal`8-5-2-1-1-1-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-1-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-1-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-1-10 Success by reduction
							:apply (rd)

							-- Goal`8-5-2-1-1-1-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-1-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

						-- Goal`8-5-2-1-1-1-2  -  inv5(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb31#8 = :ctf [pc(S#Sys, p@Pid)  .]

						:apply(csb31#8)

							-- Goal`8-5-2-1-1-1-2-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-2-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-2-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-2-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-2-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-2-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-2-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-2-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-2-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-2-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-2-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-2-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-2-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-1-2-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

					-- Goal`8-5-2-1-1-2  -  inv5(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb32#8 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb32#8)

						-- Goal`8-5-2-1-1-2-1  -  inv5(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb33#8 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb33#8)

							-- Goal`8-5-2-1-1-2-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`8-5-2-1-1-2-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`8-5-2-1-1-2-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-1-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`8-5-2-1-1-2-2  -  inv5(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb34#8 = :ctf [pc(S#Sys, P#Pid)  .]

						:apply(csb34#8)

							-- Goal`8-5-2-1-1-2-2-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-2-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-2-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-2-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-2-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-2-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-2-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-2-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-2-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-2-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-2-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-2-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-2-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-1-2-2-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

				-- Goal`8-5-2-1-2  -  inv5(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb35#8 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb35#8)

					-- Goal`8-5-2-1-2-1 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-5-2-1-2-2 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-5-2-1-2-3 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-5-2-1-2-4 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-5-2-1-2-5  -  inv5(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb36#8 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb36#8)

						-- Goal`8-5-2-1-2-5-1  -  inv5(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb37#8 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb37#8)

							-- Goal`8-5-2-1-2-5-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-2-5-1-2 Success by reduction
							:apply (rd)

							-- Goal`8-5-2-1-2-5-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-2-5-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-2-5-1-5 Success by reduction
							:apply (rd)

							-- Goal`8-5-2-1-2-5-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-2-5-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-2-5-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-2-5-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-2-5-1-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-2-5-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-2-5-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-2-5-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-5-2-1-2-5-1-14 Success by reduction
							:apply (rd)

						-- Goal`8-5-2-1-2-5-2 Success by implication and reduction.
						:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

					-- Goal`8-5-2-1-2-6 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-5-2-1-2-7 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-5-2-1-2-8 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-5-2-1-2-9 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-5-2-1-2-10 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-5-2-1-2-11 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-5-2-1-2-12 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-5-2-1-2-13 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-5-2-1-2-14 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`8-5-2-2 Success by reduction
			:apply (rd)

	-- Goal`8-6  -  inv6(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb38#8 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb38#8)

		-- Goal`8-6-1 Success by reduction
		:apply (rd)

		-- Goal`8-6-2  -  inv6(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb39#8 = :ctf [lock(S#Sys, p@Pid)  .]

		:apply(csb39#8)

			-- Goal`8-6-2-1  -  inv6(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb40#8 = :ctf [lock(S#Sys, q@Pid)  .]

			:apply(csb40#8)

				-- Goal`8-6-2-1-1 Success by reduction
				:apply (rd)

				-- Goal`8-6-2-1-2  -  inv6(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb41#8 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb41#8)

					-- Goal`8-6-2-1-2-1 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-1-2-2 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-1-2-3 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-1-2-4 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-1-2-5  -  inv6(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb42#8 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb42#8)

						-- Goal`8-6-2-1-2-5-1  -  inv6(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb43#8 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb43#8)

							-- Goal`8-6-2-1-2-5-1-1 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-1-2-5-1-2 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-1-2-5-1-3 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-1-2-5-1-4 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-1-2-5-1-5 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-1-2-5-1-6 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-1-2-5-1-7 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-1-2-5-1-8 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-1-2-5-1-9 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-1-2-5-1-10 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-6-2-1-2-5-1-11 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-1-2-5-1-12 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-1-2-5-1-13 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-1-2-5-1-14 Success by reduction
							:apply (rd)

						-- Goal`8-6-2-1-2-5-2  -  inv6(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb44#8 = :ctf [glock(S#Sys)  .]

						:apply(csb44#8)

							-- Goal`8-6-2-1-2-5-2-1 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- q@Pid ;}

							:apply (rd)

					-- Goal`8-6-2-1-2-6 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-1-2-7 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-1-2-8 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-1-2-9 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-1-2-10 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-1-2-11 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-1-2-12 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-1-2-13 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-1-2-14 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`8-6-2-2  -  inv6(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb45#8 = :ctf [lock(S#Sys, q@Pid)  .]

			:apply(csb45#8)

				-- Goal`8-6-2-2-1 Success by reduction
				:apply (rd)

				-- Goal`8-6-2-2-2  -  inv6(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb46#8 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb46#8)

					-- Goal`8-6-2-2-2-1 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-2-2-2 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-2-2-3 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-2-2-4 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-2-2-5  -  inv6(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb47#8 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb47#8)

						-- Goal`8-6-2-2-2-5-1  -  inv6(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb48#8 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb48#8)

							-- Goal`8-6-2-2-2-5-1-1 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-2-2-5-1-2 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-2-2-5-1-3 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-2-2-5-1-4 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-2-2-5-1-5 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-2-2-5-1-6 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-2-2-5-1-7 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-2-2-5-1-8 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-2-2-5-1-9 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-2-2-5-1-10 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`8-6-2-2-2-5-1-11 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-2-2-5-1-12 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-2-2-5-1-13 Success by reduction
							:apply (rd)

							-- Goal`8-6-2-2-2-5-1-14 Success by reduction
							:apply (rd)

						-- Goal`8-6-2-2-2-5-2  -  inv6(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb49#8 = :ctf [glock(S#Sys)  .]

						:apply(csb49#8)

							-- Goal`8-6-2-2-2-5-2-1 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- q@Pid ;}

							:apply (rd)

					-- Goal`8-6-2-2-2-6 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-2-2-7 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-2-2-8 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-2-2-9 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-2-2-10 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-2-2-11 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-2-2-12 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-2-2-13 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-6-2-2-2-14 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

	:def csb50#8 = :ctf {eq pc(S#Sys, P#Pid)  = l12 .}

	:apply(csb50#8)

	:def csb51#8 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb51#8)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb52#8 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb52#8)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	-- Goal`8-8  -  mutex(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb53#8 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb53#8)

		-- Goal`8-8-1 Success by reduction
		:apply (rd)

		-- Goal`8-8-2  -  mutex(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb54#8 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb54#8)

			-- Goal`8-8-2-1 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-8-2-2 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-8-2-3 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-8-2-4 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-8-2-5  -  mutex(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb55#8 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb55#8)

				-- Goal`8-8-2-5-1  -  mutex(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb56#8 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb56#8)

					-- Goal`8-8-2-5-1-1 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`8-8-2-5-1-2 Success by reduction
					:apply (rd)

					-- Goal`8-8-2-5-1-3 Success by reduction
					:apply (rd)

					-- Goal`8-8-2-5-1-4 Success by reduction
					:apply (rd)

					-- Goal`8-8-2-5-1-5 Success by reduction
					:apply (rd)

					-- Goal`8-8-2-5-1-6 Success by reduction
					:apply (rd)

					-- Goal`8-8-2-5-1-7 Success by reduction
					:apply (rd)

					-- Goal`8-8-2-5-1-8 Success by reduction
					:apply (rd)

					-- Goal`8-8-2-5-1-9 Success by reduction
					:apply (rd)

					-- Goal`8-8-2-5-1-10 Success by reduction
					:apply (rd)

					-- Goal`8-8-2-5-1-11 Success by reduction
					:apply (rd)

					-- Goal`8-8-2-5-1-12 Success by reduction
					:apply (rd)

					-- Goal`8-8-2-5-1-13 Success by reduction
					:apply (rd)

					-- Goal`8-8-2-5-1-14 Success by reduction
					:apply (rd)

				-- Goal`8-8-2-5-2  -  mutex(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb57#8 = :ctf {eq P#Pid  = q@Pid .}

				:apply(csb57#8)

					-- Goal`8-8-2-5-2-1  -  mutex(go2rs2(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb58#8 = :ctf [pc(S#Sys, q@Pid)  .]

					:apply(csb58#8)

						-- Goal`8-8-2-5-2-1-1 Success by implication and reduction.
						:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`8-8-2-5-2-1-2 Success by reduction
						:apply (rd)

						-- Goal`8-8-2-5-2-1-3 Success by reduction
						:apply (rd)

						-- Goal`8-8-2-5-2-1-4 Success by reduction
						:apply (rd)

						-- Goal`8-8-2-5-2-1-5 Success by reduction
						:apply (rd)

						-- Goal`8-8-2-5-2-1-6 Success by reduction
						:apply (rd)

						-- Goal`8-8-2-5-2-1-7 Success by reduction
						:apply (rd)

						-- Goal`8-8-2-5-2-1-8 Success by reduction
						:apply (rd)

						-- Goal`8-8-2-5-2-1-9 Success by reduction
						:apply (rd)

						-- Goal`8-8-2-5-2-1-10 Success by reduction
						:apply (rd)

						-- Goal`8-8-2-5-2-1-11 Success by reduction
						:apply (rd)

						-- Goal`8-8-2-5-2-1-12 Success by reduction
						:apply (rd)

						-- Goal`8-8-2-5-2-1-13 Success by reduction
						:apply (rd)

						-- Goal`8-8-2-5-2-1-14 Success by reduction
						:apply (rd)

					-- Goal`8-8-2-5-2-2 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`8-8-2-6 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-8-2-7 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-8-2-8 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-8-2-9 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-8-2-10 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-8-2-11 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-8-2-12 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-8-2-13 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`8-8-2-14 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)


:sel(7)
	:apply(tc)

	-- Goal`7-1  -  inv1(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb1#7 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb1#7)

		-- Goal`7-1-1 Success by reduction
		:apply (rd)

		-- Goal`7-1-2  -  inv1(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb2#7 = :ctf [lock(S#Sys, p@Pid)  .]

		:apply(csb2#7)

			-- Goal`7-1-2-1  -  inv1(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb3#7 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb3#7)

				-- Goal`7-1-2-1-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-1-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-1-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-1-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-1-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-1-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-1-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-1-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-1-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-1-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-1-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-1-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-1-13  -  inv1(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb4#7 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb4#7)

					-- Goal`7-1-2-1-13-1  -  inv1(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb5#7 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb5#7)

						-- Goal`7-1-2-1-13-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`7-1-2-1-13-1-2 Success by reduction
						:apply (rd)

						-- Goal`7-1-2-1-13-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`7-1-2-1-13-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`7-1-2-1-13-1-5 Success by reduction
						:apply (rd)

						-- Goal`7-1-2-1-13-1-6 Success by reduction
						:apply (rd)

						-- Goal`7-1-2-1-13-1-7 Success by reduction
						:apply (rd)

						-- Goal`7-1-2-1-13-1-8 Success by reduction
						:apply (rd)

						-- Goal`7-1-2-1-13-1-9 Success by reduction
						:apply (rd)

						-- Goal`7-1-2-1-13-1-10 Success by reduction
						:apply (rd)

						-- Goal`7-1-2-1-13-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`7-1-2-1-13-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`7-1-2-1-13-1-13 Success by reduction
						:apply (rd)

						-- Goal`7-1-2-1-13-1-14 Success by reduction
						:apply (rd)

					-- Goal`7-1-2-1-13-2  -  inv1(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb6#7 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb6#7)

						-- Goal`7-1-2-1-13-2-1  -  inv1(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb7#7 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb7#7)

							-- Goal`7-1-2-1-13-2-1-1 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-1-13-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-1-13-2-1-3 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-1-13-2-1-4 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-1-13-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-1-13-2-1-6 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-1-13-2-1-7 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-1-2-1-13-2-1-8 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-1-13-2-1-9 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-1-13-2-1-10 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-1-13-2-1-11 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-1-13-2-1-12 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-1-13-2-1-13 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-1-13-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`7-1-2-1-13-2-2 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

				-- Goal`7-1-2-1-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

			-- Goal`7-1-2-2  -  inv1(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb8#7 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb8#7)

				-- Goal`7-1-2-2-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-2-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-2-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-2-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-2-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-2-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-2-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-2-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-2-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-2-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-2-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-2-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`7-1-2-2-13  -  inv1(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb9#7 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb9#7)

					-- Goal`7-1-2-2-13-1  -  inv1(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb10#7 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb10#7)

						-- Goal`7-1-2-2-13-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`7-1-2-2-13-1-2 Success by reduction
						:apply (rd)

						-- Goal`7-1-2-2-13-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`7-1-2-2-13-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`7-1-2-2-13-1-5 Success by reduction
						:apply (rd)

						-- Goal`7-1-2-2-13-1-6 Success by reduction
						:apply (rd)

						-- Goal`7-1-2-2-13-1-7 Success by reduction
						:apply (rd)

						-- Goal`7-1-2-2-13-1-8 Success by reduction
						:apply (rd)

						-- Goal`7-1-2-2-13-1-9 Success by reduction
						:apply (rd)

						-- Goal`7-1-2-2-13-1-10 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`7-1-2-2-13-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`7-1-2-2-13-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`7-1-2-2-13-1-13 Success by reduction
						:apply (rd)

						-- Goal`7-1-2-2-13-1-14 Success by reduction
						:apply (rd)

					-- Goal`7-1-2-2-13-2  -  inv1(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb11#7 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb11#7)

						-- Goal`7-1-2-2-13-2-1  -  inv1(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb12#7 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb12#7)

							-- Goal`7-1-2-2-13-2-1-1 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-2-13-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-2-13-2-1-3 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-2-13-2-1-4 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-2-13-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-2-13-2-1-6 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-2-13-2-1-7 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-1-2-2-13-2-1-8 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-2-13-2-1-9 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-2-13-2-1-10 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-2-13-2-1-11 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-2-13-2-1-12 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-2-13-2-1-13 Success by reduction
							:apply (rd)

							-- Goal`7-1-2-2-13-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`7-1-2-2-13-2-2 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

				-- Goal`7-1-2-2-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

	-- Goal`7-2  -  inv2(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb13#7 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb13#7)

		-- Goal`7-2-1 Success by reduction
		:apply (rd)

		-- Goal`7-2-2  -  inv2(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb14#7 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb14#7)

			-- Goal`7-2-2-1 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-2-2-2 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-2-2-3 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-2-2-4 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-2-2-5 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-2-2-6 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-2-2-7 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-2-2-8 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-2-2-9 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-2-2-10 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-2-2-11 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-2-2-12 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-2-2-13  -  inv2(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb15#7 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb15#7)

				-- Goal`7-2-2-13-1  -  inv2(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb16#7 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb16#7)

					-- Goal`7-2-2-13-1-1 Success by reduction
					:apply (rd)

					-- Goal`7-2-2-13-1-2 Success by reduction
					:apply (rd)

					-- Goal`7-2-2-13-1-3 Success by reduction
					:apply (rd)

					-- Goal`7-2-2-13-1-4 Success by reduction
					:apply (rd)

					-- Goal`7-2-2-13-1-5 Success by reduction
					:apply (rd)

					-- Goal`7-2-2-13-1-6 Success by reduction
					:apply (rd)

					-- Goal`7-2-2-13-1-7 Success by implication and reduction.
					:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-2-2-13-1-8 Success by reduction
					:apply (rd)

					-- Goal`7-2-2-13-1-9 Success by reduction
					:apply (rd)

					-- Goal`7-2-2-13-1-10 Success by reduction
					:apply (rd)

					-- Goal`7-2-2-13-1-11 Success by reduction
					:apply (rd)

					-- Goal`7-2-2-13-1-12 Success by reduction
					:apply (rd)

					-- Goal`7-2-2-13-1-13 Success by reduction
					:apply (rd)

					-- Goal`7-2-2-13-1-14 Success by reduction
					:apply (rd)

				-- Goal`7-2-2-13-2  -  inv2(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb17#7 = :ctf {eq P#Pid  = q@Pid .}

				:apply(csb17#7)

					-- Goal`7-2-2-13-2-1  -  inv2(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb18#7 = :ctf [pc(S#Sys, q@Pid)  .]

					:apply(csb18#7)

						-- Goal`7-2-2-13-2-1-1 Success by reduction
						:apply (rd)

						-- Goal`7-2-2-13-2-1-2 Success by reduction
						:apply (rd)

						-- Goal`7-2-2-13-2-1-3 Success by reduction
						:apply (rd)

						-- Goal`7-2-2-13-2-1-4 Success by reduction
						:apply (rd)

						-- Goal`7-2-2-13-2-1-5 Success by reduction
						:apply (rd)

						-- Goal`7-2-2-13-2-1-6 Success by reduction
						:apply (rd)

						-- Goal`7-2-2-13-2-1-7 Success by implication and reduction.
						:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`7-2-2-13-2-1-8 Success by reduction
						:apply (rd)

						-- Goal`7-2-2-13-2-1-9 Success by reduction
						:apply (rd)

						-- Goal`7-2-2-13-2-1-10 Success by reduction
						:apply (rd)

						-- Goal`7-2-2-13-2-1-11 Success by reduction
						:apply (rd)

						-- Goal`7-2-2-13-2-1-12 Success by reduction
						:apply (rd)

						-- Goal`7-2-2-13-2-1-13 Success by reduction
						:apply (rd)

						-- Goal`7-2-2-13-2-1-14 Success by reduction
						:apply (rd)

					-- Goal`7-2-2-13-2-2 Success by implication and reduction.
					:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`7-2-2-14 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

	-- Goal`7-3  -  inv3(go2rs(S#Sys, P#Pid), p@Pid)  - Success
	:def csb19#7 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb19#7)

		-- Goal`7-3-1 Success by reduction
		:apply (rd)

		-- Goal`7-3-2  -  inv3(go2rs(S#Sys, P#Pid), p@Pid)  - Success
		:def csb20#7 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb20#7)

			-- Goal`7-3-2-1 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`7-3-2-2 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`7-3-2-3 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`7-3-2-4 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`7-3-2-5 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`7-3-2-6 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`7-3-2-7 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`7-3-2-8 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`7-3-2-9 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`7-3-2-10 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`7-3-2-11 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`7-3-2-12 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`7-3-2-13  -  inv3(go2rs(S#Sys, P#Pid), p@Pid)  - Success
			:def csb21#7 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb21#7)

				-- Goal`7-3-2-13-1  -  inv3(go2rs(S#Sys, P#Pid), p@Pid)  - Success
				:def csb22#7 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb22#7)

					-- Goal`7-3-2-13-1-1 Success by reduction
					:apply (rd)

					-- Goal`7-3-2-13-1-2 Success by reduction
					:apply (rd)

					-- Goal`7-3-2-13-1-3 Success by reduction
					:apply (rd)

					-- Goal`7-3-2-13-1-4 Success by reduction
					:apply (rd)

					-- Goal`7-3-2-13-1-5 Success by reduction
					:apply (rd)

					-- Goal`7-3-2-13-1-6 Success by reduction
					:apply (rd)

					-- Goal`7-3-2-13-1-7 Success by reduction
					:apply (rd)

					-- Goal`7-3-2-13-1-8 Success by reduction
					:apply (rd)

					-- Goal`7-3-2-13-1-9 Success by implication and reduction.
					:imp [mcs2]  by {p:Pid <- p@Pid ;}

					:apply (rd)

					-- Goal`7-3-2-13-1-10 Success by reduction
					:apply (rd)

					-- Goal`7-3-2-13-1-11 Success by reduction
					:apply (rd)

					-- Goal`7-3-2-13-1-12 Success by reduction
					:apply (rd)

					-- Goal`7-3-2-13-1-13 Success by reduction
					:apply (rd)

					-- Goal`7-3-2-13-1-14 Success by reduction
					:apply (rd)

				-- Goal`7-3-2-13-2 Success by implication and reduction.
				:imp [mcs2]  by {p:Pid <- p@Pid ;}

				:apply (rd)

			-- Goal`7-3-2-14 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

	:def csb23#7 = :ctf {eq pc(S#Sys, P#Pid)  = l9 .}

	:apply(csb23#7)

	:def csb24#7 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb24#7)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	-- Goal`7-5  -  inv5(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb25#7 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb25#7)

		-- Goal`7-5-1 Success by reduction
		:apply (rd)

		-- Goal`7-5-2  -  inv5(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb26#7 = :ctf {eq next(S#Sys, q@Pid)  = p@Pid .}

		:apply(csb26#7)

			-- Goal`7-5-2-1  -  inv5(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb27#7 = :ctf {eq prede(S#Sys, p@Pid)  = q@Pid .}

			:apply(csb27#7)

				-- Goal`7-5-2-1-1  -  inv5(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb28#7 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb28#7)

					-- Goal`7-5-2-1-1-1  -  inv5(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb29#7 = :ctf [lock(S#Sys, p@Pid)  .]

					:apply(csb29#7)

						-- Goal`7-5-2-1-1-1-1  -  inv5(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb30#7 = :ctf [pc(S#Sys, p@Pid)  .]

						:apply(csb30#7)

							-- Goal`7-5-2-1-1-1-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-1-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-1-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-1-10 Success by reduction
							:apply (rd)

							-- Goal`7-5-2-1-1-1-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-1-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

						-- Goal`7-5-2-1-1-1-2  -  inv5(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb31#7 = :ctf [pc(S#Sys, p@Pid)  .]

						:apply(csb31#7)

							-- Goal`7-5-2-1-1-1-2-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-2-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-2-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-2-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-2-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-2-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-2-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-2-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-2-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-2-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-2-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-2-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-2-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-1-2-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

					-- Goal`7-5-2-1-1-2  -  inv5(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb32#7 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb32#7)

						-- Goal`7-5-2-1-1-2-1  -  inv5(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb33#7 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb33#7)

							-- Goal`7-5-2-1-1-2-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`7-5-2-1-1-2-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`7-5-2-1-1-2-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-1-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-1-13 Success by reduction
							:apply (rd)

							-- Goal`7-5-2-1-1-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`7-5-2-1-1-2-2  -  inv5(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb34#7 = :ctf [pc(S#Sys, P#Pid)  .]

						:apply(csb34#7)

							-- Goal`7-5-2-1-1-2-2-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-2-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-2-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-2-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-2-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-2-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-2-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-2-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-2-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-2-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-2-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-2-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-2-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-1-2-2-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

				-- Goal`7-5-2-1-2  -  inv5(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb35#7 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb35#7)

					-- Goal`7-5-2-1-2-1 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-5-2-1-2-2 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-5-2-1-2-3 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-5-2-1-2-4 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-5-2-1-2-5 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-5-2-1-2-6 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-5-2-1-2-7 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-5-2-1-2-8 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-5-2-1-2-9 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-5-2-1-2-10 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-5-2-1-2-11 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-5-2-1-2-12 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-5-2-1-2-13  -  inv5(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb36#7 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb36#7)

						-- Goal`7-5-2-1-2-13-1  -  inv5(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb37#7 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb37#7)

							-- Goal`7-5-2-1-2-13-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-2-13-1-2 Success by reduction
							:apply (rd)

							-- Goal`7-5-2-1-2-13-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-2-13-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-2-13-1-5 Success by reduction
							:apply (rd)

							-- Goal`7-5-2-1-2-13-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-2-13-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-2-13-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-2-13-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-2-13-1-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-2-13-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-2-13-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-5-2-1-2-13-1-13 Success by reduction
							:apply (rd)

							-- Goal`7-5-2-1-2-13-1-14 Success by reduction
							:apply (rd)

						-- Goal`7-5-2-1-2-13-2 Success by implication and reduction.
						:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

					-- Goal`7-5-2-1-2-14 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`7-5-2-2 Success by reduction
			:apply (rd)

	-- Goal`7-6  -  inv6(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb38#7 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb38#7)

		-- Goal`7-6-1 Success by reduction
		:apply (rd)

		-- Goal`7-6-2  -  inv6(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb39#7 = :ctf [lock(S#Sys, p@Pid)  .]

		:apply(csb39#7)

			-- Goal`7-6-2-1  -  inv6(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb40#7 = :ctf [lock(S#Sys, q@Pid)  .]

			:apply(csb40#7)

				-- Goal`7-6-2-1-1 Success by reduction
				:apply (rd)

				-- Goal`7-6-2-1-2  -  inv6(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb41#7 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb41#7)

					-- Goal`7-6-2-1-2-1 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-1-2-2 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-1-2-3 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-1-2-4 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-1-2-5 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-1-2-6 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-1-2-7 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-1-2-8 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-1-2-9 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-1-2-10 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-1-2-11 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-1-2-12 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-1-2-13  -  inv6(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb42#7 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb42#7)

						-- Goal`7-6-2-1-2-13-1  -  inv6(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb43#7 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb43#7)

							-- Goal`7-6-2-1-2-13-1-1 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-1-2-13-1-2 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-1-2-13-1-3 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-1-2-13-1-4 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-1-2-13-1-5 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-1-2-13-1-6 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-1-2-13-1-7 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-1-2-13-1-8 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-1-2-13-1-9 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-1-2-13-1-10 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-6-2-1-2-13-1-11 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-1-2-13-1-12 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-1-2-13-1-13 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-1-2-13-1-14 Success by reduction
							:apply (rd)

						-- Goal`7-6-2-1-2-13-2  -  inv6(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb44#7 = :ctf [glock(S#Sys)  .]

						:apply(csb44#7)

							-- Goal`7-6-2-1-2-13-2-1 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- q@Pid ;}

							:apply (rd)

					-- Goal`7-6-2-1-2-14 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`7-6-2-2  -  inv6(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb45#7 = :ctf [lock(S#Sys, q@Pid)  .]

			:apply(csb45#7)

				-- Goal`7-6-2-2-1 Success by reduction
				:apply (rd)

				-- Goal`7-6-2-2-2  -  inv6(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb46#7 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb46#7)

					-- Goal`7-6-2-2-2-1 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-2-2-2 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-2-2-3 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-2-2-4 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-2-2-5 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-2-2-6 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-2-2-7 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-2-2-8 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-2-2-9 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-2-2-10 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-2-2-11 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-2-2-12 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-6-2-2-2-13  -  inv6(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb47#7 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb47#7)

						-- Goal`7-6-2-2-2-13-1  -  inv6(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb48#7 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb48#7)

							-- Goal`7-6-2-2-2-13-1-1 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-2-2-13-1-2 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-2-2-13-1-3 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-2-2-13-1-4 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-2-2-13-1-5 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-2-2-13-1-6 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-2-2-13-1-7 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-2-2-13-1-8 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-2-2-13-1-9 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-2-2-13-1-10 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`7-6-2-2-2-13-1-11 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-2-2-13-1-12 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-2-2-13-1-13 Success by reduction
							:apply (rd)

							-- Goal`7-6-2-2-2-13-1-14 Success by reduction
							:apply (rd)

						-- Goal`7-6-2-2-2-13-2  -  inv6(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb49#7 = :ctf [glock(S#Sys)  .]

						:apply(csb49#7)

							-- Goal`7-6-2-2-2-13-2-1 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- q@Pid ;}

							:apply (rd)

					-- Goal`7-6-2-2-2-14 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

	:def csb50#7 = :ctf {eq pc(S#Sys, P#Pid)  = l9 .}

	:apply(csb50#7)

	:def csb51#7 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb51#7)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb52#7 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb52#7)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	-- Goal`7-8  -  mutex(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb53#7 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb53#7)

		-- Goal`7-8-1 Success by reduction
		:apply (rd)

		-- Goal`7-8-2  -  mutex(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb54#7 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb54#7)

			-- Goal`7-8-2-1 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-8-2-2 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-8-2-3 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-8-2-4 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-8-2-5 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-8-2-6 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-8-2-7 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-8-2-8 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-8-2-9 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-8-2-10 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-8-2-11 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-8-2-12 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`7-8-2-13  -  mutex(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb55#7 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb55#7)

				-- Goal`7-8-2-13-1  -  mutex(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb56#7 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb56#7)

					-- Goal`7-8-2-13-1-1 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`7-8-2-13-1-2 Success by reduction
					:apply (rd)

					-- Goal`7-8-2-13-1-3 Success by reduction
					:apply (rd)

					-- Goal`7-8-2-13-1-4 Success by reduction
					:apply (rd)

					-- Goal`7-8-2-13-1-5 Success by reduction
					:apply (rd)

					-- Goal`7-8-2-13-1-6 Success by reduction
					:apply (rd)

					-- Goal`7-8-2-13-1-7 Success by reduction
					:apply (rd)

					-- Goal`7-8-2-13-1-8 Success by reduction
					:apply (rd)

					-- Goal`7-8-2-13-1-9 Success by reduction
					:apply (rd)

					-- Goal`7-8-2-13-1-10 Success by reduction
					:apply (rd)

					-- Goal`7-8-2-13-1-11 Success by reduction
					:apply (rd)

					-- Goal`7-8-2-13-1-12 Success by reduction
					:apply (rd)

					-- Goal`7-8-2-13-1-13 Success by reduction
					:apply (rd)

					-- Goal`7-8-2-13-1-14 Success by reduction
					:apply (rd)

				-- Goal`7-8-2-13-2  -  mutex(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb57#7 = :ctf {eq P#Pid  = q@Pid .}

				:apply(csb57#7)

					-- Goal`7-8-2-13-2-1  -  mutex(go2rs(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb58#7 = :ctf [pc(S#Sys, q@Pid)  .]

					:apply(csb58#7)

						-- Goal`7-8-2-13-2-1-1 Success by implication and reduction.
						:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`7-8-2-13-2-1-2 Success by reduction
						:apply (rd)

						-- Goal`7-8-2-13-2-1-3 Success by reduction
						:apply (rd)

						-- Goal`7-8-2-13-2-1-4 Success by reduction
						:apply (rd)

						-- Goal`7-8-2-13-2-1-5 Success by reduction
						:apply (rd)

						-- Goal`7-8-2-13-2-1-6 Success by reduction
						:apply (rd)

						-- Goal`7-8-2-13-2-1-7 Success by reduction
						:apply (rd)

						-- Goal`7-8-2-13-2-1-8 Success by reduction
						:apply (rd)

						-- Goal`7-8-2-13-2-1-9 Success by reduction
						:apply (rd)

						-- Goal`7-8-2-13-2-1-10 Success by reduction
						:apply (rd)

						-- Goal`7-8-2-13-2-1-11 Success by reduction
						:apply (rd)

						-- Goal`7-8-2-13-2-1-12 Success by reduction
						:apply (rd)

						-- Goal`7-8-2-13-2-1-13 Success by reduction
						:apply (rd)

						-- Goal`7-8-2-13-2-1-14 Success by reduction
						:apply (rd)

					-- Goal`7-8-2-13-2-2 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`7-8-2-14 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)


:sel(10)
	:apply(tc)

	-- Goal`10-1  -  inv1(stlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb1#10 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb1#10)

		-- Goal`10-1-1 Success by reduction
		:apply (rd)

		-- Goal`10-1-2  -  inv1(stlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb2#10 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb2#10)

			-- Goal`10-1-2-1 Success by implication and reduction.
			:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-1-2-2 Success by implication and reduction.
			:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-1-2-3 Success by implication and reduction.
			:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-1-2-4 Success by implication and reduction.
			:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-1-2-5 Success by implication and reduction.
			:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-1-2-6 Success by implication and reduction.
			:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-1-2-7 Success by implication and reduction.
			:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-1-2-8  -  inv1(stlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb3#10 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb3#10)

				-- Goal`10-1-2-8-1  -  inv1(stlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb4#10 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb4#10)

					-- Goal`10-1-2-8-1-1 Success by implication and reduction.
					:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`10-1-2-8-1-2 Success by reduction
					:apply (rd)

					-- Goal`10-1-2-8-1-3 Success by implication and reduction.
					:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`10-1-2-8-1-4 Success by implication and reduction.
					:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`10-1-2-8-1-5 Success by reduction
					:apply (rd)

					-- Goal`10-1-2-8-1-6 Success by reduction
					:apply (rd)

					-- Goal`10-1-2-8-1-7 Success by reduction
					:apply (rd)

					-- Goal`10-1-2-8-1-8 Success by reduction
					:apply (rd)

					-- Goal`10-1-2-8-1-9 Success by reduction
					:apply (rd)

					-- Goal`10-1-2-8-1-10 Success by implication and reduction.
					:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`10-1-2-8-1-11 Success by implication and reduction.
					:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`10-1-2-8-1-12 Success by implication and reduction.
					:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`10-1-2-8-1-13 Success by reduction
					:apply (rd)

					-- Goal`10-1-2-8-1-14 Success by reduction
					:apply (rd)

				-- Goal`10-1-2-8-2  -  inv1(stlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb5#10 = :ctf {eq P#Pid  = q@Pid .}

				:apply(csb5#10)

					-- Goal`10-1-2-8-2-1  -  inv1(stlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb6#10 = :ctf [pc(S#Sys, q@Pid)  .]

					:apply(csb6#10)

						-- Goal`10-1-2-8-2-1-1 Success by reduction
						:apply (rd)

						-- Goal`10-1-2-8-2-1-2 Success by reduction
						:apply (rd)

						-- Goal`10-1-2-8-2-1-3 Success by reduction
						:apply (rd)

						-- Goal`10-1-2-8-2-1-4 Success by reduction
						:apply (rd)

						-- Goal`10-1-2-8-2-1-5 Success by reduction
						:apply (rd)

						-- Goal`10-1-2-8-2-1-6 Success by reduction
						:apply (rd)

						-- Goal`10-1-2-8-2-1-7 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`10-1-2-8-2-1-8 Success by reduction
						:apply (rd)

						-- Goal`10-1-2-8-2-1-9 Success by reduction
						:apply (rd)

						-- Goal`10-1-2-8-2-1-10 Success by reduction
						:apply (rd)

						-- Goal`10-1-2-8-2-1-11 Success by reduction
						:apply (rd)

						-- Goal`10-1-2-8-2-1-12 Success by reduction
						:apply (rd)

						-- Goal`10-1-2-8-2-1-13 Success by reduction
						:apply (rd)

						-- Goal`10-1-2-8-2-1-14 Success by reduction
						:apply (rd)

					-- Goal`10-1-2-8-2-2 Success by implication and reduction.
					:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`10-1-2-9 Success by implication and reduction.
			:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-1-2-10 Success by implication and reduction.
			:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-1-2-11 Success by implication and reduction.
			:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-1-2-12 Success by implication and reduction.
			:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-1-2-13 Success by implication and reduction.
			:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-1-2-14 Success by implication and reduction.
			:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

	:def csb7#10 = :ctf {eq pc(S#Sys, P#Pid)  = l4 .}

	:apply(csb7#10)

	:def csb8#10 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb8#10)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb9#10 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb9#10)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb10#10 = :ctf {eq pc(S#Sys, P#Pid)  = l4 .}

	:apply(csb10#10)

	:def csb11#10 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb11#10)

	:imp [mcs2]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs2]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs2]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb12#10 = :ctf {eq pc(S#Sys, P#Pid)  = l4 .}

	:apply(csb12#10)

	:def csb13#10 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb13#10)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb14#10 = :ctf {eq pc(S#Sys, P#Pid)  = l4 .}

	:apply(csb14#10)

	:def csb15#10 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb15#10)

	:def csb16#10 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb16#10)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb17#10 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb17#10)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb18#10 = :ctf {eq pc(S#Sys, P#Pid)  = l4 .}

	:apply(csb18#10)

	:def csb19#10 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb19#10)

	:def csb20#10 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb20#10)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	-- The corresponding proof score was not present.
	:apply (rd)

	:def csb21#10 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb21#10)

	-- The corresponding proof score was not present.
	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb22#10 = :ctf {eq pc(S#Sys, P#Pid)  = l4 .}

	:apply(csb22#10)

	:def csb23#10 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb23#10)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb24#10 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb24#10)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	-- Goal`10-8  -  mutex(stlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb25#10 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb25#10)

		-- Goal`10-8-1 Success by reduction
		:apply (rd)

		-- Goal`10-8-2  -  mutex(stlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb26#10 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb26#10)

			-- Goal`10-8-2-1 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-8-2-2 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-8-2-3 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-8-2-4 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-8-2-5 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-8-2-6 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-8-2-7 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-8-2-8  -  mutex(stlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb27#10 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb27#10)

				-- Goal`10-8-2-8-1  -  mutex(stlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb28#10 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb28#10)

					-- Goal`10-8-2-8-1-1 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`10-8-2-8-1-2 Success by reduction
					:apply (rd)

					-- Goal`10-8-2-8-1-3 Success by reduction
					:apply (rd)

					-- Goal`10-8-2-8-1-4 Success by reduction
					:apply (rd)

					-- Goal`10-8-2-8-1-5 Success by reduction
					:apply (rd)

					-- Goal`10-8-2-8-1-6 Success by reduction
					:apply (rd)

					-- Goal`10-8-2-8-1-7 Success by reduction
					:apply (rd)

					-- Goal`10-8-2-8-1-8 Success by reduction
					:apply (rd)

					-- Goal`10-8-2-8-1-9 Success by reduction
					:apply (rd)

					-- Goal`10-8-2-8-1-10 Success by reduction
					:apply (rd)

					-- Goal`10-8-2-8-1-11 Success by reduction
					:apply (rd)

					-- Goal`10-8-2-8-1-12 Success by reduction
					:apply (rd)

					-- Goal`10-8-2-8-1-13 Success by reduction
					:apply (rd)

					-- Goal`10-8-2-8-1-14 Success by reduction
					:apply (rd)

				-- Goal`10-8-2-8-2  -  mutex(stlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb29#10 = :ctf {eq P#Pid  = q@Pid .}

				:apply(csb29#10)

					-- Goal`10-8-2-8-2-1  -  mutex(stlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb30#10 = :ctf [pc(S#Sys, q@Pid)  .]

					:apply(csb30#10)

						-- Goal`10-8-2-8-2-1-1 Success by implication and reduction.
						:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`10-8-2-8-2-1-2 Success by reduction
						:apply (rd)

						-- Goal`10-8-2-8-2-1-3 Success by reduction
						:apply (rd)

						-- Goal`10-8-2-8-2-1-4 Success by reduction
						:apply (rd)

						-- Goal`10-8-2-8-2-1-5 Success by reduction
						:apply (rd)

						-- Goal`10-8-2-8-2-1-6 Success by reduction
						:apply (rd)

						-- Goal`10-8-2-8-2-1-7 Success by reduction
						:apply (rd)

						-- Goal`10-8-2-8-2-1-8 Success by reduction
						:apply (rd)

						-- Goal`10-8-2-8-2-1-9 Success by reduction
						:apply (rd)

						-- Goal`10-8-2-8-2-1-10 Success by reduction
						:apply (rd)

						-- Goal`10-8-2-8-2-1-11 Success by reduction
						:apply (rd)

						-- Goal`10-8-2-8-2-1-12 Success by reduction
						:apply (rd)

						-- Goal`10-8-2-8-2-1-13 Success by reduction
						:apply (rd)

						-- Goal`10-8-2-8-2-1-14 Success by reduction
						:apply (rd)

					-- Goal`10-8-2-8-2-2 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`10-8-2-9 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-8-2-10 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-8-2-11 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-8-2-12 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-8-2-13 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`10-8-2-14 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)


:sel(9)
	:apply(tc)

	-- The corresponding proof score was not present.
	:apply (rd)

	-- The corresponding proof score was not present.
	:apply (rd)

	-- The corresponding proof score was not present.
	:apply (rd)

	-- The corresponding proof score was not present.
	:apply (rd)

	-- The corresponding proof score was not present.
	:apply (rd)

	-- The corresponding proof score was not present.
	:apply (rd)

	-- The corresponding proof score was not present.
	:apply (rd)

	-- The corresponding proof score was not present.
	:apply (rd)


:sel(2)
	:apply(tc)

	-- Goal`2-1  -  inv1(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb1#2 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb1#2)

		-- Goal`2-1-1 Success by reduction
		:apply (rd)

		-- Goal`2-1-2  -  inv1(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb2#2 = :ctf [lock(S#Sys, p@Pid)  .]

		:apply(csb2#2)

			-- Goal`2-1-2-1  -  inv1(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb3#2 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb3#2)

				-- Goal`2-1-2-1-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-1-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-1-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-1-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-1-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-1-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-1-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-1-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-1-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-1-10  -  inv1(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb4#2 = :ctf {eq P#Pid  = q@Pid .}

				:apply(csb4#2)

					-- Goal`2-1-2-1-10-1  -  inv1(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb5#2 = :ctf [pc(S#Sys, q@Pid)  .]

					:apply(csb5#2)

						-- Goal`2-1-2-1-10-1-1 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-1-10-1-2 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-1-10-1-3 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-1-10-1-4 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-1-10-1-5 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-1-10-1-6 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-1-10-1-7 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`2-1-2-1-10-1-8 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-1-10-1-9 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-1-10-1-10  -  inv1(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb6#2 = :ctf [lock(S#Sys, q@Pid)  .]

						:apply(csb6#2)

							-- Goal`2-1-2-1-10-1-10-1 Success by reduction
							:apply (rd)

							-- Goal`2-1-2-1-10-1-10-2 Success by reduction
							:apply (rd)

						-- Goal`2-1-2-1-10-1-11 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-1-10-1-12 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-1-10-1-13 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-1-10-1-14 Success by reduction
						:apply (rd)

					-- Goal`2-1-2-1-10-2  -  inv1(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb7#2 = :ctf {eq P#Pid  = p@Pid .}

					:apply(csb7#2)

						-- Goal`2-1-2-1-10-2-1  -  inv1(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb8#2 = :ctf [pc(S#Sys, p@Pid)  .]

						:apply(csb8#2)

							-- Goal`2-1-2-1-10-2-1-1 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-1-2-1-10-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`2-1-2-1-10-2-1-3 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-1-2-1-10-2-1-4 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-1-2-1-10-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`2-1-2-1-10-2-1-6 Success by reduction
							:apply (rd)

							-- Goal`2-1-2-1-10-2-1-7 Success by reduction
							:apply (rd)

							-- Goal`2-1-2-1-10-2-1-8 Success by reduction
							:apply (rd)

							-- Goal`2-1-2-1-10-2-1-9 Success by reduction
							:apply (rd)

							-- Goal`2-1-2-1-10-2-1-10 Success by reduction
							:apply (rd)

							-- Goal`2-1-2-1-10-2-1-11 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-1-2-1-10-2-1-12 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-1-2-1-10-2-1-13 Success by reduction
							:apply (rd)

							-- Goal`2-1-2-1-10-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`2-1-2-1-10-2-2 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

				-- Goal`2-1-2-1-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-1-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-1-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-1-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

			-- Goal`2-1-2-2  -  inv1(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb9#2 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb9#2)

				-- Goal`2-1-2-2-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-2-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-2-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-2-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-2-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-2-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-2-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-2-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-2-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-2-10  -  inv1(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb10#2 = :ctf {eq P#Pid  = q@Pid .}

				:apply(csb10#2)

					-- Goal`2-1-2-2-10-1  -  inv1(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb11#2 = :ctf [pc(S#Sys, q@Pid)  .]

					:apply(csb11#2)

						-- Goal`2-1-2-2-10-1-1 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-2-10-1-2 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-2-10-1-3 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-2-10-1-4 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-2-10-1-5 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-2-10-1-6 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-2-10-1-7 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`2-1-2-2-10-1-8 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-2-10-1-9 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-2-10-1-10  -  inv1(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb12#2 = :ctf [lock(S#Sys, q@Pid)  .]

						:apply(csb12#2)

							-- Goal`2-1-2-2-10-1-10-1 Success by reduction
							:apply (rd)

							-- Goal`2-1-2-2-10-1-10-2 Success by reduction
							:apply (rd)

						-- Goal`2-1-2-2-10-1-11 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-2-10-1-12 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-2-10-1-13 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-2-10-1-14 Success by reduction
						:apply (rd)

					-- Goal`2-1-2-2-10-2  -  inv1(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb13#2 = :ctf {eq P#Pid  = p@Pid .}

					:apply(csb13#2)

						-- Goal`2-1-2-2-10-2-1  -  inv1(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb14#2 = :ctf [pc(S#Sys, p@Pid)  .]

						:apply(csb14#2)

							-- Goal`2-1-2-2-10-2-1-1 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-1-2-2-10-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`2-1-2-2-10-2-1-3 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-1-2-2-10-2-1-4 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-1-2-2-10-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`2-1-2-2-10-2-1-6 Success by reduction
							:apply (rd)

							-- Goal`2-1-2-2-10-2-1-7 Success by reduction
							:apply (rd)

							-- Goal`2-1-2-2-10-2-1-8 Success by reduction
							:apply (rd)

							-- Goal`2-1-2-2-10-2-1-9 Success by reduction
							:apply (rd)

							-- Goal`2-1-2-2-10-2-1-10 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-1-2-2-10-2-1-11 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-1-2-2-10-2-1-12 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-1-2-2-10-2-1-13 Success by reduction
							:apply (rd)

							-- Goal`2-1-2-2-10-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`2-1-2-2-10-2-2 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

				-- Goal`2-1-2-2-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-2-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-2-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`2-1-2-2-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

	:def csb15#2 = :ctf {eq pc(S#Sys, P#Pid)  = l6 .}

	:apply(csb15#2)

	:def csb16#2 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb16#2)

	:def csb17#2 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb17#2)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb18#2 = :ctf [lock(S#Sys, P#Pid)  .]

	:apply(csb18#2)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb19#2 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb19#2)

	:def csb20#2 = :ctf [lock(S#Sys, P#Pid)  .]

	:apply(csb20#2)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	-- Goal`2-3  -  inv3(chlck(S#Sys, P#Pid), p@Pid)  - Success
	:def csb21#2 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb21#2)

		-- Goal`2-3-1 Success by reduction
		:apply (rd)

		-- Goal`2-3-2  -  inv3(chlck(S#Sys, P#Pid), p@Pid)  - Success
		:def csb22#2 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb22#2)

			-- Goal`2-3-2-1 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`2-3-2-2 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`2-3-2-3 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`2-3-2-4 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`2-3-2-5 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`2-3-2-6 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`2-3-2-7 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`2-3-2-8 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`2-3-2-9 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`2-3-2-10  -  inv3(chlck(S#Sys, P#Pid), p@Pid)  - Success
			:def csb23#2 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb23#2)

				-- Goal`2-3-2-10-1  -  inv3(chlck(S#Sys, P#Pid), p@Pid)  - Success
				:def csb24#2 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb24#2)

					-- Goal`2-3-2-10-1-1 Success by reduction
					:apply (rd)

					-- Goal`2-3-2-10-1-2 Success by reduction
					:apply (rd)

					-- Goal`2-3-2-10-1-3 Success by reduction
					:apply (rd)

					-- Goal`2-3-2-10-1-4 Success by reduction
					:apply (rd)

					-- Goal`2-3-2-10-1-5 Success by reduction
					:apply (rd)

					-- Goal`2-3-2-10-1-6 Success by reduction
					:apply (rd)

					-- Goal`2-3-2-10-1-7 Success by reduction
					:apply (rd)

					-- Goal`2-3-2-10-1-8 Success by reduction
					:apply (rd)

					-- Goal`2-3-2-10-1-9 Success by implication and reduction.
					:imp [mcs2]  by {p:Pid <- p@Pid ;}

					:apply (rd)

					-- Goal`2-3-2-10-1-10 Success by reduction
					:apply (rd)

					-- Goal`2-3-2-10-1-11 Success by reduction
					:apply (rd)

					-- Goal`2-3-2-10-1-12 Success by reduction
					:apply (rd)

					-- Goal`2-3-2-10-1-13 Success by reduction
					:apply (rd)

					-- Goal`2-3-2-10-1-14 Success by reduction
					:apply (rd)

				-- Goal`2-3-2-10-2 Success by implication and reduction.
				:imp [mcs2]  by {p:Pid <- p@Pid ;}

				:apply (rd)

			-- Goal`2-3-2-11 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`2-3-2-12 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`2-3-2-13 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`2-3-2-14 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

	:def csb25#2 = :ctf {eq pc(S#Sys, P#Pid)  = l6 .}

	:apply(csb25#2)

	:def csb26#2 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb26#2)

	:def csb27#2 = :ctf [lock(S#Sys, P#Pid)  .]

	:apply(csb27#2)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	-- Goal`2-5  -  inv5(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb28#2 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb28#2)

		-- Goal`2-5-1 Success by reduction
		:apply (rd)

		-- Goal`2-5-2  -  inv5(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb29#2 = :ctf {eq next(S#Sys, q@Pid)  = p@Pid .}

		:apply(csb29#2)

			-- Goal`2-5-2-1  -  inv5(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb30#2 = :ctf {eq prede(S#Sys, p@Pid)  = q@Pid .}

			:apply(csb30#2)

				-- Goal`2-5-2-1-1  -  inv5(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb31#2 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb31#2)

					-- Goal`2-5-2-1-1-1  -  inv5(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb32#2 = :ctf [lock(S#Sys, p@Pid)  .]

					:apply(csb32#2)

						-- Goal`2-5-2-1-1-1-1  -  inv5(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb33#2 = :ctf [pc(S#Sys, p@Pid)  .]

						:apply(csb33#2)

							-- Goal`2-5-2-1-1-1-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-1-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-1-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-1-10 Success by reduction
							:apply (rd)

							-- Goal`2-5-2-1-1-1-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-1-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

						-- Goal`2-5-2-1-1-1-2  -  inv5(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb34#2 = :ctf [pc(S#Sys, p@Pid)  .]

						:apply(csb34#2)

							-- Goal`2-5-2-1-1-1-2-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-2-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-2-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-2-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-2-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-2-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-2-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-2-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-2-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-2-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-2-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-2-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-2-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-1-2-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

					-- Goal`2-5-2-1-1-2  -  inv5(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb35#2 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb35#2)

						-- Goal`2-5-2-1-1-2-1  -  inv5(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb36#2 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb36#2)

							-- Goal`2-5-2-1-1-2-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`2-5-2-1-1-2-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`2-5-2-1-1-2-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-1-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`2-5-2-1-1-2-2  -  inv5(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb37#2 = :ctf [pc(S#Sys, P#Pid)  .]

						:apply(csb37#2)

							-- Goal`2-5-2-1-1-2-2-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-2-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-2-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-2-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-2-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-2-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-2-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-2-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-2-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-2-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-2-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-2-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-2-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-1-2-2-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

				-- Goal`2-5-2-1-2  -  inv5(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb38#2 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb38#2)

					-- Goal`2-5-2-1-2-1 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`2-5-2-1-2-2 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`2-5-2-1-2-3 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`2-5-2-1-2-4 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`2-5-2-1-2-5 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`2-5-2-1-2-6 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`2-5-2-1-2-7 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`2-5-2-1-2-8 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`2-5-2-1-2-9 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`2-5-2-1-2-10  -  inv5(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb39#2 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb39#2)

						-- Goal`2-5-2-1-2-10-1  -  inv5(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb40#2 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb40#2)

							-- Goal`2-5-2-1-2-10-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-2-10-1-2 Success by reduction
							:apply (rd)

							-- Goal`2-5-2-1-2-10-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-2-10-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-2-10-1-5 Success by reduction
							:apply (rd)

							-- Goal`2-5-2-1-2-10-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-2-10-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-2-10-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-2-10-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-2-10-1-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-2-10-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-2-10-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-2-10-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`2-5-2-1-2-10-1-14 Success by reduction
							:apply (rd)

						-- Goal`2-5-2-1-2-10-2 Success by implication and reduction.
						:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

					-- Goal`2-5-2-1-2-11 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`2-5-2-1-2-12 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`2-5-2-1-2-13 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`2-5-2-1-2-14 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`2-5-2-2 Success by reduction
			:apply (rd)

	:def csb41#2 = :ctf {eq pc(S#Sys, P#Pid)  = l6 .}

	:apply(csb41#2)

	:def csb42#2 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb42#2)

	:def csb43#2 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb43#2)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb44#2 = :ctf [lock(S#Sys, P#Pid)  .]

	:apply(csb44#2)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb45#2 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb45#2)

	:def csb46#2 = :ctf [lock(S#Sys, P#Pid)  .]

	:apply(csb46#2)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb47#2 = :ctf {eq pc(S#Sys, P#Pid)  = l6 .}

	:apply(csb47#2)

	:def csb48#2 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb48#2)

	:def csb49#2 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb49#2)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb50#2 = :ctf [lock(S#Sys, P#Pid)  .]

	:apply(csb50#2)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb51#2 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb51#2)

	:def csb52#2 = :ctf [lock(S#Sys, P#Pid)  .]

	:apply(csb52#2)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb53#2 = :ctf {eq pc(S#Sys, p@Pid)  = l6 .}

	:apply(csb53#2)

	:def csb54#2 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb54#2)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb55#2 = :ctf {eq pc(S#Sys, p@Pid)  = cs .}

	:apply(csb55#2)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs6]  by {p:Pid <- q@Pid ; q:Pid <- p@Pid ;}

	:apply (rd)

	:def csb56#2 = :ctf {eq pc(S#Sys, p@Pid)  = l10 .}

	:apply(csb56#2)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs6]  by {p:Pid <- q@Pid ; q:Pid <- p@Pid ;}

	:apply (rd)

	:def csb57#2 = :ctf {eq pc(S#Sys, p@Pid)  = l11 .}

	:apply(csb57#2)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs6]  by {p:Pid <- q@Pid ; q:Pid <- p@Pid ;}

	:apply (rd)

	:def csb58#2 = :ctf {eq pc(S#Sys, p@Pid)  = l7 .}

	:apply(csb58#2)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs6]  by {p:Pid <- q@Pid ; q:Pid <- p@Pid ;}

	:apply (rd)

	:def csb59#2 = :ctf {eq pc(S#Sys, p@Pid)  = l8 .}

	:apply(csb59#2)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs6]  by {p:Pid <- q@Pid ; q:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs6]  by {p:Pid <- q@Pid ; q:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	-- Goal`2-8  -  mutex(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb60#2 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb60#2)

		-- Goal`2-8-1 Success by reduction
		:apply (rd)

		-- Goal`2-8-2  -  mutex(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb61#2 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb61#2)

			-- Goal`2-8-2-1 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`2-8-2-2 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`2-8-2-3 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`2-8-2-4 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`2-8-2-5 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`2-8-2-6 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`2-8-2-7 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`2-8-2-8 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`2-8-2-9 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`2-8-2-10  -  mutex(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb62#2 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb62#2)

				-- Goal`2-8-2-10-1  -  mutex(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb63#2 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb63#2)

					-- Goal`2-8-2-10-1-1 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`2-8-2-10-1-2 Success by reduction
					:apply (rd)

					-- Goal`2-8-2-10-1-3 Success by reduction
					:apply (rd)

					-- Goal`2-8-2-10-1-4 Success by reduction
					:apply (rd)

					-- Goal`2-8-2-10-1-5 Success by reduction
					:apply (rd)

					-- Goal`2-8-2-10-1-6 Success by reduction
					:apply (rd)

					-- Goal`2-8-2-10-1-7 Success by reduction
					:apply (rd)

					-- Goal`2-8-2-10-1-8 Success by reduction
					:apply (rd)

					-- Goal`2-8-2-10-1-9 Success by reduction
					:apply (rd)

					-- Goal`2-8-2-10-1-10  -  mutex(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb64#2 = :ctf [lock(S#Sys, p@Pid)  .]

					:apply(csb64#2)

						-- Goal`2-8-2-10-1-10-1 Success by reduction
						:apply (rd)

						-- Goal`2-8-2-10-1-10-2 Success by implication and reduction.
						:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:imp [mcs6]  by {p:Pid <- P#Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

					-- Goal`2-8-2-10-1-11 Success by reduction
					:apply (rd)

					-- Goal`2-8-2-10-1-12 Success by reduction
					:apply (rd)

					-- Goal`2-8-2-10-1-13 Success by reduction
					:apply (rd)

					-- Goal`2-8-2-10-1-14 Success by reduction
					:apply (rd)

				-- Goal`2-8-2-10-2  -  mutex(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb65#2 = :ctf {eq P#Pid  = q@Pid .}

				:apply(csb65#2)

					-- Goal`2-8-2-10-2-1  -  mutex(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb66#2 = :ctf [pc(S#Sys, q@Pid)  .]

					:apply(csb66#2)

						-- Goal`2-8-2-10-2-1-1 Success by implication and reduction.
						:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`2-8-2-10-2-1-2 Success by reduction
						:apply (rd)

						-- Goal`2-8-2-10-2-1-3 Success by reduction
						:apply (rd)

						-- Goal`2-8-2-10-2-1-4 Success by reduction
						:apply (rd)

						-- Goal`2-8-2-10-2-1-5 Success by reduction
						:apply (rd)

						-- Goal`2-8-2-10-2-1-6 Success by reduction
						:apply (rd)

						-- Goal`2-8-2-10-2-1-7 Success by reduction
						:apply (rd)

						-- Goal`2-8-2-10-2-1-8 Success by reduction
						:apply (rd)

						-- Goal`2-8-2-10-2-1-9 Success by reduction
						:apply (rd)

						-- Goal`2-8-2-10-2-1-10  -  mutex(chlck(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb67#2 = :ctf [lock(S#Sys, q@Pid)  .]

						:apply(csb67#2)

							-- Goal`2-8-2-10-2-1-10-1 Success by reduction
							:apply (rd)

							-- Goal`2-8-2-10-2-1-10-2 Success by implication and reduction.
							:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs6]  by {p:Pid <- P#Pid ; q:Pid <- p@Pid ;}

							:apply (rd)

						-- Goal`2-8-2-10-2-1-11 Success by reduction
						:apply (rd)

						-- Goal`2-8-2-10-2-1-12 Success by reduction
						:apply (rd)

						-- Goal`2-8-2-10-2-1-13 Success by reduction
						:apply (rd)

						-- Goal`2-8-2-10-2-1-14 Success by reduction
						:apply (rd)

					-- Goal`2-8-2-10-2-2 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`2-8-2-11 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`2-8-2-12 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`2-8-2-13 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`2-8-2-14 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)


:sel(12)
	:apply(tc)

	-- Goal`12-1  -  inv1(stnpr(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb1#12 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb1#12)

		-- Goal`12-1-1 Success by reduction
		:apply (rd)

		-- Goal`12-1-2  -  inv1(stnpr(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb2#12 = :ctf [lock(S#Sys, p@Pid)  .]

		:apply(csb2#12)

			-- Goal`12-1-2-1  -  inv1(stnpr(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb3#12 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb3#12)

				-- Goal`12-1-2-1-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-1-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-1-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-1-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-1-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-1-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-1-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-1-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-1-9  -  inv1(stnpr(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb4#12 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb4#12)

					-- Goal`12-1-2-1-9-1  -  inv1(stnpr(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb5#12 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb5#12)

						-- Goal`12-1-2-1-9-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`12-1-2-1-9-1-2 Success by reduction
						:apply (rd)

						-- Goal`12-1-2-1-9-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`12-1-2-1-9-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`12-1-2-1-9-1-5 Success by reduction
						:apply (rd)

						-- Goal`12-1-2-1-9-1-6 Success by reduction
						:apply (rd)

						-- Goal`12-1-2-1-9-1-7 Success by reduction
						:apply (rd)

						-- Goal`12-1-2-1-9-1-8 Success by reduction
						:apply (rd)

						-- Goal`12-1-2-1-9-1-9 Success by reduction
						:apply (rd)

						-- Goal`12-1-2-1-9-1-10 Success by reduction
						:apply (rd)

						-- Goal`12-1-2-1-9-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`12-1-2-1-9-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`12-1-2-1-9-1-13 Success by reduction
						:apply (rd)

						-- Goal`12-1-2-1-9-1-14 Success by reduction
						:apply (rd)

					-- Goal`12-1-2-1-9-2  -  inv1(stnpr(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb6#12 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb6#12)

						-- Goal`12-1-2-1-9-2-1  -  inv1(stnpr(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb7#12 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb7#12)

							-- Goal`12-1-2-1-9-2-1-1 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-1-9-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-1-9-2-1-3 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-1-9-2-1-4 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-1-9-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-1-9-2-1-6 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-1-9-2-1-7 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`12-1-2-1-9-2-1-8 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-1-9-2-1-9 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-1-9-2-1-10 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-1-9-2-1-11 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-1-9-2-1-12 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-1-9-2-1-13 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-1-9-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`12-1-2-1-9-2-2 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

				-- Goal`12-1-2-1-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-1-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-1-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-1-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-1-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

			-- Goal`12-1-2-2  -  inv1(stnpr(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb8#12 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb8#12)

				-- Goal`12-1-2-2-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-2-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-2-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-2-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-2-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-2-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-2-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-2-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-2-9  -  inv1(stnpr(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb9#12 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb9#12)

					-- Goal`12-1-2-2-9-1  -  inv1(stnpr(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb10#12 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb10#12)

						-- Goal`12-1-2-2-9-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`12-1-2-2-9-1-2 Success by reduction
						:apply (rd)

						-- Goal`12-1-2-2-9-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`12-1-2-2-9-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`12-1-2-2-9-1-5 Success by reduction
						:apply (rd)

						-- Goal`12-1-2-2-9-1-6 Success by reduction
						:apply (rd)

						-- Goal`12-1-2-2-9-1-7 Success by reduction
						:apply (rd)

						-- Goal`12-1-2-2-9-1-8 Success by reduction
						:apply (rd)

						-- Goal`12-1-2-2-9-1-9 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:imp [mcs2]  by {p:Pid <- P#Pid ;}

						:apply (rd)

						-- Goal`12-1-2-2-9-1-10 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`12-1-2-2-9-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`12-1-2-2-9-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`12-1-2-2-9-1-13 Success by reduction
						:apply (rd)

						-- Goal`12-1-2-2-9-1-14 Success by reduction
						:apply (rd)

					-- Goal`12-1-2-2-9-2  -  inv1(stnpr(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb11#12 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb11#12)

						-- Goal`12-1-2-2-9-2-1  -  inv1(stnpr(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb12#12 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb12#12)

							-- Goal`12-1-2-2-9-2-1-1 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-2-9-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-2-9-2-1-3 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-2-9-2-1-4 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-2-9-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-2-9-2-1-6 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-2-9-2-1-7 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`12-1-2-2-9-2-1-8 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-2-9-2-1-9 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-2-9-2-1-10 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-2-9-2-1-11 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-2-9-2-1-12 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-2-9-2-1-13 Success by reduction
							:apply (rd)

							-- Goal`12-1-2-2-9-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`12-1-2-2-9-2-2 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

				-- Goal`12-1-2-2-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-2-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-2-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-2-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`12-1-2-2-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

	:def csb13#12 = :ctf {eq pc(S#Sys, P#Pid)  = l5 .}

	:apply(csb13#12)

	:def csb14#12 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb14#12)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb15#12 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb15#12)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb16#12 = :ctf {eq pc(S#Sys, P#Pid)  = l5 .}

	:apply(csb16#12)

	:def csb17#12 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb17#12)

	:imp [mcs2]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs2]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs2]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb18#12 = :ctf {eq pc(S#Sys, P#Pid)  = l5 .}

	:apply(csb18#12)

	:def csb19#12 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb19#12)

	:def csb20#12 = :ctf {eq glock(S#Sys)  = nop .}

	:apply(csb20#12)

	:def csb21#12 = :ctf [lock(S#Sys, P#Pid)  .]

	:apply(csb21#12)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:imp [mcs2]  by {p:Pid <- P#Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb22#12 = :ctf {eq pc(S#Sys, P#Pid)  = l5 .}

	:apply(csb22#12)

	:def csb23#12 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb23#12)

	:def csb24#12 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb24#12)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb25#12 = :ctf [lock(S#Sys, P#Pid)  .]

	:apply(csb25#12)

	:def csb26#12 = :ctf {eq prede(S#Sys, P#Pid)  = q@Pid .}

	:apply(csb26#12)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs2]  by {p:Pid <- P#Pid ;}

	:apply (rd)

	:def csb27#12 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb27#12)

	:def csb28#12 = :ctf {eq prede(S#Sys, P#Pid)  = P#Pid .}

	:apply(csb28#12)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb29#12 = :ctf {eq prede(S#Sys, P#Pid)  = q@Pid .}

	:apply(csb29#12)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb30#12 = :ctf {eq pc(S#Sys, P#Pid)  = l5 .}

	:apply(csb30#12)

	:def csb31#12 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb31#12)

	:def csb32#12 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb32#12)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb33#12 = :ctf [lock(S#Sys, P#Pid)  .]

	:apply(csb33#12)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs2]  by {p:Pid <- P#Pid ;}

	:apply (rd)

	:def csb34#12 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb34#12)

	:def csb35#12 = :ctf [lock(S#Sys, P#Pid)  .]

	:apply(csb35#12)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs2]  by {p:Pid <- P#Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb36#12 = :ctf {eq pc(S#Sys, P#Pid)  = l5 .}

	:apply(csb36#12)

	:def csb37#12 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb37#12)

	:def csb38#12 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb38#12)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb39#12 = :ctf [lock(S#Sys, P#Pid)  .]

	:apply(csb39#12)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs2]  by {p:Pid <- P#Pid ;}

	:apply (rd)

	:def csb40#12 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb40#12)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	-- Goal`12-8  -  mutex(stnpr(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb41#12 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb41#12)

		-- Goal`12-8-1 Success by reduction
		:apply (rd)

		-- Goal`12-8-2  -  mutex(stnpr(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb42#12 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb42#12)

			-- Goal`12-8-2-1 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`12-8-2-2 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`12-8-2-3 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`12-8-2-4 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`12-8-2-5 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`12-8-2-6 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`12-8-2-7 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`12-8-2-8 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`12-8-2-9  -  mutex(stnpr(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb43#12 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb43#12)

				-- Goal`12-8-2-9-1  -  mutex(stnpr(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb44#12 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb44#12)

					-- Goal`12-8-2-9-1-1 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`12-8-2-9-1-2 Success by reduction
					:apply (rd)

					-- Goal`12-8-2-9-1-3 Success by reduction
					:apply (rd)

					-- Goal`12-8-2-9-1-4 Success by reduction
					:apply (rd)

					-- Goal`12-8-2-9-1-5 Success by reduction
					:apply (rd)

					-- Goal`12-8-2-9-1-6 Success by reduction
					:apply (rd)

					-- Goal`12-8-2-9-1-7 Success by reduction
					:apply (rd)

					-- Goal`12-8-2-9-1-8 Success by reduction
					:apply (rd)

					-- Goal`12-8-2-9-1-9 Success by reduction
					:apply (rd)

					-- Goal`12-8-2-9-1-10 Success by reduction
					:apply (rd)

					-- Goal`12-8-2-9-1-11 Success by reduction
					:apply (rd)

					-- Goal`12-8-2-9-1-12 Success by reduction
					:apply (rd)

					-- Goal`12-8-2-9-1-13 Success by reduction
					:apply (rd)

					-- Goal`12-8-2-9-1-14 Success by reduction
					:apply (rd)

				-- Goal`12-8-2-9-2  -  mutex(stnpr(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb45#12 = :ctf {eq P#Pid  = q@Pid .}

				:apply(csb45#12)

					-- Goal`12-8-2-9-2-1  -  mutex(stnpr(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb46#12 = :ctf [pc(S#Sys, q@Pid)  .]

					:apply(csb46#12)

						-- Goal`12-8-2-9-2-1-1 Success by implication and reduction.
						:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`12-8-2-9-2-1-2 Success by reduction
						:apply (rd)

						-- Goal`12-8-2-9-2-1-3 Success by reduction
						:apply (rd)

						-- Goal`12-8-2-9-2-1-4 Success by reduction
						:apply (rd)

						-- Goal`12-8-2-9-2-1-5 Success by reduction
						:apply (rd)

						-- Goal`12-8-2-9-2-1-6 Success by reduction
						:apply (rd)

						-- Goal`12-8-2-9-2-1-7 Success by reduction
						:apply (rd)

						-- Goal`12-8-2-9-2-1-8 Success by reduction
						:apply (rd)

						-- Goal`12-8-2-9-2-1-9 Success by reduction
						:apply (rd)

						-- Goal`12-8-2-9-2-1-10 Success by reduction
						:apply (rd)

						-- Goal`12-8-2-9-2-1-11 Success by reduction
						:apply (rd)

						-- Goal`12-8-2-9-2-1-12 Success by reduction
						:apply (rd)

						-- Goal`12-8-2-9-2-1-13 Success by reduction
						:apply (rd)

						-- Goal`12-8-2-9-2-1-14 Success by reduction
						:apply (rd)

					-- Goal`12-8-2-9-2-2 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`12-8-2-10 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`12-8-2-11 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`12-8-2-12 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`12-8-2-13 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`12-8-2-14 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)


:sel(5)
	:apply(tc)

	-- Goal`5-1  -  inv1(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb1#5 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb1#5)

		-- Goal`5-1-1 Success by reduction
		:apply (rd)

		-- Goal`5-1-2  -  inv1(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb2#5 = :ctf [lock(S#Sys, p@Pid)  .]

		:apply(csb2#5)

			-- Goal`5-1-2-1  -  inv1(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb3#5 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb3#5)

				-- Goal`5-1-2-1-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-1-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-1-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-1-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-1-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-1-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-1-7  -  inv1(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb4#5 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb4#5)

					-- Goal`5-1-2-1-7-1  -  inv1(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb5#5 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb5#5)

						-- Goal`5-1-2-1-7-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`5-1-2-1-7-1-2 Success by reduction
						:apply (rd)

						-- Goal`5-1-2-1-7-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`5-1-2-1-7-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`5-1-2-1-7-1-5 Success by reduction
						:apply (rd)

						-- Goal`5-1-2-1-7-1-6 Success by reduction
						:apply (rd)

						-- Goal`5-1-2-1-7-1-7  -  inv1(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb6#5 = :ctf [prede(S#Sys, p@Pid)  .]

						:apply(csb6#5)

							-- Goal`5-1-2-1-7-1-7-1 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs1]  by {p:Pid <- q@Pid ; q:Pid <- P#Pid ;}

							:apply (rd)

						-- Goal`5-1-2-1-7-1-8 Success by reduction
						:apply (rd)

						-- Goal`5-1-2-1-7-1-9 Success by reduction
						:apply (rd)

						-- Goal`5-1-2-1-7-1-10 Success by reduction
						:apply (rd)

						-- Goal`5-1-2-1-7-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`5-1-2-1-7-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`5-1-2-1-7-1-13 Success by reduction
						:apply (rd)

						-- Goal`5-1-2-1-7-1-14 Success by reduction
						:apply (rd)

					-- Goal`5-1-2-1-7-2  -  inv1(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb7#5 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb7#5)

						-- Goal`5-1-2-1-7-2-1  -  inv1(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb8#5 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb8#5)

							-- Goal`5-1-2-1-7-2-1-1 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-1-7-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-1-7-2-1-3 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-1-7-2-1-4 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-1-7-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-1-7-2-1-6 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-1-7-2-1-7 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-1-2-1-7-2-1-8 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-1-7-2-1-9 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-1-7-2-1-10 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-1-7-2-1-11 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-1-7-2-1-12 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-1-7-2-1-13 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-1-7-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`5-1-2-1-7-2-2 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

				-- Goal`5-1-2-1-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-1-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-1-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-1-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-1-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-1-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-1-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

			-- Goal`5-1-2-2  -  inv1(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb9#5 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb9#5)

				-- Goal`5-1-2-2-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-2-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-2-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-2-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-2-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-2-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-2-7  -  inv1(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb10#5 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb10#5)

					-- Goal`5-1-2-2-7-1  -  inv1(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb11#5 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb11#5)

						-- Goal`5-1-2-2-7-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`5-1-2-2-7-1-2 Success by reduction
						:apply (rd)

						-- Goal`5-1-2-2-7-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`5-1-2-2-7-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`5-1-2-2-7-1-5 Success by reduction
						:apply (rd)

						-- Goal`5-1-2-2-7-1-6 Success by reduction
						:apply (rd)

						-- Goal`5-1-2-2-7-1-7  -  inv1(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb12#5 = :ctf [prede(S#Sys, p@Pid)  .]

						:apply(csb12#5)

							-- Goal`5-1-2-2-7-1-7-1 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs1]  by {p:Pid <- q@Pid ; q:Pid <- P#Pid ;}

							:apply (rd)

						-- Goal`5-1-2-2-7-1-8 Success by reduction
						:apply (rd)

						-- Goal`5-1-2-2-7-1-9 Success by reduction
						:apply (rd)

						-- Goal`5-1-2-2-7-1-10 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`5-1-2-2-7-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`5-1-2-2-7-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`5-1-2-2-7-1-13 Success by reduction
						:apply (rd)

						-- Goal`5-1-2-2-7-1-14 Success by reduction
						:apply (rd)

					-- Goal`5-1-2-2-7-2  -  inv1(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb13#5 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb13#5)

						-- Goal`5-1-2-2-7-2-1  -  inv1(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb14#5 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb14#5)

							-- Goal`5-1-2-2-7-2-1-1 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-2-7-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-2-7-2-1-3 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-2-7-2-1-4 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-2-7-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-2-7-2-1-6 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-2-7-2-1-7 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-1-2-2-7-2-1-8 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-2-7-2-1-9 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-2-7-2-1-10 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-2-7-2-1-11 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-2-7-2-1-12 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-2-7-2-1-13 Success by reduction
							:apply (rd)

							-- Goal`5-1-2-2-7-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`5-1-2-2-7-2-2 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

				-- Goal`5-1-2-2-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-2-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-2-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-2-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-2-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-2-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`5-1-2-2-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

	:def csb15#5 = :ctf {eq pc(S#Sys, P#Pid)  = l3 .}

	:apply(csb15#5)

	:def csb16#5 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb16#5)

	:def csb17#5 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb17#5)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb18#5 = :ctf {eq prede(S#Sys, P#Pid)  = nop .}

	:apply(csb18#5)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb19#5 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb19#5)

	:def csb20#5 = :ctf {eq prede(S#Sys, P#Pid)  = nop .}

	:apply(csb20#5)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	-- Goal`5-3  -  inv3(chprd(S#Sys, P#Pid), p@Pid)  - Success
	:def csb21#5 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb21#5)

		-- Goal`5-3-1 Success by reduction
		:apply (rd)

		-- Goal`5-3-2  -  inv3(chprd(S#Sys, P#Pid), p@Pid)  - Success
		:def csb22#5 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb22#5)

			-- Goal`5-3-2-1 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`5-3-2-2 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`5-3-2-3 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`5-3-2-4 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`5-3-2-5 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`5-3-2-6 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`5-3-2-7  -  inv3(chprd(S#Sys, P#Pid), p@Pid)  - Success
			:def csb23#5 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb23#5)

				-- Goal`5-3-2-7-1  -  inv3(chprd(S#Sys, P#Pid), p@Pid)  - Success
				:def csb24#5 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb24#5)

					-- Goal`5-3-2-7-1-1 Success by reduction
					:apply (rd)

					-- Goal`5-3-2-7-1-2 Success by reduction
					:apply (rd)

					-- Goal`5-3-2-7-1-3 Success by reduction
					:apply (rd)

					-- Goal`5-3-2-7-1-4 Success by reduction
					:apply (rd)

					-- Goal`5-3-2-7-1-5 Success by reduction
					:apply (rd)

					-- Goal`5-3-2-7-1-6 Success by reduction
					:apply (rd)

					-- Goal`5-3-2-7-1-7  -  inv3(chprd(S#Sys, P#Pid), p@Pid)  - Success
					:def csb25#5 = :ctf [prede(S#Sys, p@Pid)  .]

					:apply(csb25#5)

						-- Goal`5-3-2-7-1-7-1 Success by reduction
						:apply (rd)

					-- Goal`5-3-2-7-1-8 Success by reduction
					:apply (rd)

					-- Goal`5-3-2-7-1-9 Success by implication and reduction.
					:imp [mcs2]  by {p:Pid <- p@Pid ;}

					:apply (rd)

					-- Goal`5-3-2-7-1-10 Success by reduction
					:apply (rd)

					-- Goal`5-3-2-7-1-11 Success by reduction
					:apply (rd)

					-- Goal`5-3-2-7-1-12 Success by reduction
					:apply (rd)

					-- Goal`5-3-2-7-1-13 Success by reduction
					:apply (rd)

					-- Goal`5-3-2-7-1-14 Success by reduction
					:apply (rd)

				-- Goal`5-3-2-7-2 Success by implication and reduction.
				:imp [mcs2]  by {p:Pid <- p@Pid ;}

				:apply (rd)

			-- Goal`5-3-2-8 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`5-3-2-9 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`5-3-2-10 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`5-3-2-11 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`5-3-2-12 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`5-3-2-13 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`5-3-2-14 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

	:def csb26#5 = :ctf {eq pc(S#Sys, P#Pid)  = l3 .}

	:apply(csb26#5)

	:def csb27#5 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb27#5)

	:def csb28#5 = :ctf {eq prede(S#Sys, P#Pid)  = nop .}

	:apply(csb28#5)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	-- Goal`5-5  -  inv5(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb29#5 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb29#5)

		-- Goal`5-5-1 Success by reduction
		:apply (rd)

		-- Goal`5-5-2  -  inv5(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb30#5 = :ctf {eq next(S#Sys, q@Pid)  = p@Pid .}

		:apply(csb30#5)

			-- Goal`5-5-2-1  -  inv5(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb31#5 = :ctf {eq prede(S#Sys, p@Pid)  = q@Pid .}

			:apply(csb31#5)

				-- Goal`5-5-2-1-1  -  inv5(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb32#5 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb32#5)

					-- Goal`5-5-2-1-1-1  -  inv5(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb33#5 = :ctf [lock(S#Sys, p@Pid)  .]

					:apply(csb33#5)

						-- Goal`5-5-2-1-1-1-1  -  inv5(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb34#5 = :ctf [pc(S#Sys, p@Pid)  .]

						:apply(csb34#5)

							-- Goal`5-5-2-1-1-1-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-1-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-1-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-1-10 Success by reduction
							:apply (rd)

							-- Goal`5-5-2-1-1-1-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-1-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

						-- Goal`5-5-2-1-1-1-2  -  inv5(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb35#5 = :ctf [pc(S#Sys, p@Pid)  .]

						:apply(csb35#5)

							-- Goal`5-5-2-1-1-1-2-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-2-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-2-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-2-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-2-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-2-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-2-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-2-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-2-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-2-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-2-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-2-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-2-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-1-2-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

					-- Goal`5-5-2-1-1-2  -  inv5(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb36#5 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb36#5)

						-- Goal`5-5-2-1-1-2-1  -  inv5(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb37#5 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb37#5)

							-- Goal`5-5-2-1-1-2-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`5-5-2-1-1-2-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`5-5-2-1-1-2-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-1-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`5-5-2-1-1-2-2  -  inv5(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb38#5 = :ctf [pc(S#Sys, P#Pid)  .]

						:apply(csb38#5)

							-- Goal`5-5-2-1-1-2-2-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-2-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-2-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-2-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-2-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-2-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-2-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-2-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-2-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-2-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-2-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-2-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-2-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-1-2-2-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

				-- Goal`5-5-2-1-2  -  inv5(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb39#5 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb39#5)

					-- Goal`5-5-2-1-2-1 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`5-5-2-1-2-2 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`5-5-2-1-2-3 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`5-5-2-1-2-4 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`5-5-2-1-2-5 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`5-5-2-1-2-6 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`5-5-2-1-2-7  -  inv5(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb40#5 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb40#5)

						-- Goal`5-5-2-1-2-7-1  -  inv5(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb41#5 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb41#5)

							-- Goal`5-5-2-1-2-7-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-2-7-1-2 Success by reduction
							:apply (rd)

							-- Goal`5-5-2-1-2-7-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-2-7-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-2-7-1-5 Success by reduction
							:apply (rd)

							-- Goal`5-5-2-1-2-7-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-2-7-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-2-7-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-2-7-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-2-7-1-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-2-7-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-2-7-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-2-7-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`5-5-2-1-2-7-1-14 Success by reduction
							:apply (rd)

						-- Goal`5-5-2-1-2-7-2 Success by implication and reduction.
						:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

					-- Goal`5-5-2-1-2-8 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`5-5-2-1-2-9 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`5-5-2-1-2-10 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`5-5-2-1-2-11 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`5-5-2-1-2-12 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`5-5-2-1-2-13 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`5-5-2-1-2-14 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`5-5-2-2 Success by reduction
			:apply (rd)

	:def csb42#5 = :ctf {eq pc(S#Sys, P#Pid)  = l3 .}

	:apply(csb42#5)

	:def csb43#5 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb43#5)

	:def csb44#5 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb44#5)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb45#5 = :ctf {eq prede(S#Sys, P#Pid)  = nop .}

	:apply(csb45#5)

	:def csb46#5 = :ctf {eq pc(S#Sys, q@Pid)  = l6 .}

	:apply(csb46#5)

	:def csb47#5 = :ctf [lock(S#Sys, q@Pid)  .]

	:apply(csb47#5)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs]  by {p:Pid <- q@Pid ; q:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb48#5 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb48#5)

	:def csb49#5 = :ctf {eq prede(S#Sys, P#Pid)  = nop .}

	:apply(csb49#5)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb50#5 = :ctf {eq pc(S#Sys, P#Pid)  = l3 .}

	:apply(csb50#5)

	:def csb51#5 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb51#5)

	:def csb52#5 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb52#5)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb53#5 = :ctf {eq prede(S#Sys, P#Pid)  = nop .}

	:apply(csb53#5)

	:def csb54#5 = :ctf {eq pc(S#Sys, q@Pid)  = l6 .}

	:apply(csb54#5)

	:def csb55#5 = :ctf [lock(S#Sys, q@Pid)  .]

	:apply(csb55#5)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs]  by {p:Pid <- q@Pid ; q:Pid <- p@Pid ;}

	:apply (rd)

	:def csb56#5 = :ctf {eq pc(S#Sys, q@Pid)  = cs .}

	:apply(csb56#5)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs]  by {p:Pid <- q@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb57#5 = :ctf {eq pc(S#Sys, q@Pid)  = l10 .}

	:apply(csb57#5)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs]  by {p:Pid <- q@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb58#5 = :ctf {eq pc(S#Sys, q@Pid)  = l11 .}

	:apply(csb58#5)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs]  by {p:Pid <- q@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb59#5 = :ctf {eq pc(S#Sys, q@Pid)  = l7 .}

	:apply(csb59#5)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs]  by {p:Pid <- q@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb60#5 = :ctf {eq pc(S#Sys, q@Pid)  = l8 .}

	:apply(csb60#5)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs]  by {p:Pid <- q@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb61#5 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb61#5)

	:def csb62#5 = :ctf {eq prede(S#Sys, P#Pid)  = nop .}

	:apply(csb62#5)

	:def csb63#5 = :ctf {eq pc(S#Sys, p@Pid)  = l6 .}

	:apply(csb63#5)

	:def csb64#5 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb64#5)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb65#5 = :ctf {eq pc(S#Sys, p@Pid)  = cs .}

	:apply(csb65#5)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb66#5 = :ctf {eq pc(S#Sys, p@Pid)  = l10 .}

	:apply(csb66#5)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb67#5 = :ctf {eq pc(S#Sys, p@Pid)  = l11 .}

	:apply(csb67#5)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb68#5 = :ctf {eq pc(S#Sys, p@Pid)  = l7 .}

	:apply(csb68#5)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb69#5 = :ctf {eq pc(S#Sys, p@Pid)  = l8 .}

	:apply(csb69#5)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	-- Goal`5-8  -  mutex(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb70#5 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb70#5)

		-- Goal`5-8-1 Success by reduction
		:apply (rd)

		-- Goal`5-8-2  -  mutex(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb71#5 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb71#5)

			-- Goal`5-8-2-1 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`5-8-2-2 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`5-8-2-3 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`5-8-2-4 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`5-8-2-5 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`5-8-2-6 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`5-8-2-7  -  mutex(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb72#5 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb72#5)

				-- Goal`5-8-2-7-1  -  mutex(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb73#5 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb73#5)

					-- Goal`5-8-2-7-1-1 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`5-8-2-7-1-2 Success by reduction
					:apply (rd)

					-- Goal`5-8-2-7-1-3 Success by reduction
					:apply (rd)

					-- Goal`5-8-2-7-1-4 Success by reduction
					:apply (rd)

					-- Goal`5-8-2-7-1-5 Success by reduction
					:apply (rd)

					-- Goal`5-8-2-7-1-6 Success by reduction
					:apply (rd)

					-- Goal`5-8-2-7-1-7  -  mutex(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb74#5 = :ctf [pc(S#Sys, q@Pid)  .]

					:apply(csb74#5)

						-- Goal`5-8-2-7-1-7-1  -  mutex(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb75#5 = :ctf [prede(S#Sys, p@Pid)  .]

						:apply(csb75#5)

							-- Goal`5-8-2-7-1-7-1-1 Success by implication and reduction.
							:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs]  by {p:Pid <- q@Pid ; q:Pid <- P#Pid ;}

							:apply (rd)

						-- Goal`5-8-2-7-1-7-2 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-1-7-3 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-1-7-4 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-1-7-5 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-1-7-6 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-1-7-7 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-1-7-8 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-1-7-9 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-1-7-10 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-1-7-11 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-1-7-12 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-1-7-13 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-1-7-14 Success by reduction
						:apply (rd)

					-- Goal`5-8-2-7-1-8 Success by reduction
					:apply (rd)

					-- Goal`5-8-2-7-1-9 Success by reduction
					:apply (rd)

					-- Goal`5-8-2-7-1-10 Success by reduction
					:apply (rd)

					-- Goal`5-8-2-7-1-11 Success by reduction
					:apply (rd)

					-- Goal`5-8-2-7-1-12 Success by reduction
					:apply (rd)

					-- Goal`5-8-2-7-1-13 Success by reduction
					:apply (rd)

					-- Goal`5-8-2-7-1-14 Success by reduction
					:apply (rd)

				-- Goal`5-8-2-7-2  -  mutex(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb76#5 = :ctf {eq P#Pid  = q@Pid .}

				:apply(csb76#5)

					-- Goal`5-8-2-7-2-1  -  mutex(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb77#5 = :ctf [pc(S#Sys, q@Pid)  .]

					:apply(csb77#5)

						-- Goal`5-8-2-7-2-1-1 Success by implication and reduction.
						:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`5-8-2-7-2-1-2 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-2-1-3 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-2-1-4 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-2-1-5 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-2-1-6 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-2-1-7  -  mutex(chprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb78#5 = :ctf [glock(S#Sys)  .]

						:apply(csb78#5)

							-- Goal`5-8-2-7-2-1-7-1 Success by implication and reduction.
							:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- p@Pid ;}

							:apply (rd)

						-- Goal`5-8-2-7-2-1-8 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-2-1-9 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-2-1-10 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-2-1-11 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-2-1-12 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-2-1-13 Success by reduction
						:apply (rd)

						-- Goal`5-8-2-7-2-1-14 Success by reduction
						:apply (rd)

					-- Goal`5-8-2-7-2-2 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`5-8-2-8 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`5-8-2-9 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`5-8-2-10 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`5-8-2-11 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`5-8-2-12 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`5-8-2-13 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`5-8-2-14 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)


:sel(13)
	:apply(tc)

	-- Goal`13-1  -  inv1(stnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb1#13 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb1#13)

		-- Goal`13-1-1 Success by reduction
		:apply (rd)

		-- Goal`13-1-2  -  inv1(stnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb2#13 = :ctf [lock(S#Sys, p@Pid)  .]

		:apply(csb2#13)

			-- Goal`13-1-2-1  -  inv1(stnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb3#13 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb3#13)

				-- Goal`13-1-2-1-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-1-2  -  inv1(stnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb4#13 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb4#13)

					-- Goal`13-1-2-1-2-1  -  inv1(stnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb5#13 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb5#13)

						-- Goal`13-1-2-1-2-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`13-1-2-1-2-1-2 Success by reduction
						:apply (rd)

						-- Goal`13-1-2-1-2-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`13-1-2-1-2-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`13-1-2-1-2-1-5 Success by reduction
						:apply (rd)

						-- Goal`13-1-2-1-2-1-6 Success by reduction
						:apply (rd)

						-- Goal`13-1-2-1-2-1-7 Success by reduction
						:apply (rd)

						-- Goal`13-1-2-1-2-1-8 Success by reduction
						:apply (rd)

						-- Goal`13-1-2-1-2-1-9 Success by reduction
						:apply (rd)

						-- Goal`13-1-2-1-2-1-10 Success by reduction
						:apply (rd)

						-- Goal`13-1-2-1-2-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`13-1-2-1-2-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`13-1-2-1-2-1-13 Success by reduction
						:apply (rd)

						-- Goal`13-1-2-1-2-1-14 Success by reduction
						:apply (rd)

					-- Goal`13-1-2-1-2-2  -  inv1(stnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb6#13 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb6#13)

						-- Goal`13-1-2-1-2-2-1  -  inv1(stnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb7#13 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb7#13)

							-- Goal`13-1-2-1-2-2-1-1 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-1-2-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-1-2-2-1-3 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-1-2-2-1-4 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-1-2-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-1-2-2-1-6 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-1-2-2-1-7 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`13-1-2-1-2-2-1-8 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-1-2-2-1-9 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-1-2-2-1-10 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-1-2-2-1-11 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-1-2-2-1-12 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-1-2-2-1-13 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-1-2-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`13-1-2-1-2-2-2 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

				-- Goal`13-1-2-1-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-1-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-1-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-1-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-1-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-1-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-1-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-1-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-1-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-1-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-1-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-1-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

			-- Goal`13-1-2-2  -  inv1(stnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb8#13 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb8#13)

				-- Goal`13-1-2-2-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-2-2  -  inv1(stnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb9#13 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb9#13)

					-- Goal`13-1-2-2-2-1  -  inv1(stnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb10#13 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb10#13)

						-- Goal`13-1-2-2-2-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`13-1-2-2-2-1-2 Success by reduction
						:apply (rd)

						-- Goal`13-1-2-2-2-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`13-1-2-2-2-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`13-1-2-2-2-1-5 Success by reduction
						:apply (rd)

						-- Goal`13-1-2-2-2-1-6 Success by reduction
						:apply (rd)

						-- Goal`13-1-2-2-2-1-7 Success by reduction
						:apply (rd)

						-- Goal`13-1-2-2-2-1-8 Success by reduction
						:apply (rd)

						-- Goal`13-1-2-2-2-1-9 Success by reduction
						:apply (rd)

						-- Goal`13-1-2-2-2-1-10 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`13-1-2-2-2-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`13-1-2-2-2-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`13-1-2-2-2-1-13 Success by reduction
						:apply (rd)

						-- Goal`13-1-2-2-2-1-14 Success by reduction
						:apply (rd)

					-- Goal`13-1-2-2-2-2  -  inv1(stnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb11#13 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb11#13)

						-- Goal`13-1-2-2-2-2-1  -  inv1(stnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb12#13 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb12#13)

							-- Goal`13-1-2-2-2-2-1-1 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-2-2-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-2-2-2-1-3 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-2-2-2-1-4 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-2-2-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-2-2-2-1-6 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-2-2-2-1-7 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`13-1-2-2-2-2-1-8 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-2-2-2-1-9 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-2-2-2-1-10 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-2-2-2-1-11 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-2-2-2-1-12 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-2-2-2-1-13 Success by reduction
							:apply (rd)

							-- Goal`13-1-2-2-2-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`13-1-2-2-2-2-2 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

				-- Goal`13-1-2-2-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-2-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-2-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-2-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-2-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-2-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-2-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-2-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-2-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-2-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-2-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`13-1-2-2-14 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

	:def csb13#13 = :ctf {eq pc(S#Sys, P#Pid)  = l1 .}

	:apply(csb13#13)

	:def csb14#13 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb14#13)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb15#13 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb15#13)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb16#13 = :ctf {eq pc(S#Sys, P#Pid)  = l1 .}

	:apply(csb16#13)

	:def csb17#13 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb17#13)

	:imp [mcs2]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs2]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs2]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb18#13 = :ctf {eq pc(S#Sys, P#Pid)  = l1 .}

	:apply(csb18#13)

	:def csb19#13 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb19#13)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb20#13 = :ctf {eq pc(S#Sys, P#Pid)  = l1 .}

	:apply(csb20#13)

	:def csb21#13 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb21#13)

	:def csb22#13 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb22#13)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb23#13 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb23#13)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb24#13 = :ctf {eq pc(S#Sys, P#Pid)  = l1 .}

	:apply(csb24#13)

	:def csb25#13 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb25#13)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb26#13 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb26#13)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb27#13 = :ctf {eq pc(S#Sys, P#Pid)  = l1 .}

	:apply(csb27#13)

	:def csb28#13 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb28#13)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb29#13 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb29#13)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	-- Goal`13-8  -  mutex(stnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb30#13 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb30#13)

		-- Goal`13-8-1 Success by reduction
		:apply (rd)

		-- Goal`13-8-2  -  mutex(stnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb31#13 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb31#13)

			-- Goal`13-8-2-1 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`13-8-2-2  -  mutex(stnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb32#13 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb32#13)

				-- Goal`13-8-2-2-1  -  mutex(stnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb33#13 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb33#13)

					-- Goal`13-8-2-2-1-1 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`13-8-2-2-1-2 Success by reduction
					:apply (rd)

					-- Goal`13-8-2-2-1-3 Success by reduction
					:apply (rd)

					-- Goal`13-8-2-2-1-4 Success by reduction
					:apply (rd)

					-- Goal`13-8-2-2-1-5 Success by reduction
					:apply (rd)

					-- Goal`13-8-2-2-1-6 Success by reduction
					:apply (rd)

					-- Goal`13-8-2-2-1-7 Success by reduction
					:apply (rd)

					-- Goal`13-8-2-2-1-8 Success by reduction
					:apply (rd)

					-- Goal`13-8-2-2-1-9 Success by reduction
					:apply (rd)

					-- Goal`13-8-2-2-1-10 Success by reduction
					:apply (rd)

					-- Goal`13-8-2-2-1-11 Success by reduction
					:apply (rd)

					-- Goal`13-8-2-2-1-12 Success by reduction
					:apply (rd)

					-- Goal`13-8-2-2-1-13 Success by reduction
					:apply (rd)

					-- Goal`13-8-2-2-1-14 Success by reduction
					:apply (rd)

				-- Goal`13-8-2-2-2  -  mutex(stnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb34#13 = :ctf {eq P#Pid  = q@Pid .}

				:apply(csb34#13)

					-- Goal`13-8-2-2-2-1  -  mutex(stnxt(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb35#13 = :ctf [pc(S#Sys, q@Pid)  .]

					:apply(csb35#13)

						-- Goal`13-8-2-2-2-1-1 Success by implication and reduction.
						:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`13-8-2-2-2-1-2 Success by reduction
						:apply (rd)

						-- Goal`13-8-2-2-2-1-3 Success by reduction
						:apply (rd)

						-- Goal`13-8-2-2-2-1-4 Success by reduction
						:apply (rd)

						-- Goal`13-8-2-2-2-1-5 Success by reduction
						:apply (rd)

						-- Goal`13-8-2-2-2-1-6 Success by reduction
						:apply (rd)

						-- Goal`13-8-2-2-2-1-7 Success by reduction
						:apply (rd)

						-- Goal`13-8-2-2-2-1-8 Success by reduction
						:apply (rd)

						-- Goal`13-8-2-2-2-1-9 Success by reduction
						:apply (rd)

						-- Goal`13-8-2-2-2-1-10 Success by reduction
						:apply (rd)

						-- Goal`13-8-2-2-2-1-11 Success by reduction
						:apply (rd)

						-- Goal`13-8-2-2-2-1-12 Success by reduction
						:apply (rd)

						-- Goal`13-8-2-2-2-1-13 Success by reduction
						:apply (rd)

						-- Goal`13-8-2-2-2-1-14 Success by reduction
						:apply (rd)

					-- Goal`13-8-2-2-2-2 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`13-8-2-3 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`13-8-2-4 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`13-8-2-5 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`13-8-2-6 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`13-8-2-7 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`13-8-2-8 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`13-8-2-9 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`13-8-2-10 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`13-8-2-11 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`13-8-2-12 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`13-8-2-13 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`13-8-2-14 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)


:sel(15)
	:apply(tc)

	-- Goal`15-1  -  inv1(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb1#15 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb1#15)

		-- Goal`15-1-1 Success by reduction
		:apply (rd)

		-- Goal`15-1-2  -  inv1(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb2#15 = :ctf [lock(S#Sys, p@Pid)  .]

		:apply(csb2#15)

			-- Goal`15-1-2-1  -  inv1(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb3#15 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb3#15)

				-- Goal`15-1-2-1-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-1-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-1-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-1-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-1-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-1-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-1-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-1-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-1-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-1-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-1-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-1-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-1-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-1-14  -  inv1(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb4#15 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb4#15)

					-- Goal`15-1-2-1-14-1  -  inv1(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb5#15 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb5#15)

						-- Goal`15-1-2-1-14-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`15-1-2-1-14-1-2 Success by reduction
						:apply (rd)

						-- Goal`15-1-2-1-14-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`15-1-2-1-14-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`15-1-2-1-14-1-5 Success by reduction
						:apply (rd)

						-- Goal`15-1-2-1-14-1-6 Success by reduction
						:apply (rd)

						-- Goal`15-1-2-1-14-1-7 Success by reduction
						:apply (rd)

						-- Goal`15-1-2-1-14-1-8 Success by reduction
						:apply (rd)

						-- Goal`15-1-2-1-14-1-9 Success by reduction
						:apply (rd)

						-- Goal`15-1-2-1-14-1-10 Success by reduction
						:apply (rd)

						-- Goal`15-1-2-1-14-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`15-1-2-1-14-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`15-1-2-1-14-1-13 Success by reduction
						:apply (rd)

						-- Goal`15-1-2-1-14-1-14 Success by reduction
						:apply (rd)

					-- Goal`15-1-2-1-14-2  -  inv1(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb6#15 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb6#15)

						-- Goal`15-1-2-1-14-2-1  -  inv1(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb7#15 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb7#15)

							-- Goal`15-1-2-1-14-2-1-1 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-1-14-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-1-14-2-1-3 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-1-14-2-1-4 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-1-14-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-1-14-2-1-6 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-1-14-2-1-7 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-1-2-1-14-2-1-8 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-1-14-2-1-9 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-1-14-2-1-10 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-1-14-2-1-11 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-1-14-2-1-12 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-1-14-2-1-13 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-1-14-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`15-1-2-1-14-2-2 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

			-- Goal`15-1-2-2  -  inv1(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb8#15 = :ctf [pc(S#Sys, P#Pid)  .]

			:apply(csb8#15)

				-- Goal`15-1-2-2-1 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-2-2 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-2-3 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-2-4 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-2-5 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-2-6 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-2-7 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-2-8 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-2-9 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-2-10 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-2-11 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-2-12 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-2-13 Success by implication and reduction.
				:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:apply (rd)

				-- Goal`15-1-2-2-14  -  inv1(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb9#15 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb9#15)

					-- Goal`15-1-2-2-14-1  -  inv1(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb10#15 = :ctf [pc(S#Sys, p@Pid)  .]

					:apply(csb10#15)

						-- Goal`15-1-2-2-14-1-1 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`15-1-2-2-14-1-2 Success by reduction
						:apply (rd)

						-- Goal`15-1-2-2-14-1-3 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`15-1-2-2-14-1-4 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`15-1-2-2-14-1-5 Success by reduction
						:apply (rd)

						-- Goal`15-1-2-2-14-1-6 Success by reduction
						:apply (rd)

						-- Goal`15-1-2-2-14-1-7 Success by reduction
						:apply (rd)

						-- Goal`15-1-2-2-14-1-8 Success by reduction
						:apply (rd)

						-- Goal`15-1-2-2-14-1-9 Success by reduction
						:apply (rd)

						-- Goal`15-1-2-2-14-1-10 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`15-1-2-2-14-1-11 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`15-1-2-2-14-1-12 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`15-1-2-2-14-1-13 Success by reduction
						:apply (rd)

						-- Goal`15-1-2-2-14-1-14 Success by reduction
						:apply (rd)

					-- Goal`15-1-2-2-14-2  -  inv1(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb11#15 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb11#15)

						-- Goal`15-1-2-2-14-2-1  -  inv1(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb12#15 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb12#15)

							-- Goal`15-1-2-2-14-2-1-1 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-2-14-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-2-14-2-1-3 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-2-14-2-1-4 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-2-14-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-2-14-2-1-6 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-2-14-2-1-7 Success by implication and reduction.
							:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-1-2-2-14-2-1-8 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-2-14-2-1-9 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-2-14-2-1-10 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-2-14-2-1-11 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-2-14-2-1-12 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-2-14-2-1-13 Success by reduction
							:apply (rd)

							-- Goal`15-1-2-2-14-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`15-1-2-2-14-2-2 Success by implication and reduction.
						:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

	-- Goal`15-2  -  inv2(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb13#15 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb13#15)

		-- Goal`15-2-1 Success by reduction
		:apply (rd)

		-- Goal`15-2-2  -  inv2(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb14#15 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb14#15)

			-- Goal`15-2-2-1 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-2-2-2 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-2-2-3 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-2-2-4 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-2-2-5 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-2-2-6 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-2-2-7 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-2-2-8 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-2-2-9 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-2-2-10 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-2-2-11 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-2-2-12 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-2-2-13 Success by implication and reduction.
			:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-2-2-14  -  inv2(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb15#15 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb15#15)

				-- Goal`15-2-2-14-1  -  inv2(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb16#15 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb16#15)

					-- Goal`15-2-2-14-1-1 Success by reduction
					:apply (rd)

					-- Goal`15-2-2-14-1-2 Success by reduction
					:apply (rd)

					-- Goal`15-2-2-14-1-3 Success by reduction
					:apply (rd)

					-- Goal`15-2-2-14-1-4 Success by reduction
					:apply (rd)

					-- Goal`15-2-2-14-1-5 Success by reduction
					:apply (rd)

					-- Goal`15-2-2-14-1-6 Success by reduction
					:apply (rd)

					-- Goal`15-2-2-14-1-7 Success by implication and reduction.
					:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-2-2-14-1-8 Success by reduction
					:apply (rd)

					-- Goal`15-2-2-14-1-9 Success by reduction
					:apply (rd)

					-- Goal`15-2-2-14-1-10 Success by reduction
					:apply (rd)

					-- Goal`15-2-2-14-1-11 Success by reduction
					:apply (rd)

					-- Goal`15-2-2-14-1-12 Success by reduction
					:apply (rd)

					-- Goal`15-2-2-14-1-13 Success by reduction
					:apply (rd)

					-- Goal`15-2-2-14-1-14 Success by reduction
					:apply (rd)

				-- Goal`15-2-2-14-2  -  inv2(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb17#15 = :ctf {eq P#Pid  = q@Pid .}

				:apply(csb17#15)

					-- Goal`15-2-2-14-2-1  -  inv2(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb18#15 = :ctf [pc(S#Sys, q@Pid)  .]

					:apply(csb18#15)

						-- Goal`15-2-2-14-2-1-1 Success by reduction
						:apply (rd)

						-- Goal`15-2-2-14-2-1-2 Success by reduction
						:apply (rd)

						-- Goal`15-2-2-14-2-1-3 Success by reduction
						:apply (rd)

						-- Goal`15-2-2-14-2-1-4 Success by reduction
						:apply (rd)

						-- Goal`15-2-2-14-2-1-5 Success by reduction
						:apply (rd)

						-- Goal`15-2-2-14-2-1-6 Success by reduction
						:apply (rd)

						-- Goal`15-2-2-14-2-1-7 Success by implication and reduction.
						:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`15-2-2-14-2-1-8 Success by reduction
						:apply (rd)

						-- Goal`15-2-2-14-2-1-9 Success by reduction
						:apply (rd)

						-- Goal`15-2-2-14-2-1-10 Success by reduction
						:apply (rd)

						-- Goal`15-2-2-14-2-1-11 Success by reduction
						:apply (rd)

						-- Goal`15-2-2-14-2-1-12 Success by reduction
						:apply (rd)

						-- Goal`15-2-2-14-2-1-13 Success by reduction
						:apply (rd)

						-- Goal`15-2-2-14-2-1-14 Success by reduction
						:apply (rd)

					-- Goal`15-2-2-14-2-2 Success by implication and reduction.
					:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

	-- Goal`15-3  -  inv3(want(S#Sys, P#Pid), p@Pid)  - Success
	:def csb19#15 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb19#15)

		-- Goal`15-3-1 Success by reduction
		:apply (rd)

		-- Goal`15-3-2  -  inv3(want(S#Sys, P#Pid), p@Pid)  - Success
		:def csb20#15 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb20#15)

			-- Goal`15-3-2-1 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`15-3-2-2 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`15-3-2-3 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`15-3-2-4 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`15-3-2-5 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`15-3-2-6 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`15-3-2-7 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`15-3-2-8 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`15-3-2-9 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`15-3-2-10 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`15-3-2-11 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`15-3-2-12 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`15-3-2-13 Success by implication and reduction.
			:imp [mcs2]  by {p:Pid <- p@Pid ;}

			:apply (rd)

			-- Goal`15-3-2-14  -  inv3(want(S#Sys, P#Pid), p@Pid)  - Success
			:def csb21#15 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb21#15)

				-- Goal`15-3-2-14-1  -  inv3(want(S#Sys, P#Pid), p@Pid)  - Success
				:def csb22#15 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb22#15)

					-- Goal`15-3-2-14-1-1 Success by reduction
					:apply (rd)

					-- Goal`15-3-2-14-1-2 Success by reduction
					:apply (rd)

					-- Goal`15-3-2-14-1-3 Success by reduction
					:apply (rd)

					-- Goal`15-3-2-14-1-4 Success by reduction
					:apply (rd)

					-- Goal`15-3-2-14-1-5 Success by reduction
					:apply (rd)

					-- Goal`15-3-2-14-1-6 Success by reduction
					:apply (rd)

					-- Goal`15-3-2-14-1-7 Success by reduction
					:apply (rd)

					-- Goal`15-3-2-14-1-8 Success by reduction
					:apply (rd)

					-- Goal`15-3-2-14-1-9 Success by implication and reduction.
					:imp [mcs2]  by {p:Pid <- p@Pid ;}

					:apply (rd)

					-- Goal`15-3-2-14-1-10 Success by reduction
					:apply (rd)

					-- Goal`15-3-2-14-1-11 Success by reduction
					:apply (rd)

					-- Goal`15-3-2-14-1-12 Success by reduction
					:apply (rd)

					-- Goal`15-3-2-14-1-13 Success by reduction
					:apply (rd)

					-- Goal`15-3-2-14-1-14 Success by reduction
					:apply (rd)

				-- Goal`15-3-2-14-2 Success by implication and reduction.
				:imp [mcs2]  by {p:Pid <- p@Pid ;}

				:apply (rd)

	:def csb23#15 = :ctf {eq pc(S#Sys, P#Pid)  = rs .}

	:apply(csb23#15)

	:def csb24#15 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb24#15)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	-- Goal`15-5  -  inv5(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb25#15 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb25#15)

		-- Goal`15-5-1 Success by reduction
		:apply (rd)

		-- Goal`15-5-2  -  inv5(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb26#15 = :ctf {eq next(S#Sys, q@Pid)  = p@Pid .}

		:apply(csb26#15)

			-- Goal`15-5-2-1  -  inv5(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb27#15 = :ctf {eq prede(S#Sys, p@Pid)  = q@Pid .}

			:apply(csb27#15)

				-- Goal`15-5-2-1-1  -  inv5(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb28#15 = :ctf {eq P#Pid  = p@Pid .}

				:apply(csb28#15)

					-- Goal`15-5-2-1-1-1  -  inv5(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb29#15 = :ctf [lock(S#Sys, p@Pid)  .]

					:apply(csb29#15)

						-- Goal`15-5-2-1-1-1-1  -  inv5(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb30#15 = :ctf [pc(S#Sys, p@Pid)  .]

						:apply(csb30#15)

							-- Goal`15-5-2-1-1-1-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-1-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-1-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-1-10 Success by reduction
							:apply (rd)

							-- Goal`15-5-2-1-1-1-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-1-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

						-- Goal`15-5-2-1-1-1-2  -  inv5(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb31#15 = :ctf [pc(S#Sys, p@Pid)  .]

						:apply(csb31#15)

							-- Goal`15-5-2-1-1-1-2-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-2-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-2-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-2-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-2-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-2-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-2-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-2-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-2-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-2-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-2-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-2-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-2-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-1-2-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

					-- Goal`15-5-2-1-1-2  -  inv5(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb32#15 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb32#15)

						-- Goal`15-5-2-1-1-2-1  -  inv5(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb33#15 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb33#15)

							-- Goal`15-5-2-1-1-2-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-1-2 Success by reduction
							:apply (rd)

							-- Goal`15-5-2-1-1-2-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-1-5 Success by reduction
							:apply (rd)

							-- Goal`15-5-2-1-1-2-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-1-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-1-14 Success by reduction
							:apply (rd)

						-- Goal`15-5-2-1-1-2-2  -  inv5(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb34#15 = :ctf [pc(S#Sys, P#Pid)  .]

						:apply(csb34#15)

							-- Goal`15-5-2-1-1-2-2-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-2-2 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-2-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-2-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-2-5 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-2-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-2-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-2-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-2-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-2-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-2-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-2-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-2-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-1-2-2-14 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

				-- Goal`15-5-2-1-2  -  inv5(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb35#15 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb35#15)

					-- Goal`15-5-2-1-2-1 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-5-2-1-2-2 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-5-2-1-2-3 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-5-2-1-2-4 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-5-2-1-2-5 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-5-2-1-2-6 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-5-2-1-2-7 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-5-2-1-2-8 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-5-2-1-2-9 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-5-2-1-2-10 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-5-2-1-2-11 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-5-2-1-2-12 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-5-2-1-2-13 Success by implication and reduction.
					:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-5-2-1-2-14  -  inv5(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb36#15 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb36#15)

						-- Goal`15-5-2-1-2-14-1  -  inv5(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb37#15 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb37#15)

							-- Goal`15-5-2-1-2-14-1-1 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-2-14-1-2 Success by reduction
							:apply (rd)

							-- Goal`15-5-2-1-2-14-1-3 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-2-14-1-4 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-2-14-1-5 Success by reduction
							:apply (rd)

							-- Goal`15-5-2-1-2-14-1-6 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-2-14-1-7 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-2-14-1-8 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-2-14-1-9 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-2-14-1-10 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-2-14-1-11 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-2-14-1-12 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-2-14-1-13 Success by implication and reduction.
							:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-5-2-1-2-14-1-14 Success by reduction
							:apply (rd)

						-- Goal`15-5-2-1-2-14-2 Success by implication and reduction.
						:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

			-- Goal`15-5-2-2 Success by reduction
			:apply (rd)

	-- Goal`15-6  -  inv6(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb38#15 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb38#15)

		-- Goal`15-6-1 Success by reduction
		:apply (rd)

		-- Goal`15-6-2  -  inv6(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb39#15 = :ctf [lock(S#Sys, p@Pid)  .]

		:apply(csb39#15)

			-- Goal`15-6-2-1  -  inv6(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb40#15 = :ctf [lock(S#Sys, q@Pid)  .]

			:apply(csb40#15)

				-- Goal`15-6-2-1-1 Success by reduction
				:apply (rd)

				-- Goal`15-6-2-1-2  -  inv6(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb41#15 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb41#15)

					-- Goal`15-6-2-1-2-1 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-1-2-2 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-1-2-3 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-1-2-4 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-1-2-5 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-1-2-6 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-1-2-7 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-1-2-8 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-1-2-9 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-1-2-10 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-1-2-11 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-1-2-12 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-1-2-13 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-1-2-14  -  inv6(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb42#15 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb42#15)

						-- Goal`15-6-2-1-2-14-1  -  inv6(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb43#15 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb43#15)

							-- Goal`15-6-2-1-2-14-1-1 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-1-2-14-1-2 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-1-2-14-1-3 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-1-2-14-1-4 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-1-2-14-1-5 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-1-2-14-1-6 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-1-2-14-1-7 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-1-2-14-1-8 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-1-2-14-1-9 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-1-2-14-1-10 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-6-2-1-2-14-1-11 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-1-2-14-1-12 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-1-2-14-1-13 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-1-2-14-1-14 Success by reduction
							:apply (rd)

						-- Goal`15-6-2-1-2-14-2  -  inv6(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb44#15 = :ctf [glock(S#Sys)  .]

						:apply(csb44#15)

							-- Goal`15-6-2-1-2-14-2-1 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- q@Pid ;}

							:apply (rd)

			-- Goal`15-6-2-2  -  inv6(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb45#15 = :ctf [lock(S#Sys, q@Pid)  .]

			:apply(csb45#15)

				-- Goal`15-6-2-2-1 Success by reduction
				:apply (rd)

				-- Goal`15-6-2-2-2  -  inv6(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb46#15 = :ctf [pc(S#Sys, P#Pid)  .]

				:apply(csb46#15)

					-- Goal`15-6-2-2-2-1 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-2-2-2 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-2-2-3 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-2-2-4 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-2-2-5 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-2-2-6 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-2-2-7 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-2-2-8 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-2-2-9 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-2-2-10 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-2-2-11 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-2-2-12 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-2-2-13 Success by implication and reduction.
					:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-6-2-2-2-14  -  inv6(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb47#15 = :ctf {eq P#Pid  = q@Pid .}

					:apply(csb47#15)

						-- Goal`15-6-2-2-2-14-1  -  inv6(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb48#15 = :ctf [pc(S#Sys, q@Pid)  .]

						:apply(csb48#15)

							-- Goal`15-6-2-2-2-14-1-1 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-2-2-14-1-2 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-2-2-14-1-3 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-2-2-14-1-4 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-2-2-14-1-5 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-2-2-14-1-6 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-2-2-14-1-7 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-2-2-14-1-8 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-2-2-14-1-9 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-2-2-14-1-10 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:apply (rd)

							-- Goal`15-6-2-2-2-14-1-11 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-2-2-14-1-12 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-2-2-14-1-13 Success by reduction
							:apply (rd)

							-- Goal`15-6-2-2-2-14-1-14 Success by reduction
							:apply (rd)

						-- Goal`15-6-2-2-2-14-2  -  inv6(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
						:def csb49#15 = :ctf [glock(S#Sys)  .]

						:apply(csb49#15)

							-- Goal`15-6-2-2-2-14-2-1 Success by implication and reduction.
							:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

							:imp [mcs3]  by {p:Pid <- q@Pid ;}

							:apply (rd)

	:def csb50#15 = :ctf {eq pc(S#Sys, P#Pid)  = rs .}

	:apply(csb50#15)

	:def csb51#15 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb51#15)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb52#15 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb52#15)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	-- Goal`15-8  -  mutex(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb53#15 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb53#15)

		-- Goal`15-8-1 Success by reduction
		:apply (rd)

		-- Goal`15-8-2  -  mutex(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb54#15 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb54#15)

			-- Goal`15-8-2-1 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-8-2-2 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-8-2-3 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-8-2-4 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-8-2-5 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-8-2-6 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-8-2-7 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-8-2-8 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-8-2-9 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-8-2-10 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-8-2-11 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-8-2-12 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-8-2-13 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`15-8-2-14  -  mutex(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb55#15 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb55#15)

				-- Goal`15-8-2-14-1  -  mutex(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb56#15 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb56#15)

					-- Goal`15-8-2-14-1-1 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`15-8-2-14-1-2 Success by reduction
					:apply (rd)

					-- Goal`15-8-2-14-1-3 Success by reduction
					:apply (rd)

					-- Goal`15-8-2-14-1-4 Success by reduction
					:apply (rd)

					-- Goal`15-8-2-14-1-5 Success by reduction
					:apply (rd)

					-- Goal`15-8-2-14-1-6 Success by reduction
					:apply (rd)

					-- Goal`15-8-2-14-1-7 Success by reduction
					:apply (rd)

					-- Goal`15-8-2-14-1-8 Success by reduction
					:apply (rd)

					-- Goal`15-8-2-14-1-9 Success by reduction
					:apply (rd)

					-- Goal`15-8-2-14-1-10 Success by reduction
					:apply (rd)

					-- Goal`15-8-2-14-1-11 Success by reduction
					:apply (rd)

					-- Goal`15-8-2-14-1-12 Success by reduction
					:apply (rd)

					-- Goal`15-8-2-14-1-13 Success by reduction
					:apply (rd)

					-- Goal`15-8-2-14-1-14 Success by reduction
					:apply (rd)

				-- Goal`15-8-2-14-2  -  mutex(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb57#15 = :ctf {eq P#Pid  = q@Pid .}

				:apply(csb57#15)

					-- Goal`15-8-2-14-2-1  -  mutex(want(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb58#15 = :ctf [pc(S#Sys, q@Pid)  .]

					:apply(csb58#15)

						-- Goal`15-8-2-14-2-1-1 Success by implication and reduction.
						:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`15-8-2-14-2-1-2 Success by reduction
						:apply (rd)

						-- Goal`15-8-2-14-2-1-3 Success by reduction
						:apply (rd)

						-- Goal`15-8-2-14-2-1-4 Success by reduction
						:apply (rd)

						-- Goal`15-8-2-14-2-1-5 Success by reduction
						:apply (rd)

						-- Goal`15-8-2-14-2-1-6 Success by reduction
						:apply (rd)

						-- Goal`15-8-2-14-2-1-7 Success by reduction
						:apply (rd)

						-- Goal`15-8-2-14-2-1-8 Success by reduction
						:apply (rd)

						-- Goal`15-8-2-14-2-1-9 Success by reduction
						:apply (rd)

						-- Goal`15-8-2-14-2-1-10 Success by reduction
						:apply (rd)

						-- Goal`15-8-2-14-2-1-11 Success by reduction
						:apply (rd)

						-- Goal`15-8-2-14-2-1-12 Success by reduction
						:apply (rd)

						-- Goal`15-8-2-14-2-1-13 Success by reduction
						:apply (rd)

						-- Goal`15-8-2-14-2-1-14 Success by reduction
						:apply (rd)

					-- Goal`15-8-2-14-2-2 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)


:sel(14)
	:apply(tc)

	:def csb1#14 = :ctf {eq pc(S#Sys, P#Pid)  = l2 .}

	:apply(csb1#14)

	:def csb2#14 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb2#14)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb3#14 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb3#14)

	:def csb4#14 = :ctf {eq glock(S#Sys)  = nop .}

	:apply(csb4#14)

	:def csb5#14 = :ctf {eq pc(S#Sys, p@Pid)  = l6 .}

	:apply(csb5#14)

	:def csb6#14 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb6#14)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb7#14 = :ctf {eq pc(S#Sys, p@Pid)  = cs .}

	:apply(csb7#14)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb8#14 = :ctf {eq pc(S#Sys, p@Pid)  = l10 .}

	:apply(csb8#14)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb9#14 = :ctf {eq pc(S#Sys, p@Pid)  = l11 .}

	:apply(csb9#14)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb10#14 = :ctf {eq pc(S#Sys, p@Pid)  = l7 .}

	:apply(csb10#14)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb11#14 = :ctf {eq pc(S#Sys, p@Pid)  = l8 .}

	:apply(csb11#14)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb12#14 = :ctf {eq pc(S#Sys, P#Pid)  = l2 .}

	:apply(csb12#14)

	:def csb13#14 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb13#14)

	:def csb14#14 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb14#14)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb15#14 = :ctf {eq glock(S#Sys)  = nop .}

	:apply(csb15#14)

	:def csb16#14 = :ctf {eq pc(S#Sys, q@Pid)  = l3 .}

	:apply(csb16#14)

	:def csb17#14 = :ctf {eq prede(S#Sys, q@Pid)  = nop .}

	:apply(csb17#14)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs3]  by {p:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb18#14 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb18#14)

	:def csb19#14 = :ctf {eq glock(S#Sys)  = nop .}

	:apply(csb19#14)

	:def csb20#14 = :ctf {eq pc(S#Sys, p@Pid)  = l3 .}

	:apply(csb20#14)

	:def csb21#14 = :ctf {eq prede(S#Sys, p@Pid)  = nop .}

	:apply(csb21#14)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb22#14 = :ctf {eq pc(S#Sys, P#Pid)  = l2 .}

	:apply(csb22#14)

	:def csb23#14 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb23#14)

	:imp [mcs2]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs2]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs2]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb24#14 = :ctf {eq pc(S#Sys, P#Pid)  = l2 .}

	:apply(csb24#14)

	:def csb25#14 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb25#14)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb26#14 = :ctf {eq pc(S#Sys, P#Pid)  = l2 .}

	:apply(csb26#14)

	:def csb27#14 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb27#14)

	:def csb28#14 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb28#14)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb29#14 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb29#14)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb30#14 = :ctf {eq pc(S#Sys, P#Pid)  = l2 .}

	:apply(csb30#14)

	:def csb31#14 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb31#14)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb32#14 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb32#14)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb33#14 = :ctf {eq pc(S#Sys, P#Pid)  = l2 .}

	:apply(csb33#14)

	:def csb34#14 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb34#14)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb35#14 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb35#14)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	-- Goal`14-8  -  mutex(stprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb36#14 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb36#14)

		-- Goal`14-8-1 Success by reduction
		:apply (rd)

		-- Goal`14-8-2  -  mutex(stprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb37#14 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb37#14)

			-- Goal`14-8-2-1 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`14-8-2-2 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`14-8-2-3 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`14-8-2-4 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`14-8-2-5 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`14-8-2-6  -  mutex(stprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb38#14 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb38#14)

				-- Goal`14-8-2-6-1  -  mutex(stprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb39#14 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb39#14)

					-- Goal`14-8-2-6-1-1 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`14-8-2-6-1-2 Success by reduction
					:apply (rd)

					-- Goal`14-8-2-6-1-3 Success by reduction
					:apply (rd)

					-- Goal`14-8-2-6-1-4 Success by reduction
					:apply (rd)

					-- Goal`14-8-2-6-1-5 Success by reduction
					:apply (rd)

					-- Goal`14-8-2-6-1-6 Success by reduction
					:apply (rd)

					-- Goal`14-8-2-6-1-7 Success by reduction
					:apply (rd)

					-- Goal`14-8-2-6-1-8 Success by reduction
					:apply (rd)

					-- Goal`14-8-2-6-1-9 Success by reduction
					:apply (rd)

					-- Goal`14-8-2-6-1-10 Success by reduction
					:apply (rd)

					-- Goal`14-8-2-6-1-11 Success by reduction
					:apply (rd)

					-- Goal`14-8-2-6-1-12 Success by reduction
					:apply (rd)

					-- Goal`14-8-2-6-1-13 Success by reduction
					:apply (rd)

					-- Goal`14-8-2-6-1-14 Success by reduction
					:apply (rd)

				-- Goal`14-8-2-6-2  -  mutex(stprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb40#14 = :ctf {eq P#Pid  = q@Pid .}

				:apply(csb40#14)

					-- Goal`14-8-2-6-2-1  -  mutex(stprd(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
					:def csb41#14 = :ctf [pc(S#Sys, q@Pid)  .]

					:apply(csb41#14)

						-- Goal`14-8-2-6-2-1-1 Success by implication and reduction.
						:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

						:apply (rd)

						-- Goal`14-8-2-6-2-1-2 Success by reduction
						:apply (rd)

						-- Goal`14-8-2-6-2-1-3 Success by reduction
						:apply (rd)

						-- Goal`14-8-2-6-2-1-4 Success by reduction
						:apply (rd)

						-- Goal`14-8-2-6-2-1-5 Success by reduction
						:apply (rd)

						-- Goal`14-8-2-6-2-1-6 Success by reduction
						:apply (rd)

						-- Goal`14-8-2-6-2-1-7 Success by reduction
						:apply (rd)

						-- Goal`14-8-2-6-2-1-8 Success by reduction
						:apply (rd)

						-- Goal`14-8-2-6-2-1-9 Success by reduction
						:apply (rd)

						-- Goal`14-8-2-6-2-1-10 Success by reduction
						:apply (rd)

						-- Goal`14-8-2-6-2-1-11 Success by reduction
						:apply (rd)

						-- Goal`14-8-2-6-2-1-12 Success by reduction
						:apply (rd)

						-- Goal`14-8-2-6-2-1-13 Success by reduction
						:apply (rd)

						-- Goal`14-8-2-6-2-1-14 Success by reduction
						:apply (rd)

					-- Goal`14-8-2-6-2-2 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

			-- Goal`14-8-2-7 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`14-8-2-8 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`14-8-2-9 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`14-8-2-10 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`14-8-2-11 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`14-8-2-12 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`14-8-2-13 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`14-8-2-14 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)


:sel(11)
	:apply(tc)

	:def csb1#11 = :ctf {eq pc(S#Sys, P#Pid)  = l11 .}

	:apply(csb1#11)

	:def csb2#11 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb2#11)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb3#11 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb3#11)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb4#11 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb4#11)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb5#11 = :ctf {eq next(S#Sys, P#Pid)  = p@Pid .}

	:apply(csb5#11)

	:def csb6#11 = :ctf {eq pc(S#Sys, p@Pid)  = l6 .}

	:apply(csb6#11)

	:def csb7#11 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb7#11)

	:def csb8#11 = :ctf {eq pc(S#Sys, q@Pid)  = l3 .}

	:apply(csb8#11)

	:def csb9#11 = :ctf {eq prede(S#Sys, q@Pid)  = nop .}

	:apply(csb9#11)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs]  by {p:Pid <- P#Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb10#11 = :ctf {eq pc(S#Sys, P#Pid)  = l11 .}

	:apply(csb10#11)

	:def csb11#11 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb11#11)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb12#11 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb12#11)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs1]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb13#11 = :ctf {eq pc(S#Sys, P#Pid)  = l11 .}

	:apply(csb13#11)

	:def csb14#11 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb14#11)

	:imp [mcs2]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb15#11 = :ctf {eq next(S#Sys, P#Pid)  = p@Pid .}

	:apply(csb15#11)

	:def csb16#11 = :ctf {eq pc(S#Sys, p@Pid)  = l5 .}

	:apply(csb16#11)

	:def csb17#11 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb17#11)

	:imp [mcs2]  by {p:Pid <- p@Pid ;}

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:imp [mcs2]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs2]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs2]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs2]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb18#11 = :ctf {eq pc(S#Sys, P#Pid)  = l11 .}

	:apply(csb18#11)

	:def csb19#11 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb19#11)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb20#11 = :ctf {eq next(S#Sys, P#Pid)  = p@Pid .}

	:apply(csb20#11)

	:def csb21#11 = :ctf {eq pc(S#Sys, p@Pid)  = l6 .}

	:apply(csb21#11)

	:def csb22#11 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb22#11)

	:def csb23#11 = :ctf {eq glock(S#Sys)  = nop .}

	:apply(csb23#11)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:imp [mcs3]  by {p:Pid <- P#Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:imp [mcs3]  by {p:Pid <- p@Pid ;}

	:apply (rd)

	:def csb24#11 = :ctf {eq pc(S#Sys, P#Pid)  = l11 .}

	:apply(csb24#11)

	:def csb25#11 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb25#11)

	:def csb26#11 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb26#11)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb27#11 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb27#11)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb28#11 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb28#11)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb29#11 = :ctf {eq next(S#Sys, P#Pid)  = p@Pid .}

	:apply(csb29#11)

	:def csb30#11 = :ctf {eq pc(S#Sys, p@Pid)  = l6 .}

	:apply(csb30#11)

	:def csb31#11 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb31#11)

	:def csb32#11 = :ctf {eq pc(S#Sys, q@Pid)  = l1 .}

	:apply(csb32#11)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb33#11 = :ctf {eq pc(S#Sys, q@Pid)  = l12 .}

	:apply(csb33#11)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb34#11 = :ctf {eq pc(S#Sys, q@Pid)  = rs .}

	:apply(csb34#11)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb35#11 = :ctf {eq prede(S#Sys, p@Pid)  = P#Pid .}

	:apply(csb35#11)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb36#11 = :ctf {eq pc(S#Sys, q@Pid)  = l1 .}

	:apply(csb36#11)

	-- The corresponding proof score was not present.
	:apply (rd)

	:def csb37#11 = :ctf {eq pc(S#Sys, q@Pid)  = l12 .}

	:apply(csb37#11)

	-- The corresponding proof score was not present.
	:apply (rd)

	:def csb38#11 = :ctf {eq pc(S#Sys, q@Pid)  = rs .}

	:apply(csb38#11)

	-- The corresponding proof score was not present.
	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb39#11 = :ctf {eq pc(S#Sys, q@Pid)  = l1 .}

	:apply(csb39#11)

	-- The corresponding proof score was not present.
	:apply (rd)

	:def csb40#11 = :ctf {eq pc(S#Sys, q@Pid)  = l12 .}

	:apply(csb40#11)

	-- The corresponding proof score was not present.
	:apply (rd)

	:def csb41#11 = :ctf {eq pc(S#Sys, q@Pid)  = rs .}

	:apply(csb41#11)

	-- The corresponding proof score was not present.
	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb42#11 = :ctf {eq pc(S#Sys, q@Pid)  = l1 .}

	:apply(csb42#11)

	-- The corresponding proof score was not present.
	:apply (rd)

	:def csb43#11 = :ctf {eq pc(S#Sys, q@Pid)  = l12 .}

	:apply(csb43#11)

	-- The corresponding proof score was not present.
	:apply (rd)

	:def csb44#11 = :ctf {eq pc(S#Sys, q@Pid)  = rs .}

	:apply(csb44#11)

	-- The corresponding proof score was not present.
	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs4]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb45#11 = :ctf {eq pc(S#Sys, P#Pid)  = l11 .}

	:apply(csb45#11)

	:def csb46#11 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb46#11)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb47#11 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb47#11)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb48#11 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb48#11)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb49#11 = :ctf {eq next(S#Sys, P#Pid)  = p@Pid .}

	:apply(csb49#11)

	:def csb50#11 = :ctf {eq pc(S#Sys, p@Pid)  = l6 .}

	:apply(csb50#11)

	:def csb51#11 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb51#11)

	:def csb52#11 = :ctf {eq pc(S#Sys, q@Pid)  = l6 .}

	:apply(csb52#11)

	:def csb53#11 = :ctf [lock(S#Sys, q@Pid)  .]

	:apply(csb53#11)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs6]  by {p:Pid <- q@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb54#11 = :ctf {eq next(S#Sys, P#Pid)  = q@Pid .}

	:apply(csb54#11)

	:def csb55#11 = :ctf {eq pc(S#Sys, q@Pid)  = l6 .}

	:apply(csb55#11)

	:def csb56#11 = :ctf [lock(S#Sys, q@Pid)  .]

	:apply(csb56#11)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs5]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb57#11 = :ctf {eq pc(S#Sys, P#Pid)  = l11 .}

	:apply(csb57#11)

	:def csb58#11 = :ctf {eq p@Pid  = P#Pid .}

	:apply(csb58#11)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb59#11 = :ctf {eq q@Pid  = P#Pid .}

	:apply(csb59#11)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb60#11 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb60#11)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:def csb61#11 = :ctf {eq next(S#Sys, P#Pid)  = p@Pid .}

	:apply(csb61#11)

	:def csb62#11 = :ctf {eq pc(S#Sys, p@Pid)  = l6 .}

	:apply(csb62#11)

	:def csb63#11 = :ctf [lock(S#Sys, p@Pid)  .]

	:apply(csb63#11)

	:def csb64#11 = :ctf {eq pc(S#Sys, q@Pid)  = cs .}

	:apply(csb64#11)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs6]  by {p:Pid <- q@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb65#11 = :ctf {eq pc(S#Sys, q@Pid)  = l10 .}

	:apply(csb65#11)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs6]  by {p:Pid <- q@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb66#11 = :ctf {eq pc(S#Sys, q@Pid)  = l11 .}

	:apply(csb66#11)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs6]  by {p:Pid <- q@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb67#11 = :ctf {eq pc(S#Sys, q@Pid)  = l7 .}

	:apply(csb67#11)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs6]  by {p:Pid <- q@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:def csb68#11 = :ctf {eq pc(S#Sys, q@Pid)  = l8 .}

	:apply(csb68#11)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:imp [mcs6]  by {p:Pid <- q@Pid ; q:Pid <- P#Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	:imp [mcs6]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

	:apply (rd)

	-- Goal`11-8  -  mutex(stlnx(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
	:def csb69#11 = :ctf {eq p@Pid  = q@Pid .}

	:apply(csb69#11)

		-- Goal`11-8-1 Success by reduction
		:apply (rd)

		-- Goal`11-8-2  -  mutex(stlnx(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
		:def csb70#11 = :ctf [pc(S#Sys, P#Pid)  .]

		:apply(csb70#11)

			-- Goal`11-8-2-1 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`11-8-2-2 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`11-8-2-3 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`11-8-2-4  -  mutex(stlnx(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
			:def csb71#11 = :ctf {eq P#Pid  = p@Pid .}

			:apply(csb71#11)

				-- Goal`11-8-2-4-1  -  mutex(stlnx(S#Sys, P#Pid), p@Pid, q@Pid)  - Success
				:def csb72#11 = :ctf [pc(S#Sys, p@Pid)  .]

				:apply(csb72#11)

					-- Goal`11-8-2-4-1-1 Success by implication and reduction.
					:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

					:apply (rd)

					-- Goal`11-8-2-4-1-2 Success by reduction
					:apply (rd)

					-- Goal`11-8-2-4-1-3 Success by reduction
					:apply (rd)

					-- Goal`11-8-2-4-1-4 Success by reduction
					:apply (rd)

					-- Goal`11-8-2-4-1-5 Success by reduction
					:apply (rd)

					-- Goal`11-8-2-4-1-6 Success by reduction
					:apply (rd)

					-- Goal`11-8-2-4-1-7 Success by reduction
					:apply (rd)

					-- Goal`11-8-2-4-1-8 Success by reduction
					:apply (rd)

					-- Goal`11-8-2-4-1-9 Success by reduction
					:apply (rd)

					-- Goal`11-8-2-4-1-10 Success by reduction
					:apply (rd)

					-- Goal`11-8-2-4-1-11 Success by reduction
					:apply (rd)

					-- Goal`11-8-2-4-1-12 Success by reduction
					:apply (rd)

					-- Goal`11-8-2-4-1-13 Success by reduction
					:apply (rd)

					-- Goal`11-8-2-4-1-14 Success by reduction
					:apply (rd)

				-- Goal`11-8-2-4-2 Success by implication and reduction.
				:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

				:imp [mcs6]  by {p:Pid <- P#Pid ; q:Pid <- p@Pid ;}

				:apply (rd)

			-- Goal`11-8-2-5 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`11-8-2-6 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`11-8-2-7 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`11-8-2-8 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`11-8-2-9 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`11-8-2-10 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`11-8-2-11 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`11-8-2-12 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`11-8-2-13 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

			-- Goal`11-8-2-14 Success by implication and reduction.
			:imp [mcs7]  by {p:Pid <- p@Pid ; q:Pid <- q@Pid ;}

			:apply (rd)

