
:proven(inv100(S:Sys, C:Cipher1))
:proven(inv110(S:Sys, C:Cipher2))
:proven(inv120(S:Sys, C:Cipher3))
:proven(inv160(S:Sys, N:Nonce))
:goal{
eq [inv15 :nonexec] : inv150(S:Sys, c:Cipher2)  = true .
}
:ind on (S:Sys)
:apply(si)
:sel(1)
	:apply(tc)

	-- Goal`1-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
	:def csb1#1 = :cvs [nw(S#Sys)  .]

	:apply(csb1#1)

		-- Goal`1-1-1 Success by reduction
		:apply (rd)

		-- Goal`1-1-2  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
		:def csb2#1 = :ctf {eq C#Cipher1  = C#EVS1-1.SubCipher1 .}

		:apply(csb2#1)

			-- Goal`1-1-2-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
			:def csb3#1 = :ctf [key(C#EVS1-1.SubCipher1)  .]

			:apply(csb3#1)

				-- Goal`1-1-2-1-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
				:def csb4#1 = :ctf [C#EVS1-1.SubCipher1 \in cenc1(N0#EVS1-1.Network)  .]

				:apply(csb4#1)

					-- Goal`1-1-2-1-1-1 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:imp [proven-goal0]  by {C:Cipher1 <- C#Cipher1 ;}

					:apply (rd)

					-- Goal`1-1-2-1-1-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

			-- Goal`1-1-2-2  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
			:def csb5#1 = :ctf [C#Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

			:apply(csb5#1)

				-- Goal`1-1-2-2-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
				:def csb6#1 = :ctf {eq nonce(C#Cipher1)  = nonce2(c@Cipher2) .}

				:apply(csb6#1)

					-- Goal`1-1-2-2-1-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
					:def csb7#1 = :ctf {eq nonce(C#EVS1-1.SubCipher1)  = nonce2(c@Cipher2) .}

					:apply(csb7#1)

						-- Goal`1-1-2-2-1-1-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
						:def csb8#1 = :ctf [c@Cipher2 \in cenc2(N0#EVS1-1.Network)  .]

						:apply(csb8#1)

							-- Goal`1-1-2-2-1-1-1-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
							:def csb9#1 = :ctf [key(C#Cipher1)  .]

							:apply(csb9#1)

								-- Goal`1-1-2-2-1-1-1-1-1 Success by reduction
								:apply (rd)

							-- Goal`1-1-2-2-1-1-1-2 Success by reduction
							:apply (rd)

						-- Goal`1-1-2-2-1-1-2  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
						:def csb10#1 = :ctf [c@Cipher2 \in cenc2(N0#EVS1-1.Network)  .]

						:apply(csb10#1)

							-- Goal`1-1-2-2-1-1-2-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
							:def csb11#1 = :ctf [key(C#Cipher1)  .]

							:apply(csb11#1)

								-- Goal`1-1-2-2-1-1-2-1-1 Success by reduction
								:apply (rd)

							-- Goal`1-1-2-2-1-1-2-2 Success by reduction
							:apply (rd)

					-- Goal`1-1-2-2-1-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

				-- Goal`1-1-2-2-2 Success by implication and reduction.
				:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

				:apply (rd)

		-- Goal`1-1-3  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
		:def csb12#1 = :ctf [C#Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

		:apply(csb12#1)

			-- Goal`1-1-3-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
			:def csb13#1 = :ctf {eq C#EVS1-1.SubCipher2  = c@Cipher2 .}

			:apply(csb13#1)

				-- Goal`1-1-3-1-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
				:def csb14#1 = :ctf {eq nonce(C#Cipher1)  = nonce2(c@Cipher2) .}

				:apply(csb14#1)

					-- Goal`1-1-3-1-1-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
					:def csb15#1 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

					:apply(csb15#1)

						-- Goal`1-1-3-1-1-1-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
						:def csb16#1 = :ctf [key(C#Cipher1)  .]

						:apply(csb16#1)

							-- Goal`1-1-3-1-1-1-1-1 Success by reduction
							:apply (rd)

						-- Goal`1-1-3-1-1-1-2  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
						:def csb17#1 = :ctf [key(C#Cipher1)  .]

						:apply(csb17#1)

							-- Goal`1-1-3-1-1-1-2-1 Success by reduction
							:apply (rd)

					-- Goal`1-1-3-1-1-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

				-- Goal`1-1-3-1-2  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
				:def csb18#1 = :ctf {eq nonce(C#Cipher1)  = nonce2(c@Cipher2) .}

				:apply(csb18#1)

					-- Goal`1-1-3-1-2-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
					:def csb19#1 = :ctf {eq nonce1(C#EVS1-1.SubCipher2)  = nonce2(c@Cipher2) .}

					:apply(csb19#1)

						-- Goal`1-1-3-1-2-1-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
						:def csb20#1 = :ctf {eq nonce2(C#EVS1-1.SubCipher2)  = nonce2(c@Cipher2) .}

						:apply(csb20#1)

							-- Goal`1-1-3-1-2-1-1-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
							:def csb21#1 = :ctf [c@Cipher2 \in cenc2(N0#EVS1-1.Network)  .]

							:apply(csb21#1)

								-- Goal`1-1-3-1-2-1-1-1-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
								:def csb22#1 = :ctf [key(C#Cipher1)  .]

								:apply(csb22#1)

									-- Goal`1-1-3-1-2-1-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`1-1-3-1-2-1-1-1-2 Success by reduction
								:apply (rd)

							-- Goal`1-1-3-1-2-1-1-2  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
							:def csb23#1 = :ctf [c@Cipher2 \in cenc2(N0#EVS1-1.Network)  .]

							:apply(csb23#1)

								-- Goal`1-1-3-1-2-1-1-2-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
								:def csb24#1 = :ctf [key(C#Cipher1)  .]

								:apply(csb24#1)

									-- Goal`1-1-3-1-2-1-1-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`1-1-3-1-2-1-1-2-2 Success by reduction
								:apply (rd)

						-- Goal`1-1-3-1-2-1-2  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
						:def csb25#1 = :ctf {eq nonce2(C#EVS1-1.SubCipher2)  = nonce2(c@Cipher2) .}

						:apply(csb25#1)

							-- Goal`1-1-3-1-2-1-2-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
							:def csb26#1 = :ctf [c@Cipher2 \in cenc2(N0#EVS1-1.Network)  .]

							:apply(csb26#1)

								-- Goal`1-1-3-1-2-1-2-1-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
								:def csb27#1 = :ctf [key(C#Cipher1)  .]

								:apply(csb27#1)

									-- Goal`1-1-3-1-2-1-2-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`1-1-3-1-2-1-2-1-2 Success by reduction
								:apply (rd)

							-- Goal`1-1-3-1-2-1-2-2  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
							:def csb28#1 = :ctf [c@Cipher2 \in cenc2(N0#EVS1-1.Network)  .]

							:apply(csb28#1)

								-- Goal`1-1-3-1-2-1-2-2-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
								:def csb29#1 = :ctf [key(C#Cipher1)  .]

								:apply(csb29#1)

									-- Goal`1-1-3-1-2-1-2-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`1-1-3-1-2-1-2-2-2 Success by reduction
								:apply (rd)

					-- Goal`1-1-3-1-2-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

			-- Goal`1-1-3-2 Success by implication and reduction.
			:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

			:apply (rd)

		-- Goal`1-1-4  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
		:def csb30#1 = :ctf [C#Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

		:apply(csb30#1)

			-- Goal`1-1-4-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
			:def csb31#1 = :ctf {eq nonce(C#Cipher1)  = nonce2(c@Cipher2) .}

			:apply(csb31#1)

				-- Goal`1-1-4-1-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
				:def csb32#1 = :ctf {eq nonce(C#EVS1-1.SubCipher3)  = nonce2(c@Cipher2) .}

				:apply(csb32#1)

					-- Goal`1-1-4-1-1-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
					:def csb33#1 = :ctf [c@Cipher2 \in cenc2(N0#EVS1-1.Network)  .]

					:apply(csb33#1)

						-- Goal`1-1-4-1-1-1-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
						:def csb34#1 = :ctf [key(C#Cipher1)  .]

						:apply(csb34#1)

							-- Goal`1-1-4-1-1-1-1-1 Success by reduction
							:apply (rd)

						-- Goal`1-1-4-1-1-1-2 Success by reduction
						:apply (rd)

					-- Goal`1-1-4-1-1-2  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
					:def csb35#1 = :ctf [c@Cipher2 \in cenc2(N0#EVS1-1.Network)  .]

					:apply(csb35#1)

						-- Goal`1-1-4-1-1-2-1  -  inv150(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher2)  - Success
						:def csb36#1 = :ctf [key(C#Cipher1)  .]

						:apply(csb36#1)

							-- Goal`1-1-4-1-1-2-1-1 Success by reduction
							:apply (rd)

						-- Goal`1-1-4-1-1-2-2 Success by reduction
						:apply (rd)

				-- Goal`1-1-4-1-2 Success by implication and reduction.
				:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

				:apply (rd)

			-- Goal`1-1-4-2 Success by implication and reduction.
			:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

			:apply (rd)


:sel(2)
	:apply(tc)

	-- Goal`2-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
	:def csb1#2 = :cvs [nw(S#Sys)  .]

	:apply(csb1#2)

		-- Goal`2-1-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
		:def csb2#2 = :ctf [creator(N#Nonce)  .]

		:apply(csb2#2)

			-- Goal`2-1-1-1 Success by reduction
			:apply (rd)

		-- Goal`2-1-2  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
		:def csb3#2 = :ctf {eq nonce(C#EVS2-1.SubCipher1)  = N#Nonce .}

		:apply(csb3#2)

			-- Goal`2-1-2-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
			:def csb4#2 = :ctf [key(C#EVS2-1.SubCipher1)  .]

			:apply(csb4#2)

				-- Goal`2-1-2-1-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
				:def csb5#2 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

				:apply(csb5#2)

					-- Goal`2-1-2-1-1-1 Success by reduction
					:apply (rd)

					-- Goal`2-1-2-1-1-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

			-- Goal`2-1-2-2  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
			:def csb6#2 = :ctf [N#Nonce \in cnonce(N0#EVS2-1.Network)  .]

			:apply(csb6#2)

				-- Goal`2-1-2-2-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
				:def csb7#2 = :ctf {eq nonce(C#EVS2-1.SubCipher1)  = nonce2(c@Cipher2) .}

				:apply(csb7#2)

					-- Goal`2-1-2-2-1-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
					:def csb8#2 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

					:apply(csb8#2)

						-- Goal`2-1-2-2-1-1-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
						:def csb9#2 = :ctf [key(C#EVS2-1.SubCipher1)  .]

						:apply(csb9#2)

							-- Goal`2-1-2-2-1-1-1-1 Success by reduction
							:apply (rd)

						-- Goal`2-1-2-2-1-1-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

					-- Goal`2-1-2-2-1-2  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
					:def csb10#2 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

					:apply(csb10#2)

						-- Goal`2-1-2-2-1-2-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
						:def csb11#2 = :ctf [P0#Prin  .]

						:apply(csb11#2)

							-- Goal`2-1-2-2-1-2-1-1 Success by reduction
							:apply (rd)

						-- Goal`2-1-2-2-1-2-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

				-- Goal`2-1-2-2-2 Success by implication and reduction.
				:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

				:apply (rd)

		-- Goal`2-1-3  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
		:def csb12#2 = :ctf {eq nonce1(C#EVS2-1.SubCipher2)  = N#Nonce .}

		:apply(csb12#2)

			-- Goal`2-1-3-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
			:def csb13#2 = :ctf {eq nonce2(C#EVS2-1.SubCipher2)  = N#Nonce .}

			:apply(csb13#2)

				-- Goal`2-1-3-1-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
				:def csb14#2 = :ctf [key(C#EVS2-1.SubCipher2)  .]

				:apply(csb14#2)

					-- Goal`2-1-3-1-1-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
					:def csb15#2 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

					:apply(csb15#2)

						-- Goal`2-1-3-1-1-1-1 Success by reduction
						:apply (rd)

						-- Goal`2-1-3-1-1-1-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

				-- Goal`2-1-3-1-2  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
				:def csb16#2 = :ctf [key(C#EVS2-1.SubCipher2)  .]

				:apply(csb16#2)

					-- Goal`2-1-3-1-2-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
					:def csb17#2 = :ctf {eq nonce2(C#EVS2-1.SubCipher2)  = nonce2(c@Cipher2) .}

					:apply(csb17#2)

						-- Goal`2-1-3-1-2-1-1 Success by reduction
						:apply (rd)

						-- Goal`2-1-3-1-2-1-2  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
						:def csb18#2 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

						:apply(csb18#2)

							-- Goal`2-1-3-1-2-1-2-1 Success by reduction
							:apply (rd)

							-- Goal`2-1-3-1-2-1-2-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

			-- Goal`2-1-3-2  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
			:def csb19#2 = :ctf {eq nonce2(C#EVS2-1.SubCipher2)  = N#Nonce .}

			:apply(csb19#2)

				-- Goal`2-1-3-2-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
				:def csb20#2 = :ctf [key(C#EVS2-1.SubCipher2)  .]

				:apply(csb20#2)

					-- Goal`2-1-3-2-1-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
					:def csb21#2 = :ctf {eq nonce1(C#EVS2-1.SubCipher2)  = nonce2(c@Cipher2) .}

					:apply(csb21#2)

						-- Goal`2-1-3-2-1-1-1 Success by reduction
						:apply (rd)

						-- Goal`2-1-3-2-1-1-2  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
						:def csb22#2 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

						:apply(csb22#2)

							-- Goal`2-1-3-2-1-1-2-1 Success by reduction
							:apply (rd)

							-- Goal`2-1-3-2-1-1-2-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

				-- Goal`2-1-3-2-2  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
				:def csb23#2 = :ctf [N#Nonce \in cnonce(N0#EVS2-1.Network)  .]

				:apply(csb23#2)

					-- Goal`2-1-3-2-2-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
					:def csb24#2 = :ctf {eq C#EVS2-1.SubCipher2  = c@Cipher2 .}

					:apply(csb24#2)

						-- Goal`2-1-3-2-2-1-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
						:def csb25#2 = :ctf {eq nonce1(c@Cipher2)  = N#Nonce .}

						:apply(csb25#2)

							-- Goal`2-1-3-2-2-1-1-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
							:def csb26#2 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

							:apply(csb26#2)

								-- Goal`2-1-3-2-2-1-1-1-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
								:def csb27#2 = :ctf [key(c@Cipher2)  .]

								:apply(csb27#2)

									-- Goal`2-1-3-2-2-1-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`2-1-3-2-2-1-1-1-2  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
								:def csb28#2 = :ctf [key(c@Cipher2)  .]

								:apply(csb28#2)

									-- Goal`2-1-3-2-2-1-1-1-2-1 Success by reduction
									:apply (rd)

							-- Goal`2-1-3-2-2-1-1-2  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
							:def csb29#2 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

							:apply(csb29#2)

								-- Goal`2-1-3-2-2-1-1-2-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
								:def csb30#2 = :ctf [key(c@Cipher2)  .]

								:apply(csb30#2)

									-- Goal`2-1-3-2-2-1-1-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`2-1-3-2-2-1-1-2-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

						-- Goal`2-1-3-2-2-1-2  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
						:def csb31#2 = :ctf {eq nonce1(C#EVS2-1.SubCipher2)  = nonce2(c@Cipher2) .}

						:apply(csb31#2)

							-- Goal`2-1-3-2-2-1-2-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
							:def csb32#2 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

							:apply(csb32#2)

								-- Goal`2-1-3-2-2-1-2-1-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
								:def csb33#2 = :ctf [key(C#EVS2-1.SubCipher2)  .]

								:apply(csb33#2)

									-- Goal`2-1-3-2-2-1-2-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`2-1-3-2-2-1-2-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`2-1-3-2-2-1-2-2  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
							:def csb34#2 = :ctf {eq nonce2(C#EVS2-1.SubCipher2)  = nonce2(c@Cipher2) .}

							:apply(csb34#2)

								-- Goal`2-1-3-2-2-1-2-2-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
								:def csb35#2 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb35#2)

									-- Goal`2-1-3-2-2-1-2-2-1-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
									:def csb36#2 = :ctf [key(C#EVS2-1.SubCipher2)  .]

									:apply(csb36#2)

										-- Goal`2-1-3-2-2-1-2-2-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`2-1-3-2-2-1-2-2-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`2-1-3-2-2-1-2-2-2  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
								:def csb37#2 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb37#2)

									-- Goal`2-1-3-2-2-1-2-2-2-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
									:def csb38#2 = :ctf [P0#Prin  .]

									:apply(csb38#2)

										-- Goal`2-1-3-2-2-1-2-2-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`2-1-3-2-2-1-2-2-2-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

					-- Goal`2-1-3-2-2-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

		-- Goal`2-1-4  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
		:def csb39#2 = :ctf {eq nonce(C#EVS2-1.SubCipher3)  = N#Nonce .}

		:apply(csb39#2)

			-- Goal`2-1-4-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
			:def csb40#2 = :ctf [key(C#EVS2-1.SubCipher3)  .]

			:apply(csb40#2)

				-- Goal`2-1-4-1-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
				:def csb41#2 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

				:apply(csb41#2)

					-- Goal`2-1-4-1-1-1 Success by reduction
					:apply (rd)

					-- Goal`2-1-4-1-1-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

			-- Goal`2-1-4-2  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
			:def csb42#2 = :ctf [N#Nonce \in cnonce(N0#EVS2-1.Network)  .]

			:apply(csb42#2)

				-- Goal`2-1-4-2-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
				:def csb43#2 = :ctf {eq nonce(C#EVS2-1.SubCipher3)  = nonce2(c@Cipher2) .}

				:apply(csb43#2)

					-- Goal`2-1-4-2-1-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
					:def csb44#2 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

					:apply(csb44#2)

						-- Goal`2-1-4-2-1-1-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
						:def csb45#2 = :ctf [key(C#EVS2-1.SubCipher3)  .]

						:apply(csb45#2)

							-- Goal`2-1-4-2-1-1-1-1 Success by reduction
							:apply (rd)

						-- Goal`2-1-4-2-1-1-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

					-- Goal`2-1-4-2-1-2  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
					:def csb46#2 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

					:apply(csb46#2)

						-- Goal`2-1-4-2-1-2-1  -  inv150(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
						:def csb47#2 = :ctf [P0#Prin  .]

						:apply(csb47#2)

							-- Goal`2-1-4-2-1-2-1-1 Success by reduction
							:apply (rd)

						-- Goal`2-1-4-2-1-2-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

				-- Goal`2-1-4-2-2 Success by implication and reduction.
				:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

				:apply (rd)


:sel(5)
	:apply(tc)

	-- Goal`5-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
	:def csb1#5 = :cvs [nw(S#Sys)  .]

	:apply(csb1#5)

		-- Goal`5-1-1 Success by reduction
		:apply (rd)

		-- Goal`5-1-2  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
		:def csb2#5 = :ctf [C#Cipher3 \in cenc3(N0#EVS5-1.Network)  .]

		:apply(csb2#5)

			-- Goal`5-1-2-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
			:def csb3#5 = :ctf {eq nonce(C#Cipher3)  = nonce2(c@Cipher2) .}

			:apply(csb3#5)

				-- Goal`5-1-2-1-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
				:def csb4#5 = :ctf {eq nonce(C#EVS5-1.SubCipher1)  = nonce2(c@Cipher2) .}

				:apply(csb4#5)

					-- Goal`5-1-2-1-1-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
					:def csb5#5 = :ctf [c@Cipher2 \in cenc2(N0#EVS5-1.Network)  .]

					:apply(csb5#5)

						-- Goal`5-1-2-1-1-1-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
						:def csb6#5 = :ctf [key(C#Cipher3)  .]

						:apply(csb6#5)

							-- Goal`5-1-2-1-1-1-1-1 Success by reduction
							:apply (rd)

						-- Goal`5-1-2-1-1-1-2 Success by reduction
						:apply (rd)

					-- Goal`5-1-2-1-1-2  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
					:def csb7#5 = :ctf [c@Cipher2 \in cenc2(N0#EVS5-1.Network)  .]

					:apply(csb7#5)

						-- Goal`5-1-2-1-1-2-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
						:def csb8#5 = :ctf [key(C#Cipher3)  .]

						:apply(csb8#5)

							-- Goal`5-1-2-1-1-2-1-1 Success by reduction
							:apply (rd)

						-- Goal`5-1-2-1-1-2-2 Success by reduction
						:apply (rd)

				-- Goal`5-1-2-1-2 Success by implication and reduction.
				:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

				:apply (rd)

			-- Goal`5-1-2-2 Success by implication and reduction.
			:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

			:apply (rd)

		-- Goal`5-1-3  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
		:def csb9#5 = :ctf [C#Cipher3 \in cenc3(N0#EVS5-1.Network)  .]

		:apply(csb9#5)

			-- Goal`5-1-3-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
			:def csb10#5 = :ctf {eq C#EVS5-1.SubCipher2  = c@Cipher2 .}

			:apply(csb10#5)

				-- Goal`5-1-3-1-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
				:def csb11#5 = :ctf {eq nonce(C#Cipher3)  = nonce2(c@Cipher2) .}

				:apply(csb11#5)

					-- Goal`5-1-3-1-1-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
					:def csb12#5 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

					:apply(csb12#5)

						-- Goal`5-1-3-1-1-1-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
						:def csb13#5 = :ctf [key(C#Cipher3)  .]

						:apply(csb13#5)

							-- Goal`5-1-3-1-1-1-1-1 Success by reduction
							:apply (rd)

						-- Goal`5-1-3-1-1-1-2  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
						:def csb14#5 = :ctf [key(C#Cipher3)  .]

						:apply(csb14#5)

							-- Goal`5-1-3-1-1-1-2-1 Success by reduction
							:apply (rd)

					-- Goal`5-1-3-1-1-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

				-- Goal`5-1-3-1-2  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
				:def csb15#5 = :ctf {eq nonce(C#Cipher3)  = nonce2(c@Cipher2) .}

				:apply(csb15#5)

					-- Goal`5-1-3-1-2-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
					:def csb16#5 = :ctf {eq nonce1(C#EVS5-1.SubCipher2)  = nonce2(c@Cipher2) .}

					:apply(csb16#5)

						-- Goal`5-1-3-1-2-1-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
						:def csb17#5 = :ctf {eq nonce2(C#EVS5-1.SubCipher2)  = nonce2(c@Cipher2) .}

						:apply(csb17#5)

							-- Goal`5-1-3-1-2-1-1-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
							:def csb18#5 = :ctf [c@Cipher2 \in cenc2(N0#EVS5-1.Network)  .]

							:apply(csb18#5)

								-- Goal`5-1-3-1-2-1-1-1-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
								:def csb19#5 = :ctf [key(C#Cipher3)  .]

								:apply(csb19#5)

									-- Goal`5-1-3-1-2-1-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`5-1-3-1-2-1-1-1-2 Success by reduction
								:apply (rd)

							-- Goal`5-1-3-1-2-1-1-2  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
							:def csb20#5 = :ctf [c@Cipher2 \in cenc2(N0#EVS5-1.Network)  .]

							:apply(csb20#5)

								-- Goal`5-1-3-1-2-1-1-2-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
								:def csb21#5 = :ctf [key(C#Cipher3)  .]

								:apply(csb21#5)

									-- Goal`5-1-3-1-2-1-1-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`5-1-3-1-2-1-1-2-2 Success by reduction
								:apply (rd)

						-- Goal`5-1-3-1-2-1-2  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
						:def csb22#5 = :ctf {eq nonce2(C#EVS5-1.SubCipher2)  = nonce2(c@Cipher2) .}

						:apply(csb22#5)

							-- Goal`5-1-3-1-2-1-2-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
							:def csb23#5 = :ctf [c@Cipher2 \in cenc2(N0#EVS5-1.Network)  .]

							:apply(csb23#5)

								-- Goal`5-1-3-1-2-1-2-1-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
								:def csb24#5 = :ctf [key(C#Cipher3)  .]

								:apply(csb24#5)

									-- Goal`5-1-3-1-2-1-2-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`5-1-3-1-2-1-2-1-2 Success by reduction
								:apply (rd)

							-- Goal`5-1-3-1-2-1-2-2  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
							:def csb25#5 = :ctf [c@Cipher2 \in cenc2(N0#EVS5-1.Network)  .]

							:apply(csb25#5)

								-- Goal`5-1-3-1-2-1-2-2-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
								:def csb26#5 = :ctf [key(C#Cipher3)  .]

								:apply(csb26#5)

									-- Goal`5-1-3-1-2-1-2-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`5-1-3-1-2-1-2-2-2 Success by reduction
								:apply (rd)

					-- Goal`5-1-3-1-2-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

			-- Goal`5-1-3-2 Success by implication and reduction.
			:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

			:apply (rd)

		-- Goal`5-1-4  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
		:def csb27#5 = :ctf {eq C#Cipher3  = C#EVS5-1.SubCipher3 .}

		:apply(csb27#5)

			-- Goal`5-1-4-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
			:def csb28#5 = :ctf [key(C#EVS5-1.SubCipher3)  .]

			:apply(csb28#5)

				-- Goal`5-1-4-1-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
				:def csb29#5 = :ctf [C#EVS5-1.SubCipher3 \in cenc3(N0#EVS5-1.Network)  .]

				:apply(csb29#5)

					-- Goal`5-1-4-1-1-1 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:imp [proven-goal2]  by {C:Cipher3 <- C#Cipher3 ;}

					:apply (rd)

					-- Goal`5-1-4-1-1-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

			-- Goal`5-1-4-2  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
			:def csb30#5 = :ctf [C#Cipher3 \in cenc3(N0#EVS5-1.Network)  .]

			:apply(csb30#5)

				-- Goal`5-1-4-2-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
				:def csb31#5 = :ctf {eq nonce(C#Cipher3)  = nonce2(c@Cipher2) .}

				:apply(csb31#5)

					-- Goal`5-1-4-2-1-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
					:def csb32#5 = :ctf {eq nonce(C#EVS5-1.SubCipher3)  = nonce2(c@Cipher2) .}

					:apply(csb32#5)

						-- Goal`5-1-4-2-1-1-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
						:def csb33#5 = :ctf [c@Cipher2 \in cenc2(N0#EVS5-1.Network)  .]

						:apply(csb33#5)

							-- Goal`5-1-4-2-1-1-1-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
							:def csb34#5 = :ctf [key(C#Cipher3)  .]

							:apply(csb34#5)

								-- Goal`5-1-4-2-1-1-1-1-1 Success by reduction
								:apply (rd)

							-- Goal`5-1-4-2-1-1-1-2 Success by reduction
							:apply (rd)

						-- Goal`5-1-4-2-1-1-2  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
						:def csb35#5 = :ctf [c@Cipher2 \in cenc2(N0#EVS5-1.Network)  .]

						:apply(csb35#5)

							-- Goal`5-1-4-2-1-1-2-1  -  inv150(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher2)  - Success
							:def csb36#5 = :ctf [key(C#Cipher3)  .]

							:apply(csb36#5)

								-- Goal`5-1-4-2-1-1-2-1-1 Success by reduction
								:apply (rd)

							-- Goal`5-1-4-2-1-1-2-2 Success by reduction
							:apply (rd)

					-- Goal`5-1-4-2-1-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

				-- Goal`5-1-4-2-2 Success by implication and reduction.
				:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

				:apply (rd)


:sel(7)
	:apply(tc)

	-- The corresponding proof score was not present.
	:apply (rd)


:sel(6)
	:apply(tc)

	-- Goal`6-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
	:def csb1#6 = :cvs [nw(S#Sys)  .]

	:apply(csb1#6)

		-- Goal`6-1-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
		:def csb2#6 = :ctf [creator(N#Nonce)  .]

		:apply(csb2#6)

			-- Goal`6-1-1-1 Success by reduction
			:apply (rd)

		-- Goal`6-1-2  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
		:def csb3#6 = :ctf {eq nonce(C#EVS6-1.SubCipher1)  = N#Nonce .}

		:apply(csb3#6)

			-- Goal`6-1-2-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
			:def csb4#6 = :ctf [key(C#EVS6-1.SubCipher1)  .]

			:apply(csb4#6)

				-- Goal`6-1-2-1-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
				:def csb5#6 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

				:apply(csb5#6)

					-- Goal`6-1-2-1-1-1 Success by reduction
					:apply (rd)

					-- Goal`6-1-2-1-1-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

			-- Goal`6-1-2-2  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
			:def csb6#6 = :ctf [N#Nonce \in cnonce(N0#EVS6-1.Network)  .]

			:apply(csb6#6)

				-- Goal`6-1-2-2-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
				:def csb7#6 = :ctf {eq nonce(C#EVS6-1.SubCipher1)  = nonce2(c@Cipher2) .}

				:apply(csb7#6)

					-- Goal`6-1-2-2-1-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
					:def csb8#6 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

					:apply(csb8#6)

						-- Goal`6-1-2-2-1-1-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
						:def csb9#6 = :ctf [key(C#EVS6-1.SubCipher1)  .]

						:apply(csb9#6)

							-- Goal`6-1-2-2-1-1-1-1 Success by reduction
							:apply (rd)

						-- Goal`6-1-2-2-1-1-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

					-- Goal`6-1-2-2-1-2  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
					:def csb10#6 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

					:apply(csb10#6)

						-- Goal`6-1-2-2-1-2-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
						:def csb11#6 = :ctf [P0#Prin  .]

						:apply(csb11#6)

							-- Goal`6-1-2-2-1-2-1-1 Success by reduction
							:apply (rd)

						-- Goal`6-1-2-2-1-2-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

				-- Goal`6-1-2-2-2 Success by implication and reduction.
				:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

				:apply (rd)

		-- Goal`6-1-3  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
		:def csb12#6 = :ctf {eq nonce1(C#EVS6-1.SubCipher2)  = N#Nonce .}

		:apply(csb12#6)

			-- Goal`6-1-3-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
			:def csb13#6 = :ctf {eq nonce2(C#EVS6-1.SubCipher2)  = N#Nonce .}

			:apply(csb13#6)

				-- Goal`6-1-3-1-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
				:def csb14#6 = :ctf [key(C#EVS6-1.SubCipher2)  .]

				:apply(csb14#6)

					-- Goal`6-1-3-1-1-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
					:def csb15#6 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

					:apply(csb15#6)

						-- Goal`6-1-3-1-1-1-1 Success by reduction
						:apply (rd)

						-- Goal`6-1-3-1-1-1-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

				-- Goal`6-1-3-1-2  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
				:def csb16#6 = :ctf [key(C#EVS6-1.SubCipher2)  .]

				:apply(csb16#6)

					-- Goal`6-1-3-1-2-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
					:def csb17#6 = :ctf {eq nonce2(C#EVS6-1.SubCipher2)  = nonce2(c@Cipher2) .}

					:apply(csb17#6)

						-- Goal`6-1-3-1-2-1-1 Success by reduction
						:apply (rd)

						-- Goal`6-1-3-1-2-1-2  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
						:def csb18#6 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

						:apply(csb18#6)

							-- Goal`6-1-3-1-2-1-2-1 Success by reduction
							:apply (rd)

							-- Goal`6-1-3-1-2-1-2-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

			-- Goal`6-1-3-2  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
			:def csb19#6 = :ctf {eq nonce2(C#EVS6-1.SubCipher2)  = N#Nonce .}

			:apply(csb19#6)

				-- Goal`6-1-3-2-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
				:def csb20#6 = :ctf [key(C#EVS6-1.SubCipher2)  .]

				:apply(csb20#6)

					-- Goal`6-1-3-2-1-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
					:def csb21#6 = :ctf {eq nonce1(C#EVS6-1.SubCipher2)  = nonce2(c@Cipher2) .}

					:apply(csb21#6)

						-- Goal`6-1-3-2-1-1-1 Success by reduction
						:apply (rd)

						-- Goal`6-1-3-2-1-1-2  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
						:def csb22#6 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

						:apply(csb22#6)

							-- Goal`6-1-3-2-1-1-2-1 Success by reduction
							:apply (rd)

							-- Goal`6-1-3-2-1-1-2-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

				-- Goal`6-1-3-2-2  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
				:def csb23#6 = :ctf [N#Nonce \in cnonce(N0#EVS6-1.Network)  .]

				:apply(csb23#6)

					-- Goal`6-1-3-2-2-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
					:def csb24#6 = :ctf {eq C#EVS6-1.SubCipher2  = c@Cipher2 .}

					:apply(csb24#6)

						-- Goal`6-1-3-2-2-1-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
						:def csb25#6 = :ctf {eq nonce1(c@Cipher2)  = N#Nonce .}

						:apply(csb25#6)

							-- Goal`6-1-3-2-2-1-1-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
							:def csb26#6 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

							:apply(csb26#6)

								-- Goal`6-1-3-2-2-1-1-1-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
								:def csb27#6 = :ctf [key(c@Cipher2)  .]

								:apply(csb27#6)

									-- Goal`6-1-3-2-2-1-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`6-1-3-2-2-1-1-1-2  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
								:def csb28#6 = :ctf [key(c@Cipher2)  .]

								:apply(csb28#6)

									-- Goal`6-1-3-2-2-1-1-1-2-1 Success by reduction
									:apply (rd)

							-- Goal`6-1-3-2-2-1-1-2  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
							:def csb29#6 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

							:apply(csb29#6)

								-- Goal`6-1-3-2-2-1-1-2-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
								:def csb30#6 = :ctf [key(c@Cipher2)  .]

								:apply(csb30#6)

									-- Goal`6-1-3-2-2-1-1-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`6-1-3-2-2-1-1-2-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

						-- Goal`6-1-3-2-2-1-2  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
						:def csb31#6 = :ctf {eq nonce1(C#EVS6-1.SubCipher2)  = nonce2(c@Cipher2) .}

						:apply(csb31#6)

							-- Goal`6-1-3-2-2-1-2-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
							:def csb32#6 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

							:apply(csb32#6)

								-- Goal`6-1-3-2-2-1-2-1-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
								:def csb33#6 = :ctf [key(C#EVS6-1.SubCipher2)  .]

								:apply(csb33#6)

									-- Goal`6-1-3-2-2-1-2-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`6-1-3-2-2-1-2-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`6-1-3-2-2-1-2-2  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
							:def csb34#6 = :ctf {eq nonce2(C#EVS6-1.SubCipher2)  = nonce2(c@Cipher2) .}

							:apply(csb34#6)

								-- Goal`6-1-3-2-2-1-2-2-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
								:def csb35#6 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb35#6)

									-- Goal`6-1-3-2-2-1-2-2-1-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
									:def csb36#6 = :ctf [key(C#EVS6-1.SubCipher2)  .]

									:apply(csb36#6)

										-- Goal`6-1-3-2-2-1-2-2-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`6-1-3-2-2-1-2-2-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`6-1-3-2-2-1-2-2-2  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
								:def csb37#6 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb37#6)

									-- Goal`6-1-3-2-2-1-2-2-2-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
									:def csb38#6 = :ctf [P0#Prin  .]

									:apply(csb38#6)

										-- Goal`6-1-3-2-2-1-2-2-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`6-1-3-2-2-1-2-2-2-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

					-- Goal`6-1-3-2-2-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

		-- Goal`6-1-4  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
		:def csb39#6 = :ctf {eq nonce(C#EVS6-1.SubCipher3)  = N#Nonce .}

		:apply(csb39#6)

			-- Goal`6-1-4-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
			:def csb40#6 = :ctf [key(C#EVS6-1.SubCipher3)  .]

			:apply(csb40#6)

				-- Goal`6-1-4-1-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
				:def csb41#6 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

				:apply(csb41#6)

					-- Goal`6-1-4-1-1-1 Success by reduction
					:apply (rd)

					-- Goal`6-1-4-1-1-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

			-- Goal`6-1-4-2  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
			:def csb42#6 = :ctf [N#Nonce \in cnonce(N0#EVS6-1.Network)  .]

			:apply(csb42#6)

				-- Goal`6-1-4-2-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
				:def csb43#6 = :ctf {eq nonce(C#EVS6-1.SubCipher3)  = nonce2(c@Cipher2) .}

				:apply(csb43#6)

					-- Goal`6-1-4-2-1-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
					:def csb44#6 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

					:apply(csb44#6)

						-- Goal`6-1-4-2-1-1-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
						:def csb45#6 = :ctf [key(C#EVS6-1.SubCipher3)  .]

						:apply(csb45#6)

							-- Goal`6-1-4-2-1-1-1-1 Success by reduction
							:apply (rd)

						-- Goal`6-1-4-2-1-1-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

					-- Goal`6-1-4-2-1-2  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
					:def csb46#6 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

					:apply(csb46#6)

						-- Goal`6-1-4-2-1-2-1  -  inv150(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher2)  - Success
						:def csb47#6 = :ctf [P0#Prin  .]

						:apply(csb47#6)

							-- Goal`6-1-4-2-1-2-1-1 Success by reduction
							:apply (rd)

						-- Goal`6-1-4-2-1-2-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

				-- Goal`6-1-4-2-2 Success by implication and reduction.
				:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

				:apply (rd)


:sel(3)
	:apply(tc)

	-- Goal`3-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
	:def csb1#3 = :cvs [nw(S#Sys)  .]

	:apply(csb1#3)

		-- Goal`3-1-1 Success by reduction
		:apply (rd)

		-- Goal`3-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
		:def csb2#3 = :ctf [C#Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

		:apply(csb2#3)

			-- Goal`3-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
			:def csb3#3 = :ctf {eq C#Cipher2  = c@Cipher2 .}

			:apply(csb3#3)

				-- Goal`3-1-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
				:def csb4#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

				:apply(csb4#3)

					-- Goal`3-1-2-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
					:def csb5#3 = :ctf {eq nonce(C#EVS3-1.SubCipher1)  = nonce2(c@Cipher2) .}

					:apply(csb5#3)

						-- Goal`3-1-2-1-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
						:def csb6#3 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

						:apply(csb6#3)

							-- Goal`3-1-2-1-1-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb7#3 = :ctf [key(C#EVS3-1.SubCipher1)  .]

							:apply(csb7#3)

								-- Goal`3-1-2-1-1-1-1-1-1 Success by reduction
								:apply (rd)

							-- Goal`3-1-2-1-1-1-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb8#3 = :ctf [key(C#EVS3-1.SubCipher1)  .]

							:apply(csb8#3)

								-- Goal`3-1-2-1-1-1-1-2-1 Success by reduction
								:apply (rd)

						-- Goal`3-1-2-1-1-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
						:def csb9#3 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

						:apply(csb9#3)

							-- Goal`3-1-2-1-1-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb10#3 = :ctf [key(c@Cipher2)  .]

							:apply(csb10#3)

								-- Goal`3-1-2-1-1-1-2-1-1 Success by reduction
								:apply (rd)

							-- Goal`3-1-2-1-1-1-2-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb11#3 = :ctf [key(c@Cipher2)  .]

							:apply(csb11#3)

								-- Goal`3-1-2-1-1-1-2-2-1 Success by reduction
								:apply (rd)

					-- Goal`3-1-2-1-1-2 Success by reduction
					:apply (rd)

				-- Goal`3-1-2-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
				:def csb12#3 = :ctf {eq nonce(C#EVS3-1.SubCipher1)  = nonce2(c@Cipher2) .}

				:apply(csb12#3)

					-- Goal`3-1-2-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
					:def csb13#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(c@Cipher2) .}

					:apply(csb13#3)

						-- Goal`3-1-2-1-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
						:def csb14#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(c@Cipher2) .}

						:apply(csb14#3)

							-- Goal`3-1-2-1-2-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb15#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

							:apply(csb15#3)

								-- Goal`3-1-2-1-2-1-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb16#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb16#3)

									-- Goal`3-1-2-1-2-1-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-2-1-2-1-1-1-2 Success by reduction
								:apply (rd)

							-- Goal`3-1-2-1-2-1-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb17#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

							:apply(csb17#3)

								-- Goal`3-1-2-1-2-1-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb18#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb18#3)

									-- Goal`3-1-2-1-2-1-1-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-2-1-2-1-1-2-2 Success by reduction
								:apply (rd)

						-- Goal`3-1-2-1-2-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
						:def csb19#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(c@Cipher2) .}

						:apply(csb19#3)

							-- Goal`3-1-2-1-2-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb20#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

							:apply(csb20#3)

								-- Goal`3-1-2-1-2-1-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb21#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb21#3)

									-- Goal`3-1-2-1-2-1-2-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-2-1-2-1-2-1-2 Success by reduction
								:apply (rd)

							-- Goal`3-1-2-1-2-1-2-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

					-- Goal`3-1-2-1-2-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
					:def csb22#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(c@Cipher2) .}

					:apply(csb22#3)

						-- Goal`3-1-2-1-2-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
						:def csb23#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(c@Cipher2) .}

						:apply(csb23#3)

							-- Goal`3-1-2-1-2-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb24#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

							:apply(csb24#3)

								-- Goal`3-1-2-1-2-2-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb25#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb25#3)

									-- Goal`3-1-2-1-2-2-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-2-1-2-2-1-1-2 Success by reduction
								:apply (rd)

							-- Goal`3-1-2-1-2-2-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb26#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

							:apply(csb26#3)

								-- Goal`3-1-2-1-2-2-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb27#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb27#3)

									-- Goal`3-1-2-1-2-2-1-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-2-1-2-2-1-2-2 Success by reduction
								:apply (rd)

						-- Goal`3-1-2-1-2-2-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
						:def csb28#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(c@Cipher2) .}

						:apply(csb28#3)

							-- Goal`3-1-2-1-2-2-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb29#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

							:apply(csb29#3)

								-- Goal`3-1-2-1-2-2-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb30#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb30#3)

									-- Goal`3-1-2-1-2-2-2-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-2-1-2-2-2-1-2 Success by reduction
								:apply (rd)

							-- Goal`3-1-2-1-2-2-2-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

			-- Goal`3-1-2-2 Success by implication and reduction.
			:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

			:apply (rd)

		-- Goal`3-1-3  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
		:def csb31#3 = :ctf {eq C#Cipher2  = C#EVS3-1.SubCipher2 .}

		:apply(csb31#3)

			-- Goal`3-1-3-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
			:def csb32#3 = :ctf [key(C#EVS3-1.SubCipher2)  .]

			:apply(csb32#3)

				-- Goal`3-1-3-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
				:def csb33#3 = :ctf [C#EVS3-1.SubCipher2 \in cenc2(N0#EVS3-1.Network)  .]

				:apply(csb33#3)

					-- Goal`3-1-3-1-1-1 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:imp [proven-goal1]  by {C:Cipher2 <- C#Cipher2 ;}

					:apply (rd)

					-- Goal`3-1-3-1-1-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

			-- Goal`3-1-3-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
			:def csb34#3 = :ctf [C#Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

			:apply(csb34#3)

				-- Goal`3-1-3-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
				:def csb35#3 = :ctf {eq C#Cipher2  = c@Cipher2 .}

				:apply(csb35#3)

					-- Goal`3-1-3-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
					:def csb36#3 = :ctf {eq C#EVS3-1.SubCipher2  = c@Cipher2 .}

					:apply(csb36#3)

						-- Goal`3-1-3-2-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
						:def csb37#3 = :ctf [key(c@Cipher2)  .]

						:apply(csb37#3)

							-- Goal`3-1-3-2-1-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb38#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

							:apply(csb38#3)

								-- Goal`3-1-3-2-1-1-1-1-1 Success by reduction
								:apply (rd)

								-- Goal`3-1-3-2-1-1-1-1-2 Success by reduction
								:apply (rd)

						-- Goal`3-1-3-2-1-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
						:def csb39#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

						:apply(csb39#3)

							-- Goal`3-1-3-2-1-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb40#3 = :ctf {eq nonce1(C#EVS3-1.SubCipher2)  = nonce2(c@Cipher2) .}

							:apply(csb40#3)

								-- Goal`3-1-3-2-1-1-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb41#3 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb41#3)

									-- Goal`3-1-3-2-1-1-2-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
									:def csb42#3 = :ctf {eq nonce2(C#EVS3-1.SubCipher2)  = nonce2(c@Cipher2) .}

									:apply(csb42#3)

										-- Goal`3-1-3-2-1-1-2-1-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb43#3 = :ctf [key(C#EVS3-1.SubCipher2)  .]

										:apply(csb43#3)

											-- Goal`3-1-3-2-1-1-2-1-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-1-2-1-1-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb44#3 = :ctf [key(C#EVS3-1.SubCipher2)  .]

										:apply(csb44#3)

											-- Goal`3-1-3-2-1-1-2-1-1-1-2-1 Success by reduction
											:apply (rd)

									-- Goal`3-1-3-2-1-1-2-1-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
									:def csb45#3 = :ctf {eq nonce2(C#EVS3-1.SubCipher2)  = nonce2(c@Cipher2) .}

									:apply(csb45#3)

										-- Goal`3-1-3-2-1-1-2-1-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb46#3 = :ctf [key(C#EVS3-1.SubCipher2)  .]

										:apply(csb46#3)

											-- Goal`3-1-3-2-1-1-2-1-1-2-1-1 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-1-2-1-1-2-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb47#3 = :ctf [key(C#EVS3-1.SubCipher2)  .]

										:apply(csb47#3)

											-- Goal`3-1-3-2-1-1-2-1-1-2-2-1 Success by reduction
											:apply (rd)

								-- Goal`3-1-3-2-1-1-2-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb48#3 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb48#3)

									-- Goal`3-1-3-2-1-1-2-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
									:def csb49#3 = :ctf {eq nonce2(C#EVS3-1.SubCipher2)  = nonce2(c@Cipher2) .}

									:apply(csb49#3)

										-- Goal`3-1-3-2-1-1-2-1-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb50#3 = :ctf [key(C#EVS3-1.SubCipher2)  .]

										:apply(csb50#3)

											-- Goal`3-1-3-2-1-1-2-1-2-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-1-2-1-2-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb51#3 = :ctf [key(c@Cipher2)  .]

										:apply(csb51#3)

											-- Goal`3-1-3-2-1-1-2-1-2-1-2-1 Success by reduction
											:apply (rd)

									-- Goal`3-1-3-2-1-1-2-1-2-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
									:def csb52#3 = :ctf {eq nonce2(C#EVS3-1.SubCipher2)  = nonce2(c@Cipher2) .}

									:apply(csb52#3)

										-- Goal`3-1-3-2-1-1-2-1-2-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb53#3 = :ctf [key(C#EVS3-1.SubCipher2)  .]

										:apply(csb53#3)

											-- Goal`3-1-3-2-1-1-2-1-2-2-1-1 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-1-2-1-2-2-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb54#3 = :ctf [key(c@Cipher2)  .]

										:apply(csb54#3)

											-- Goal`3-1-3-2-1-1-2-1-2-2-2-1 Success by reduction
											:apply (rd)

							-- Goal`3-1-3-2-1-1-2-2 Success by reduction
							:apply (rd)

					-- Goal`3-1-3-2-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
					:def csb55#3 = :ctf {eq C#EVS3-1.SubCipher2  = c@Cipher2 .}

					:apply(csb55#3)

						-- Goal`3-1-3-2-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
						:def csb56#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(c@Cipher2) .}

						:apply(csb56#3)

							-- Goal`3-1-3-2-1-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb57#3 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

							:apply(csb57#3)

								-- Goal`3-1-3-2-1-2-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb58#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb58#3)

									-- Goal`3-1-3-2-1-2-1-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
									:def csb59#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb59#3)

										-- Goal`3-1-3-2-1-2-1-1-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-3-2-1-2-1-1-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
									:def csb60#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb60#3)

										-- Goal`3-1-3-2-1-2-1-1-1-2-1 Success by reduction
										:apply (rd)

								-- Goal`3-1-3-2-1-2-1-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb61#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb61#3)

									-- Goal`3-1-3-2-1-2-1-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
									:def csb62#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb62#3)

										-- Goal`3-1-3-2-1-2-1-1-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-3-2-1-2-1-1-2-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
									:def csb63#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb63#3)

										-- Goal`3-1-3-2-1-2-1-1-2-2-1 Success by reduction
										:apply (rd)

							-- Goal`3-1-3-2-1-2-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb64#3 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

							:apply(csb64#3)

								-- Goal`3-1-3-2-1-2-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb65#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb65#3)

									-- Goal`3-1-3-2-1-2-1-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
									:def csb66#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb66#3)

										-- Goal`3-1-3-2-1-2-1-2-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-3-2-1-2-1-2-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`3-1-3-2-1-2-1-2-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb67#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb67#3)

									-- Goal`3-1-3-2-1-2-1-2-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
									:def csb68#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb68#3)

										-- Goal`3-1-3-2-1-2-1-2-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-3-2-1-2-1-2-2-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

						-- Goal`3-1-3-2-1-2-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
						:def csb69#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(c@Cipher2) .}

						:apply(csb69#3)

							-- Goal`3-1-3-2-1-2-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb70#3 = :ctf {eq nonce1(C#EVS3-1.SubCipher2)  = nonce2(c@Cipher2) .}

							:apply(csb70#3)

								-- Goal`3-1-3-2-1-2-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb71#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb71#3)

									-- Goal`3-1-3-2-1-2-2-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
									:def csb72#3 = :ctf {eq nonce2(C#EVS3-1.SubCipher2)  = nonce2(c@Cipher2) .}

									:apply(csb72#3)

										-- Goal`3-1-3-2-1-2-2-1-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb73#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

										:apply(csb73#3)

											-- Goal`3-1-3-2-1-2-2-1-1-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
											:def csb74#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb74#3)

												-- Goal`3-1-3-2-1-2-2-1-1-1-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-1-1-1-1-2 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-2-2-1-1-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb75#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

										:apply(csb75#3)

											-- Goal`3-1-3-2-1-2-2-1-1-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
											:def csb76#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb76#3)

												-- Goal`3-1-3-2-1-2-2-1-1-1-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-1-1-1-2-2 Success by reduction
											:apply (rd)

									-- Goal`3-1-3-2-1-2-2-1-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
									:def csb77#3 = :ctf {eq nonce2(C#EVS3-1.SubCipher2)  = nonce2(c@Cipher2) .}

									:apply(csb77#3)

										-- Goal`3-1-3-2-1-2-2-1-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb78#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

										:apply(csb78#3)

											-- Goal`3-1-3-2-1-2-2-1-1-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
											:def csb79#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb79#3)

												-- Goal`3-1-3-2-1-2-2-1-1-2-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-1-1-2-1-2 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-2-2-1-1-2-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb80#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

										:apply(csb80#3)

											-- Goal`3-1-3-2-1-2-2-1-1-2-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
											:def csb81#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb81#3)

												-- Goal`3-1-3-2-1-2-2-1-1-2-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-1-1-2-2-2 Success by reduction
											:apply (rd)

								-- Goal`3-1-3-2-1-2-2-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb82#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb82#3)

									-- Goal`3-1-3-2-1-2-2-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
									:def csb83#3 = :ctf {eq nonce2(C#EVS3-1.SubCipher2)  = nonce2(c@Cipher2) .}

									:apply(csb83#3)

										-- Goal`3-1-3-2-1-2-2-1-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb84#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

										:apply(csb84#3)

											-- Goal`3-1-3-2-1-2-2-1-2-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
											:def csb85#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb85#3)

												-- Goal`3-1-3-2-1-2-2-1-2-1-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-1-2-1-1-2 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-2-2-1-2-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb86#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

										:apply(csb86#3)

											-- Goal`3-1-3-2-1-2-2-1-2-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
											:def csb87#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb87#3)

												-- Goal`3-1-3-2-1-2-2-1-2-1-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-1-2-1-2-2 Success by reduction
											:apply (rd)

									-- Goal`3-1-3-2-1-2-2-1-2-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
									:def csb88#3 = :ctf {eq nonce2(C#EVS3-1.SubCipher2)  = nonce2(c@Cipher2) .}

									:apply(csb88#3)

										-- Goal`3-1-3-2-1-2-2-1-2-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb89#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

										:apply(csb89#3)

											-- Goal`3-1-3-2-1-2-2-1-2-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
											:def csb90#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb90#3)

												-- Goal`3-1-3-2-1-2-2-1-2-2-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-1-2-2-1-2 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-2-2-1-2-2-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb91#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

										:apply(csb91#3)

											-- Goal`3-1-3-2-1-2-2-1-2-2-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
											:def csb92#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb92#3)

												-- Goal`3-1-3-2-1-2-2-1-2-2-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-1-2-2-2-2 Success by reduction
											:apply (rd)

							-- Goal`3-1-3-2-1-2-2-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb93#3 = :ctf {eq nonce1(C#EVS3-1.SubCipher2)  = nonce2(c@Cipher2) .}

							:apply(csb93#3)

								-- Goal`3-1-3-2-1-2-2-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb94#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb94#3)

									-- Goal`3-1-3-2-1-2-2-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
									:def csb95#3 = :ctf {eq nonce2(C#EVS3-1.SubCipher2)  = nonce2(c@Cipher2) .}

									:apply(csb95#3)

										-- Goal`3-1-3-2-1-2-2-2-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb96#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

										:apply(csb96#3)

											-- Goal`3-1-3-2-1-2-2-2-1-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
											:def csb97#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb97#3)

												-- Goal`3-1-3-2-1-2-2-2-1-1-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-2-1-1-1-2 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-2-2-2-1-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb98#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

										:apply(csb98#3)

											-- Goal`3-1-3-2-1-2-2-2-1-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
											:def csb99#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb99#3)

												-- Goal`3-1-3-2-1-2-2-2-1-1-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-2-1-1-2-2 Success by reduction
											:apply (rd)

									-- Goal`3-1-3-2-1-2-2-2-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`3-1-3-2-1-2-2-2-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb100#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb100#3)

									-- Goal`3-1-3-2-1-2-2-2-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
									:def csb101#3 = :ctf {eq nonce2(C#EVS3-1.SubCipher2)  = nonce2(c@Cipher2) .}

									:apply(csb101#3)

										-- Goal`3-1-3-2-1-2-2-2-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb102#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

										:apply(csb102#3)

											-- Goal`3-1-3-2-1-2-2-2-2-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
											:def csb103#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb103#3)

												-- Goal`3-1-3-2-1-2-2-2-2-1-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-2-2-1-1-2 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-2-2-2-2-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
										:def csb104#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

										:apply(csb104#3)

											-- Goal`3-1-3-2-1-2-2-2-2-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
											:def csb105#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb105#3)

												-- Goal`3-1-3-2-1-2-2-2-2-1-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-2-2-1-2-2 Success by reduction
											:apply (rd)

									-- Goal`3-1-3-2-1-2-2-2-2-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

				-- Goal`3-1-3-2-2 Success by implication and reduction.
				:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

				:apply (rd)

		-- Goal`3-1-4  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
		:def csb106#3 = :ctf [C#Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

		:apply(csb106#3)

			-- Goal`3-1-4-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
			:def csb107#3 = :ctf {eq C#Cipher2  = c@Cipher2 .}

			:apply(csb107#3)

				-- Goal`3-1-4-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
				:def csb108#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

				:apply(csb108#3)

					-- Goal`3-1-4-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
					:def csb109#3 = :ctf {eq nonce(C#EVS3-1.SubCipher3)  = nonce2(c@Cipher2) .}

					:apply(csb109#3)

						-- Goal`3-1-4-1-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
						:def csb110#3 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

						:apply(csb110#3)

							-- Goal`3-1-4-1-1-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb111#3 = :ctf [key(C#EVS3-1.SubCipher3)  .]

							:apply(csb111#3)

								-- Goal`3-1-4-1-1-1-1-1-1 Success by reduction
								:apply (rd)

							-- Goal`3-1-4-1-1-1-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb112#3 = :ctf [key(C#EVS3-1.SubCipher3)  .]

							:apply(csb112#3)

								-- Goal`3-1-4-1-1-1-1-2-1 Success by reduction
								:apply (rd)

						-- Goal`3-1-4-1-1-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
						:def csb113#3 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

						:apply(csb113#3)

							-- Goal`3-1-4-1-1-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb114#3 = :ctf [key(c@Cipher2)  .]

							:apply(csb114#3)

								-- Goal`3-1-4-1-1-1-2-1-1 Success by reduction
								:apply (rd)

							-- Goal`3-1-4-1-1-1-2-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb115#3 = :ctf [key(c@Cipher2)  .]

							:apply(csb115#3)

								-- Goal`3-1-4-1-1-1-2-2-1 Success by reduction
								:apply (rd)

					-- Goal`3-1-4-1-1-2 Success by reduction
					:apply (rd)

				-- Goal`3-1-4-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
				:def csb116#3 = :ctf {eq nonce(C#EVS3-1.SubCipher3)  = nonce2(c@Cipher2) .}

				:apply(csb116#3)

					-- Goal`3-1-4-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
					:def csb117#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(c@Cipher2) .}

					:apply(csb117#3)

						-- Goal`3-1-4-1-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
						:def csb118#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(c@Cipher2) .}

						:apply(csb118#3)

							-- Goal`3-1-4-1-2-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb119#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

							:apply(csb119#3)

								-- Goal`3-1-4-1-2-1-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb120#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb120#3)

									-- Goal`3-1-4-1-2-1-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-4-1-2-1-1-1-2 Success by reduction
								:apply (rd)

							-- Goal`3-1-4-1-2-1-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb121#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

							:apply(csb121#3)

								-- Goal`3-1-4-1-2-1-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb122#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb122#3)

									-- Goal`3-1-4-1-2-1-1-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-4-1-2-1-1-2-2 Success by reduction
								:apply (rd)

						-- Goal`3-1-4-1-2-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
						:def csb123#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(c@Cipher2) .}

						:apply(csb123#3)

							-- Goal`3-1-4-1-2-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb124#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

							:apply(csb124#3)

								-- Goal`3-1-4-1-2-1-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb125#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb125#3)

									-- Goal`3-1-4-1-2-1-2-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-4-1-2-1-2-1-2 Success by reduction
								:apply (rd)

							-- Goal`3-1-4-1-2-1-2-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

					-- Goal`3-1-4-1-2-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
					:def csb126#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(c@Cipher2) .}

					:apply(csb126#3)

						-- Goal`3-1-4-1-2-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
						:def csb127#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(c@Cipher2) .}

						:apply(csb127#3)

							-- Goal`3-1-4-1-2-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb128#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

							:apply(csb128#3)

								-- Goal`3-1-4-1-2-2-1-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb129#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb129#3)

									-- Goal`3-1-4-1-2-2-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-4-1-2-2-1-1-2 Success by reduction
								:apply (rd)

							-- Goal`3-1-4-1-2-2-1-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb130#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

							:apply(csb130#3)

								-- Goal`3-1-4-1-2-2-1-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb131#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb131#3)

									-- Goal`3-1-4-1-2-2-1-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-4-1-2-2-1-2-2 Success by reduction
								:apply (rd)

						-- Goal`3-1-4-1-2-2-2  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
						:def csb132#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(c@Cipher2) .}

						:apply(csb132#3)

							-- Goal`3-1-4-1-2-2-2-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
							:def csb133#3 = :ctf [c@Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

							:apply(csb133#3)

								-- Goal`3-1-4-1-2-2-2-1-1  -  inv150(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher2)  - Success
								:def csb134#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb134#3)

									-- Goal`3-1-4-1-2-2-2-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-4-1-2-2-2-1-2 Success by reduction
								:apply (rd)

							-- Goal`3-1-4-1-2-2-2-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

			-- Goal`3-1-4-2 Success by implication and reduction.
			:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

			:apply (rd)


:sel(8)
	:apply(tc)

	-- Goal`8-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
	:def csb1#8 = :cvs [ur(S#Sys)  .]

	:apply(csb1#8)

		-- Goal`8-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
	:def csb2#8 = :cvs [nw(S#Sys)  .]

	:apply(csb2#8)

			-- Goal`8-1-1-1 Success by reduction
			:apply (rd)

			-- Goal`8-1-1-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
			:def csb3#8 = :ctf {eq nonce(C#EVS8-1-1.SubCipher1)  = nonce2(c@Cipher2) .}

			:apply(csb3#8)

				-- Goal`8-1-1-2-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
				:def csb4#8 = :ctf [P0#Prin  .]

				:apply(csb4#8)

					-- Goal`8-1-1-2-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
					:def csb5#8 = :ctf [c@Cipher2 \in cenc2(N0#EVS8-1-1.Network)  .]

					:apply(csb5#8)

						-- Goal`8-1-1-2-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
						:def csb6#8 = :ctf [key(C#EVS8-1-1.SubCipher1)  .]

						:apply(csb6#8)

							-- Goal`8-1-1-2-1-1-1-1 Success by reduction
							:apply (rd)

						-- Goal`8-1-1-2-1-1-2 Success by reduction
						:apply (rd)

				-- Goal`8-1-1-2-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
				:def csb7#8 = :ctf [P0#Prin  .]

				:apply(csb7#8)

					-- Goal`8-1-1-2-2-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
					:def csb8#8 = :ctf [c@Cipher2 \in cenc2(N0#EVS8-1-1.Network)  .]

					:apply(csb8#8)

						-- Goal`8-1-1-2-2-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
						:def csb9#8 = :ctf [nonce2(c@Cipher2)  .]

						:apply(csb9#8)

							-- Goal`8-1-1-2-2-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
							:def csb10#8 = :ctf {eq P#CS8-1-1-2-2-1-1.Prin  = P#Prin .}

							:apply(csb10#8)

								-- Goal`8-1-1-2-2-1-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
								:def csb11#8 = :ctf {eq R#CS8-1-1-2-2-1-1.Rand  = R#Rand .}

								:apply(csb11#8)

									-- Goal`8-1-1-2-2-1-1-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
									:def csb12#8 = :ctf [P0#CS8-1-1-2-2-1-1.Prin  .]

									:apply(csb12#8)

										-- Goal`8-1-1-2-2-1-1-1-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`8-1-1-2-2-1-1-1-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`8-1-1-2-2-1-1-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

						-- Goal`8-1-1-2-2-1-2 Success by reduction
						:apply (rd)

			-- Goal`8-1-1-3  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
			:def csb13#8 = :ctf {eq C#EVS8-1-1.SubCipher2  = c@Cipher2 .}

			:apply(csb13#8)

				-- Goal`8-1-1-3-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
				:def csb14#8 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

				:apply(csb14#8)

					-- Goal`8-1-1-3-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
					:def csb15#8 = :ctf [P0#Prin  .]

					:apply(csb15#8)

						-- Goal`8-1-1-3-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
						:def csb16#8 = :ctf [key(c@Cipher2)  .]

						:apply(csb16#8)

							-- Goal`8-1-1-3-1-1-1-1 Success by reduction
							:apply (rd)

					-- Goal`8-1-1-3-1-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
					:def csb17#8 = :ctf [P0#Prin  .]

					:apply(csb17#8)

						-- Goal`8-1-1-3-1-2-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
						:def csb18#8 = :ctf [key(c@Cipher2)  .]

						:apply(csb18#8)

							-- Goal`8-1-1-3-1-2-1-1 Success by reduction
							:apply (rd)

				-- Goal`8-1-1-3-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
				:def csb19#8 = :ctf {eq nonce1(C#EVS8-1-1.SubCipher2)  = nonce2(c@Cipher2) .}

				:apply(csb19#8)

					-- Goal`8-1-1-3-2-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
					:def csb20#8 = :ctf {eq nonce2(C#EVS8-1-1.SubCipher2)  = nonce2(c@Cipher2) .}

					:apply(csb20#8)

						-- Goal`8-1-1-3-2-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
						:def csb21#8 = :ctf [P0#Prin  .]

						:apply(csb21#8)

							-- Goal`8-1-1-3-2-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
							:def csb22#8 = :ctf [c@Cipher2 \in cenc2(N0#EVS8-1-1.Network)  .]

							:apply(csb22#8)

								-- Goal`8-1-1-3-2-1-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
								:def csb23#8 = :ctf [key(C#EVS8-1-1.SubCipher2)  .]

								:apply(csb23#8)

									-- Goal`8-1-1-3-2-1-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`8-1-1-3-2-1-1-1-2 Success by reduction
								:apply (rd)

						-- Goal`8-1-1-3-2-1-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
						:def csb24#8 = :ctf [P0#Prin  .]

						:apply(csb24#8)

							-- Goal`8-1-1-3-2-1-2-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
							:def csb25#8 = :ctf [c@Cipher2 \in cenc2(N0#EVS8-1-1.Network)  .]

							:apply(csb25#8)

								-- Goal`8-1-1-3-2-1-2-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
								:def csb26#8 = :ctf [key(C#EVS8-1-1.SubCipher2)  .]

								:apply(csb26#8)

									-- Goal`8-1-1-3-2-1-2-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`8-1-1-3-2-1-2-1-2 Success by reduction
								:apply (rd)

					-- Goal`8-1-1-3-2-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
					:def csb27#8 = :ctf {eq nonce2(C#EVS8-1-1.SubCipher2)  = nonce2(c@Cipher2) .}

					:apply(csb27#8)

						-- Goal`8-1-1-3-2-2-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
						:def csb28#8 = :ctf [P0#Prin  .]

						:apply(csb28#8)

							-- Goal`8-1-1-3-2-2-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
							:def csb29#8 = :ctf [c@Cipher2 \in cenc2(N0#EVS8-1-1.Network)  .]

							:apply(csb29#8)

								-- Goal`8-1-1-3-2-2-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
								:def csb30#8 = :ctf [key(C#EVS8-1-1.SubCipher2)  .]

								:apply(csb30#8)

									-- Goal`8-1-1-3-2-2-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`8-1-1-3-2-2-1-1-2 Success by reduction
								:apply (rd)

						-- Goal`8-1-1-3-2-2-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
						:def csb31#8 = :ctf [P0#Prin  .]

						:apply(csb31#8)

							-- Goal`8-1-1-3-2-2-2-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
							:def csb32#8 = :ctf [c@Cipher2 \in cenc2(N0#EVS8-1-1.Network)  .]

							:apply(csb32#8)

								-- Goal`8-1-1-3-2-2-2-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
								:def csb33#8 = :ctf [nonce2(c@Cipher2)  .]

								:apply(csb33#8)

									-- Goal`8-1-1-3-2-2-2-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
									:def csb34#8 = :ctf {eq P#CS8-1-1-3-2-2-2-1-1.Prin  = P#Prin .}

									:apply(csb34#8)

										-- Goal`8-1-1-3-2-2-2-1-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
										:def csb35#8 = :ctf {eq R#CS8-1-1-3-2-2-2-1-1.Rand  = R#Rand .}

										:apply(csb35#8)

											-- Goal`8-1-1-3-2-2-2-1-1-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
											:def csb36#8 = :ctf [P0#CS8-1-1-3-2-2-2-1-1.Prin  .]

											:apply(csb36#8)

												-- Goal`8-1-1-3-2-2-2-1-1-1-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`8-1-1-3-2-2-2-1-1-1-1-2 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

										-- Goal`8-1-1-3-2-2-2-1-1-1-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

								-- Goal`8-1-1-3-2-2-2-1-2 Success by reduction
								:apply (rd)

			-- Goal`8-1-1-4  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
			:def csb37#8 = :ctf {eq nonce(C#EVS8-1-1.SubCipher3)  = nonce2(c@Cipher2) .}

			:apply(csb37#8)

				-- Goal`8-1-1-4-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
				:def csb38#8 = :ctf [P0#Prin  .]

				:apply(csb38#8)

					-- Goal`8-1-1-4-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
					:def csb39#8 = :ctf [c@Cipher2 \in cenc2(N0#EVS8-1-1.Network)  .]

					:apply(csb39#8)

						-- Goal`8-1-1-4-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
						:def csb40#8 = :ctf [key(C#EVS8-1-1.SubCipher3)  .]

						:apply(csb40#8)

							-- Goal`8-1-1-4-1-1-1-1 Success by reduction
							:apply (rd)

						-- Goal`8-1-1-4-1-1-2 Success by reduction
						:apply (rd)

				-- Goal`8-1-1-4-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
				:def csb41#8 = :ctf [P0#Prin  .]

				:apply(csb41#8)

					-- Goal`8-1-1-4-2-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
					:def csb42#8 = :ctf [c@Cipher2 \in cenc2(N0#EVS8-1-1.Network)  .]

					:apply(csb42#8)

						-- Goal`8-1-1-4-2-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
						:def csb43#8 = :ctf [nonce2(c@Cipher2)  .]

						:apply(csb43#8)

							-- Goal`8-1-1-4-2-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
							:def csb44#8 = :ctf {eq P#CS8-1-1-4-2-1-1.Prin  = P#Prin .}

							:apply(csb44#8)

								-- Goal`8-1-1-4-2-1-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
								:def csb45#8 = :ctf {eq R#CS8-1-1-4-2-1-1.Rand  = R#Rand .}

								:apply(csb45#8)

									-- Goal`8-1-1-4-2-1-1-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
									:def csb46#8 = :ctf [P0#CS8-1-1-4-2-1-1.Prin  .]

									:apply(csb46#8)

										-- Goal`8-1-1-4-2-1-1-1-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`8-1-1-4-2-1-1-1-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`8-1-1-4-2-1-1-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

						-- Goal`8-1-1-4-2-1-2 Success by reduction
						:apply (rd)

		-- Goal`8-1-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
		:def csb47#8 = :ctf {eq EVS8-1.SubRand  = R#Rand .}

		:apply(csb47#8)

			-- Goal`8-1-2-1 Success by implication and reduction.
			:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

			:apply (rd)

			-- Goal`8-1-2-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
			:def csb48#8 = :ctf [R#Rand \in U0#EVS8-1.URand  .]

			:apply(csb48#8)

				-- Goal`8-1-2-2-1 Success by implication and reduction.
				:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

				:apply (rd)

				-- Goal`8-1-2-2-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
	:def csb49#8 = :cvs [nw(S#Sys)  .]

	:apply(csb49#8)

					-- Goal`8-1-2-2-2-1 Success by reduction
					:apply (rd)

					-- Goal`8-1-2-2-2-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
					:def csb50#8 = :ctf {eq nonce(C#EVS8-1-2-2-2.SubCipher1)  = nonce2(c@Cipher2) .}

					:apply(csb50#8)

						-- Goal`8-1-2-2-2-2-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
						:def csb51#8 = :ctf [P0#Prin  .]

						:apply(csb51#8)

							-- Goal`8-1-2-2-2-2-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
							:def csb52#8 = :ctf [c@Cipher2 \in cenc2(N0#EVS8-1-2-2-2.Network)  .]

							:apply(csb52#8)

								-- Goal`8-1-2-2-2-2-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
								:def csb53#8 = :ctf [key(C#EVS8-1-2-2-2.SubCipher1)  .]

								:apply(csb53#8)

									-- Goal`8-1-2-2-2-2-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`8-1-2-2-2-2-1-1-2 Success by reduction
								:apply (rd)

						-- Goal`8-1-2-2-2-2-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
						:def csb54#8 = :ctf [P0#Prin  .]

						:apply(csb54#8)

							-- Goal`8-1-2-2-2-2-2-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
							:def csb55#8 = :ctf [c@Cipher2 \in cenc2(N0#EVS8-1-2-2-2.Network)  .]

							:apply(csb55#8)

								-- Goal`8-1-2-2-2-2-2-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
								:def csb56#8 = :ctf [nonce2(c@Cipher2)  .]

								:apply(csb56#8)

									-- Goal`8-1-2-2-2-2-2-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
									:def csb57#8 = :ctf {eq P#CS8-1-2-2-2-2-2-1-1.Prin  = P#Prin .}

									:apply(csb57#8)

										-- Goal`8-1-2-2-2-2-2-1-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
										:def csb58#8 = :ctf {eq R#CS8-1-2-2-2-2-2-1-1.Rand  = R#Rand .}

										:apply(csb58#8)

											-- Goal`8-1-2-2-2-2-2-1-1-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
											:def csb59#8 = :ctf [P0#CS8-1-2-2-2-2-2-1-1.Prin  .]

											:apply(csb59#8)

												-- Goal`8-1-2-2-2-2-2-1-1-1-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`8-1-2-2-2-2-2-1-1-1-1-2 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

										-- Goal`8-1-2-2-2-2-2-1-1-1-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

								-- Goal`8-1-2-2-2-2-2-1-2 Success by reduction
								:apply (rd)

					-- Goal`8-1-2-2-2-3  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
					:def csb60#8 = :ctf {eq C#EVS8-1-2-2-2.SubCipher2  = c@Cipher2 .}

					:apply(csb60#8)

						-- Goal`8-1-2-2-2-3-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
						:def csb61#8 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

						:apply(csb61#8)

							-- Goal`8-1-2-2-2-3-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
							:def csb62#8 = :ctf [P0#Prin  .]

							:apply(csb62#8)

								-- Goal`8-1-2-2-2-3-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
								:def csb63#8 = :ctf [key(c@Cipher2)  .]

								:apply(csb63#8)

									-- Goal`8-1-2-2-2-3-1-1-1-1 Success by reduction
									:apply (rd)

							-- Goal`8-1-2-2-2-3-1-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
							:def csb64#8 = :ctf [P0#Prin  .]

							:apply(csb64#8)

								-- Goal`8-1-2-2-2-3-1-2-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
								:def csb65#8 = :ctf [key(c@Cipher2)  .]

								:apply(csb65#8)

									-- Goal`8-1-2-2-2-3-1-2-1-1 Success by reduction
									:apply (rd)

						-- Goal`8-1-2-2-2-3-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
						:def csb66#8 = :ctf {eq nonce1(C#EVS8-1-2-2-2.SubCipher2)  = nonce2(c@Cipher2) .}

						:apply(csb66#8)

							-- Goal`8-1-2-2-2-3-2-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
							:def csb67#8 = :ctf {eq nonce2(C#EVS8-1-2-2-2.SubCipher2)  = nonce2(c@Cipher2) .}

							:apply(csb67#8)

								-- Goal`8-1-2-2-2-3-2-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
								:def csb68#8 = :ctf [P0#Prin  .]

								:apply(csb68#8)

									-- Goal`8-1-2-2-2-3-2-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
									:def csb69#8 = :ctf [c@Cipher2 \in cenc2(N0#EVS8-1-2-2-2.Network)  .]

									:apply(csb69#8)

										-- Goal`8-1-2-2-2-3-2-1-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
										:def csb70#8 = :ctf [key(C#EVS8-1-2-2-2.SubCipher2)  .]

										:apply(csb70#8)

											-- Goal`8-1-2-2-2-3-2-1-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`8-1-2-2-2-3-2-1-1-1-2 Success by reduction
										:apply (rd)

								-- Goal`8-1-2-2-2-3-2-1-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
								:def csb71#8 = :ctf [P0#Prin  .]

								:apply(csb71#8)

									-- Goal`8-1-2-2-2-3-2-1-2-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
									:def csb72#8 = :ctf [c@Cipher2 \in cenc2(N0#EVS8-1-2-2-2.Network)  .]

									:apply(csb72#8)

										-- Goal`8-1-2-2-2-3-2-1-2-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
										:def csb73#8 = :ctf [key(C#EVS8-1-2-2-2.SubCipher2)  .]

										:apply(csb73#8)

											-- Goal`8-1-2-2-2-3-2-1-2-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`8-1-2-2-2-3-2-1-2-1-2 Success by reduction
										:apply (rd)

							-- Goal`8-1-2-2-2-3-2-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
							:def csb74#8 = :ctf {eq nonce2(C#EVS8-1-2-2-2.SubCipher2)  = nonce2(c@Cipher2) .}

							:apply(csb74#8)

								-- Goal`8-1-2-2-2-3-2-2-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
								:def csb75#8 = :ctf [P0#Prin  .]

								:apply(csb75#8)

									-- Goal`8-1-2-2-2-3-2-2-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
									:def csb76#8 = :ctf [c@Cipher2 \in cenc2(N0#EVS8-1-2-2-2.Network)  .]

									:apply(csb76#8)

										-- Goal`8-1-2-2-2-3-2-2-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
										:def csb77#8 = :ctf [key(C#EVS8-1-2-2-2.SubCipher2)  .]

										:apply(csb77#8)

											-- Goal`8-1-2-2-2-3-2-2-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`8-1-2-2-2-3-2-2-1-1-2 Success by reduction
										:apply (rd)

								-- Goal`8-1-2-2-2-3-2-2-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
								:def csb78#8 = :ctf [P0#Prin  .]

								:apply(csb78#8)

									-- Goal`8-1-2-2-2-3-2-2-2-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
									:def csb79#8 = :ctf [c@Cipher2 \in cenc2(N0#EVS8-1-2-2-2.Network)  .]

									:apply(csb79#8)

										-- Goal`8-1-2-2-2-3-2-2-2-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
										:def csb80#8 = :ctf [nonce2(c@Cipher2)  .]

										:apply(csb80#8)

											-- Goal`8-1-2-2-2-3-2-2-2-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
											:def csb81#8 = :ctf {eq P#CS8-1-2-2-2-3-2-2-2-1-1.Prin  = P#Prin .}

											:apply(csb81#8)

												-- Goal`8-1-2-2-2-3-2-2-2-1-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
												:def csb82#8 = :ctf {eq R#CS8-1-2-2-2-3-2-2-2-1-1.Rand  = R#Rand .}

												:apply(csb82#8)

													-- Goal`8-1-2-2-2-3-2-2-2-1-1-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
													:def csb83#8 = :ctf [P0#CS8-1-2-2-2-3-2-2-2-1-1.Prin  .]

													:apply(csb83#8)

														-- Goal`8-1-2-2-2-3-2-2-2-1-1-1-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`8-1-2-2-2-3-2-2-2-1-1-1-1-2 Success by implication and reduction.
													:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

													:apply (rd)

												-- Goal`8-1-2-2-2-3-2-2-2-1-1-1-2 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

										-- Goal`8-1-2-2-2-3-2-2-2-1-2 Success by reduction
										:apply (rd)

					-- Goal`8-1-2-2-2-4  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
					:def csb84#8 = :ctf {eq nonce(C#EVS8-1-2-2-2.SubCipher3)  = nonce2(c@Cipher2) .}

					:apply(csb84#8)

						-- Goal`8-1-2-2-2-4-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
						:def csb85#8 = :ctf [P0#Prin  .]

						:apply(csb85#8)

							-- Goal`8-1-2-2-2-4-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
							:def csb86#8 = :ctf [c@Cipher2 \in cenc2(N0#EVS8-1-2-2-2.Network)  .]

							:apply(csb86#8)

								-- Goal`8-1-2-2-2-4-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
								:def csb87#8 = :ctf [key(C#EVS8-1-2-2-2.SubCipher3)  .]

								:apply(csb87#8)

									-- Goal`8-1-2-2-2-4-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`8-1-2-2-2-4-1-1-2 Success by reduction
								:apply (rd)

						-- Goal`8-1-2-2-2-4-2  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
						:def csb88#8 = :ctf [P0#Prin  .]

						:apply(csb88#8)

							-- Goal`8-1-2-2-2-4-2-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
							:def csb89#8 = :ctf [c@Cipher2 \in cenc2(N0#EVS8-1-2-2-2.Network)  .]

							:apply(csb89#8)

								-- Goal`8-1-2-2-2-4-2-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
								:def csb90#8 = :ctf [nonce2(c@Cipher2)  .]

								:apply(csb90#8)

									-- Goal`8-1-2-2-2-4-2-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
									:def csb91#8 = :ctf {eq P#CS8-1-2-2-2-4-2-1-1.Prin  = P#Prin .}

									:apply(csb91#8)

										-- Goal`8-1-2-2-2-4-2-1-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
										:def csb92#8 = :ctf {eq R#CS8-1-2-2-2-4-2-1-1.Rand  = R#Rand .}

										:apply(csb92#8)

											-- Goal`8-1-2-2-2-4-2-1-1-1-1-1  -  inv150(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher2)  - Success
											:def csb93#8 = :ctf [P0#CS8-1-2-2-2-4-2-1-1.Prin  .]

											:apply(csb93#8)

												-- Goal`8-1-2-2-2-4-2-1-1-1-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`8-1-2-2-2-4-2-1-1-1-1-2 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

										-- Goal`8-1-2-2-2-4-2-1-1-1-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

								-- Goal`8-1-2-2-2-4-2-1-2 Success by reduction
								:apply (rd)


:sel(4)
	:apply(tc)

	-- Goal`4-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
	:def csb1#4 = :cvs [nw(S#Sys)  .]

	:apply(csb1#4)

		-- Goal`4-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
		:def csb2#4 = :ctf [creator(N#Nonce)  .]

		:apply(csb2#4)

			-- Goal`4-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
			:def csb3#4 = :ctf [creator(N0#Nonce)  .]

			:apply(csb3#4)

				-- Goal`4-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
				:def csb4#4 = :ctf {eq enc2(P0#Prin, N#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

				:apply(csb4#4)

					-- Goal`4-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb5#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

					:apply(csb5#4)

						-- Goal`4-1-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb6#4 = :ctf [key(c@Cipher2)  .]

						:apply(csb6#4)

							-- Goal`4-1-1-1-1-1-1-1 Success by reduction
							:apply (rd)

						-- Goal`4-1-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb7#4 = :ctf [key(c@Cipher2)  .]

						:apply(csb7#4)

							-- Goal`4-1-1-1-1-1-2-1 Success by reduction
							:apply (rd)

					-- Goal`4-1-1-1-1-2 Success by reduction
					:apply (rd)

		-- Goal`4-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
		:def csb8#4 = :ctf {eq nonce(C#EVS4-1.SubCipher1)  = N#Nonce .}

		:apply(csb8#4)

			-- Goal`4-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
			:def csb9#4 = :ctf {eq N#Nonce  = N0#Nonce .}

			:apply(csb9#4)

				-- Goal`4-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
				:def csb10#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

				:apply(csb10#4)

					-- Goal`4-1-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb11#4 = :ctf {eq enc2(P0#Prin, N0#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

					:apply(csb11#4)

						-- Goal`4-1-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb12#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

						:apply(csb12#4)

							-- Goal`4-1-2-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb13#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

							:apply(csb13#4)

								-- Goal`4-1-2-1-1-1-1-1-1 Success by reduction
								:apply (rd)

								-- Goal`4-1-2-1-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb14#4 = :ctf [key(c@Cipher2)  .]

								:apply(csb14#4)

									-- Goal`4-1-2-1-1-1-1-1-2-1 Success by reduction
									:apply (rd)

							-- Goal`4-1-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb15#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

							:apply(csb15#4)

								-- Goal`4-1-2-1-1-1-1-2-1 Success by reduction
								:apply (rd)

								-- Goal`4-1-2-1-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb16#4 = :ctf [key(c@Cipher2)  .]

								:apply(csb16#4)

									-- Goal`4-1-2-1-1-1-1-2-2-1 Success by reduction
									:apply (rd)

						-- Goal`4-1-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb17#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

						:apply(csb17#4)

							-- Goal`4-1-2-1-1-1-2-1 Success by reduction
							:apply (rd)

							-- Goal`4-1-2-1-1-1-2-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

				-- Goal`4-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
				:def csb18#4 = :ctf [N0#Nonce \in cnonce(N0#EVS4-1.Network)  .]

				:apply(csb18#4)

					-- Goal`4-1-2-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb19#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

					:apply(csb19#4)

						-- Goal`4-1-2-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb20#4 = :ctf {eq enc2(P0#Prin, N#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

						:apply(csb20#4)

							-- Goal`4-1-2-1-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb21#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

							:apply(csb21#4)

								-- Goal`4-1-2-1-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb22#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb22#4)

									-- Goal`4-1-2-1-2-1-1-1-1-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-2-1-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb23#4 = :ctf [key(c@Cipher2)  .]

									:apply(csb23#4)

										-- Goal`4-1-2-1-2-1-1-1-1-2-1 Success by reduction
										:apply (rd)

								-- Goal`4-1-2-1-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb24#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb24#4)

									-- Goal`4-1-2-1-2-1-1-1-2-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-2-1-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb25#4 = :ctf [key(c@Cipher2)  .]

									:apply(csb25#4)

										-- Goal`4-1-2-1-2-1-1-1-2-2-1 Success by reduction
										:apply (rd)

							-- Goal`4-1-2-1-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb26#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

							:apply(csb26#4)

								-- Goal`4-1-2-1-2-1-1-2-1 Success by reduction
								:apply (rd)

								-- Goal`4-1-2-1-2-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb27#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

								:apply(csb27#4)

									-- Goal`4-1-2-1-2-1-1-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb28#4 = :ctf [P0#Prin  .]

									:apply(csb28#4)

										-- Goal`4-1-2-1-2-1-1-2-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`4-1-2-1-2-1-1-2-2-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

					-- Goal`4-1-2-1-2-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

			-- Goal`4-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
			:def csb29#4 = :ctf {eq nonce(C#EVS4-1.SubCipher1)  = N0#Nonce .}

			:apply(csb29#4)

				-- Goal`4-1-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
				:def csb30#4 = :ctf {eq N#Nonce  = N0#Nonce .}

				:apply(csb30#4)

					-- Goal`4-1-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb31#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

					:apply(csb31#4)

						-- Goal`4-1-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb32#4 = :ctf {eq enc2(P0#Prin, N0#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

						:apply(csb32#4)

							-- Goal`4-1-2-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb33#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

							:apply(csb33#4)

								-- Goal`4-1-2-2-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb34#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

								:apply(csb34#4)

									-- Goal`4-1-2-2-1-1-1-1-1-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-2-2-1-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb35#4 = :ctf [key(c@Cipher2)  .]

									:apply(csb35#4)

										-- Goal`4-1-2-2-1-1-1-1-1-2-1 Success by reduction
										:apply (rd)

								-- Goal`4-1-2-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb36#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

								:apply(csb36#4)

									-- Goal`4-1-2-2-1-1-1-1-2-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-2-2-1-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb37#4 = :ctf [key(c@Cipher2)  .]

									:apply(csb37#4)

										-- Goal`4-1-2-2-1-1-1-1-2-2-1 Success by reduction
										:apply (rd)

							-- Goal`4-1-2-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb38#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

							:apply(csb38#4)

								-- Goal`4-1-2-2-1-1-1-2-1 Success by reduction
								:apply (rd)

								-- Goal`4-1-2-2-1-1-1-2-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

					-- Goal`4-1-2-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb39#4 = :ctf [N#Nonce \in cnonce(N0#EVS4-1.Network)  .]

					:apply(csb39#4)

						-- Goal`4-1-2-2-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb40#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

						:apply(csb40#4)

							-- Goal`4-1-2-2-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb41#4 = :ctf {eq enc2(P0#Prin, N#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

							:apply(csb41#4)

								-- Goal`4-1-2-2-1-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb42#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb42#4)

									-- Goal`4-1-2-2-1-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb43#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb43#4)

										-- Goal`4-1-2-2-1-2-1-1-1-1-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-2-2-1-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb44#4 = :ctf [key(c@Cipher2)  .]

										:apply(csb44#4)

											-- Goal`4-1-2-2-1-2-1-1-1-1-2-1 Success by reduction
											:apply (rd)

									-- Goal`4-1-2-2-1-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb45#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb45#4)

										-- Goal`4-1-2-2-1-2-1-1-1-2-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-2-2-1-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb46#4 = :ctf [key(c@Cipher2)  .]

										:apply(csb46#4)

											-- Goal`4-1-2-2-1-2-1-1-1-2-2-1 Success by reduction
											:apply (rd)

								-- Goal`4-1-2-2-1-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb47#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb47#4)

									-- Goal`4-1-2-2-1-2-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb48#4 = :ctf [P0#Prin  .]

									:apply(csb48#4)

										-- Goal`4-1-2-2-1-2-1-1-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`4-1-2-2-1-2-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb49#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb49#4)

										-- Goal`4-1-2-2-1-2-1-1-2-2-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-2-2-1-2-1-1-2-2-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

						-- Goal`4-1-2-2-1-2-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

				-- Goal`4-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
				:def csb50#4 = :ctf [N#Nonce \in cnonce(N0#EVS4-1.Network)  .]

				:apply(csb50#4)

					-- Goal`4-1-2-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb51#4 = :ctf [N0#Nonce \in cnonce(N0#EVS4-1.Network)  .]

					:apply(csb51#4)

						-- Goal`4-1-2-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb52#4 = :ctf {eq enc2(P0#Prin, N#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

						:apply(csb52#4)

							-- Goal`4-1-2-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb53#4 = :ctf {eq nonce(C#EVS4-1.SubCipher1)  = nonce2(c@Cipher2) .}

							:apply(csb53#4)

								-- Goal`4-1-2-2-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb54#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb54#4)

									-- Goal`4-1-2-2-2-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb55#4 = :ctf {eq N#Nonce  = N0#Nonce .}

									:apply(csb55#4)

										-- Goal`4-1-2-2-2-1-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb56#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

										:apply(csb56#4)

											-- Goal`4-1-2-2-2-1-1-1-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`4-1-2-2-2-1-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb57#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

										:apply(csb57#4)

											-- Goal`4-1-2-2-2-1-1-1-1-1-2-1 Success by reduction
											:apply (rd)

									-- Goal`4-1-2-2-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb58#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb58#4)

										-- Goal`4-1-2-2-2-1-1-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb59#4 = :ctf {eq N#Nonce  = N0#Nonce .}

										:apply(csb59#4)

											-- Goal`4-1-2-2-2-1-1-1-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb60#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

											:apply(csb60#4)

												-- Goal`4-1-2-2-2-1-1-1-1-2-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`4-1-2-2-2-1-1-1-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb61#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

											:apply(csb61#4)

												-- Goal`4-1-2-2-2-1-1-1-1-2-1-2-1 Success by reduction
												:apply (rd)

										-- Goal`4-1-2-2-2-1-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb62#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

										:apply(csb62#4)

											-- Goal`4-1-2-2-2-1-1-1-1-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb63#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

											:apply(csb63#4)

												-- Goal`4-1-2-2-2-1-1-1-1-2-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`4-1-2-2-2-1-1-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb64#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

											:apply(csb64#4)

												-- Goal`4-1-2-2-2-1-1-1-1-2-2-2-1 Success by reduction
												:apply (rd)

								-- Goal`4-1-2-2-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb65#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb65#4)

									-- Goal`4-1-2-2-2-1-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb66#4 = :ctf [key(c@Cipher2)  .]

									:apply(csb66#4)

										-- Goal`4-1-2-2-2-1-1-1-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`4-1-2-2-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb67#4 = :ctf [key(c@Cipher2)  .]

									:apply(csb67#4)

										-- Goal`4-1-2-2-2-1-1-1-2-2-1 Success by reduction
										:apply (rd)

							-- Goal`4-1-2-2-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb68#4 = :ctf {eq nonce(C#EVS4-1.SubCipher1)  = nonce2(c@Cipher2) .}

							:apply(csb68#4)

								-- Goal`4-1-2-2-2-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb69#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb69#4)

									-- Goal`4-1-2-2-2-1-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb70#4 = :ctf {eq N#Nonce  = N0#Nonce .}

									:apply(csb70#4)

										-- Goal`4-1-2-2-2-1-1-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb71#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

										:apply(csb71#4)

											-- Goal`4-1-2-2-2-1-1-2-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`4-1-2-2-2-1-1-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb72#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

										:apply(csb72#4)

											-- Goal`4-1-2-2-2-1-1-2-1-1-2-1 Success by reduction
											:apply (rd)

									-- Goal`4-1-2-2-2-1-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb73#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb73#4)

										-- Goal`4-1-2-2-2-1-1-2-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb74#4 = :ctf {eq N#Nonce  = N0#Nonce .}

										:apply(csb74#4)

											-- Goal`4-1-2-2-2-1-1-2-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb75#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

											:apply(csb75#4)

												-- Goal`4-1-2-2-2-1-1-2-1-2-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`4-1-2-2-2-1-1-2-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb76#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

											:apply(csb76#4)

												-- Goal`4-1-2-2-2-1-1-2-1-2-1-2-1 Success by reduction
												:apply (rd)

										-- Goal`4-1-2-2-2-1-1-2-1-2-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

								-- Goal`4-1-2-2-2-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb77#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb77#4)

									-- Goal`4-1-2-2-2-1-1-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb78#4 = :ctf {eq N#Nonce  = N0#Nonce .}

									:apply(csb78#4)

										-- Goal`4-1-2-2-2-1-1-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb79#4 = :ctf {eq enc2(P0#Prin, N0#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

										:apply(csb79#4)

											-- Goal`4-1-2-2-2-1-1-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb80#4 = :ctf {eq nonce1(c@Cipher2)  = N0#Nonce .}

											:apply(csb80#4)

												-- Goal`4-1-2-2-2-1-1-2-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb81#4 = :ctf [key(c@Cipher2)  .]

												:apply(csb81#4)

													-- Goal`4-1-2-2-2-1-1-2-2-1-1-1-1-1 Success by reduction
													:apply (rd)

												-- Goal`4-1-2-2-2-1-1-2-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb82#4 = :ctf [key(c@Cipher2)  .]

												:apply(csb82#4)

													-- Goal`4-1-2-2-2-1-1-2-2-1-1-1-2-1 Success by reduction
													:apply (rd)

											-- Goal`4-1-2-2-2-1-1-2-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb83#4 = :ctf [P0#Prin  .]

											:apply(csb83#4)

												-- Goal`4-1-2-2-2-1-1-2-2-1-1-2-1 Success by reduction
												:apply (rd)

										-- Goal`4-1-2-2-2-1-1-2-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb84#4 = :ctf [P0#Prin  .]

										:apply(csb84#4)

											-- Goal`4-1-2-2-2-1-1-2-2-1-2-1 Success by reduction
											:apply (rd)

									-- Goal`4-1-2-2-2-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb85#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb85#4)

										-- Goal`4-1-2-2-2-1-1-2-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb86#4 = :ctf {eq N#Nonce  = N0#Nonce .}

										:apply(csb86#4)

											-- Goal`4-1-2-2-2-1-1-2-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb87#4 = :ctf {eq enc2(P0#Prin, N0#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

											:apply(csb87#4)

												-- Goal`4-1-2-2-2-1-1-2-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb88#4 = :ctf {eq nonce1(c@Cipher2)  = N0#Nonce .}

												:apply(csb88#4)

													-- Goal`4-1-2-2-2-1-1-2-2-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb89#4 = :ctf [key(c@Cipher2)  .]

													:apply(csb89#4)

														-- Goal`4-1-2-2-2-1-1-2-2-2-1-1-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`4-1-2-2-2-1-1-2-2-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb90#4 = :ctf [key(c@Cipher2)  .]

													:apply(csb90#4)

														-- Goal`4-1-2-2-2-1-1-2-2-2-1-1-1-2-1 Success by reduction
														:apply (rd)

												-- Goal`4-1-2-2-2-1-1-2-2-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb91#4 = :ctf [P0#Prin  .]

												:apply(csb91#4)

													-- Goal`4-1-2-2-2-1-1-2-2-2-1-1-2-1 Success by reduction
													:apply (rd)

											-- Goal`4-1-2-2-2-1-1-2-2-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb92#4 = :ctf [P0#Prin  .]

											:apply(csb92#4)

												-- Goal`4-1-2-2-2-1-1-2-2-2-1-2-1 Success by reduction
												:apply (rd)

										-- Goal`4-1-2-2-2-1-1-2-2-2-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

						-- Goal`4-1-2-2-2-1-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

					-- Goal`4-1-2-2-2-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

		-- Goal`4-1-3  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
		:def csb93#4 = :ctf {eq nonce1(C#EVS4-1.SubCipher2)  = N#Nonce .}

		:apply(csb93#4)

			-- Goal`4-1-3-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
			:def csb94#4 = :ctf {eq N#Nonce  = N0#Nonce .}

			:apply(csb94#4)

				-- Goal`4-1-3-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
				:def csb95#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = N0#Nonce .}

				:apply(csb95#4)

					-- Goal`4-1-3-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb96#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

					:apply(csb96#4)

						-- Goal`4-1-3-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb97#4 = :ctf {eq enc2(P0#Prin, N0#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

						:apply(csb97#4)

							-- Goal`4-1-3-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb98#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

							:apply(csb98#4)

								-- Goal`4-1-3-1-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb99#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

								:apply(csb99#4)

									-- Goal`4-1-3-1-1-1-1-1-1-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-3-1-1-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb100#4 = :ctf [key(c@Cipher2)  .]

									:apply(csb100#4)

										-- Goal`4-1-3-1-1-1-1-1-1-2-1 Success by reduction
										:apply (rd)

								-- Goal`4-1-3-1-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb101#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

								:apply(csb101#4)

									-- Goal`4-1-3-1-1-1-1-1-2-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-3-1-1-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb102#4 = :ctf [key(c@Cipher2)  .]

									:apply(csb102#4)

										-- Goal`4-1-3-1-1-1-1-1-2-2-1 Success by reduction
										:apply (rd)

							-- Goal`4-1-3-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb103#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

							:apply(csb103#4)

								-- Goal`4-1-3-1-1-1-1-2-1 Success by reduction
								:apply (rd)

								-- Goal`4-1-3-1-1-1-1-2-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

					-- Goal`4-1-3-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb104#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

					:apply(csb104#4)

						-- Goal`4-1-3-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb105#4 = :ctf {eq enc2(P0#Prin, N0#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

						:apply(csb105#4)

							-- Goal`4-1-3-1-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb106#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

							:apply(csb106#4)

								-- Goal`4-1-3-1-1-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb107#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

								:apply(csb107#4)

									-- Goal`4-1-3-1-1-2-1-1-1-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-3-1-1-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb108#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb108#4)

										-- Goal`4-1-3-1-1-2-1-1-1-2-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-3-1-1-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb109#4 = :ctf [key(c@Cipher2)  .]

										:apply(csb109#4)

											-- Goal`4-1-3-1-1-2-1-1-1-2-2-1 Success by reduction
											:apply (rd)

								-- Goal`4-1-3-1-1-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb110#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

								:apply(csb110#4)

									-- Goal`4-1-3-1-1-2-1-1-2-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-3-1-1-2-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb111#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb111#4)

										-- Goal`4-1-3-1-1-2-1-1-2-2-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-3-1-1-2-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb112#4 = :ctf [key(c@Cipher2)  .]

										:apply(csb112#4)

											-- Goal`4-1-3-1-1-2-1-1-2-2-2-1 Success by reduction
											:apply (rd)

							-- Goal`4-1-3-1-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb113#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

							:apply(csb113#4)

								-- Goal`4-1-3-1-1-2-1-2-1 Success by reduction
								:apply (rd)

								-- Goal`4-1-3-1-1-2-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb114#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

								:apply(csb114#4)

									-- Goal`4-1-3-1-1-2-1-2-2-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-3-1-1-2-1-2-2-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

				-- Goal`4-1-3-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
				:def csb115#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = N#Nonce .}

				:apply(csb115#4)

					-- Goal`4-1-3-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb116#4 = :ctf [N0#Nonce \in cnonce(N0#EVS4-1.Network)  .]

					:apply(csb116#4)

						-- Goal`4-1-3-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb117#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

						:apply(csb117#4)

							-- Goal`4-1-3-1-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb118#4 = :ctf {eq enc2(P0#Prin, N#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

							:apply(csb118#4)

								-- Goal`4-1-3-1-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb119#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb119#4)

									-- Goal`4-1-3-1-2-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb120#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

									:apply(csb120#4)

										-- Goal`4-1-3-1-2-1-1-1-1-1-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-3-1-2-1-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb121#4 = :ctf [key(c@Cipher2)  .]

										:apply(csb121#4)

											-- Goal`4-1-3-1-2-1-1-1-1-1-2-1 Success by reduction
											:apply (rd)

									-- Goal`4-1-3-1-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb122#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

									:apply(csb122#4)

										-- Goal`4-1-3-1-2-1-1-1-1-2-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-3-1-2-1-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb123#4 = :ctf [key(c@Cipher2)  .]

										:apply(csb123#4)

											-- Goal`4-1-3-1-2-1-1-1-1-2-2-1 Success by reduction
											:apply (rd)

								-- Goal`4-1-3-1-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb124#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb124#4)

									-- Goal`4-1-3-1-2-1-1-1-2-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-3-1-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb125#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb125#4)

										-- Goal`4-1-3-1-2-1-1-1-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb126#4 = :ctf [P0#Prin  .]

										:apply(csb126#4)

											-- Goal`4-1-3-1-2-1-1-1-2-2-1-1 Success by reduction
											:apply (rd)

										-- Goal`4-1-3-1-2-1-1-1-2-2-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

						-- Goal`4-1-3-1-2-1-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

					-- Goal`4-1-3-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb127#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = N0#Nonce .}

					:apply(csb127#4)

						-- Goal`4-1-3-1-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb128#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

						:apply(csb128#4)

							-- Goal`4-1-3-1-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb129#4 = :ctf {eq enc2(P0#Prin, N#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

							:apply(csb129#4)

								-- Goal`4-1-3-1-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb130#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb130#4)

									-- Goal`4-1-3-1-2-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb131#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

									:apply(csb131#4)

										-- Goal`4-1-3-1-2-2-1-1-1-1-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-3-1-2-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb132#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

										:apply(csb132#4)

											-- Goal`4-1-3-1-2-2-1-1-1-1-2-1 Success by reduction
											:apply (rd)

											-- Goal`4-1-3-1-2-2-1-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb133#4 = :ctf [key(c@Cipher2)  .]

											:apply(csb133#4)

												-- Goal`4-1-3-1-2-2-1-1-1-1-2-2-1 Success by reduction
												:apply (rd)

									-- Goal`4-1-3-1-2-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb134#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

									:apply(csb134#4)

										-- Goal`4-1-3-1-2-2-1-1-1-2-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-3-1-2-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb135#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

										:apply(csb135#4)

											-- Goal`4-1-3-1-2-2-1-1-1-2-2-1 Success by reduction
											:apply (rd)

											-- Goal`4-1-3-1-2-2-1-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb136#4 = :ctf [key(c@Cipher2)  .]

											:apply(csb136#4)

												-- Goal`4-1-3-1-2-2-1-1-1-2-2-2-1 Success by reduction
												:apply (rd)

								-- Goal`4-1-3-1-2-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb137#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb137#4)

									-- Goal`4-1-3-1-2-2-1-1-2-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-3-1-2-2-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb138#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb138#4)

										-- Goal`4-1-3-1-2-2-1-1-2-2-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-3-1-2-2-1-1-2-2-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

						-- Goal`4-1-3-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb139#4 = :ctf [N0#Nonce \in cnonce(N0#EVS4-1.Network)  .]

						:apply(csb139#4)

							-- Goal`4-1-3-1-2-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb140#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

							:apply(csb140#4)

								-- Goal`4-1-3-1-2-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb141#4 = :ctf {eq enc2(P0#Prin, N#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

								:apply(csb141#4)

									-- Goal`4-1-3-1-2-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb142#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

									:apply(csb142#4)

										-- Goal`4-1-3-1-2-2-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb143#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

										:apply(csb143#4)

											-- Goal`4-1-3-1-2-2-2-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb144#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

											:apply(csb144#4)

												-- Goal`4-1-3-1-2-2-2-1-1-1-1-1-1 Success by reduction
												:apply (rd)

												-- Goal`4-1-3-1-2-2-2-1-1-1-1-1-2 Success by reduction
												:apply (rd)

											-- Goal`4-1-3-1-2-2-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb145#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

											:apply(csb145#4)

												-- Goal`4-1-3-1-2-2-2-1-1-1-1-2-1 Success by reduction
												:apply (rd)

												-- Goal`4-1-3-1-2-2-2-1-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb146#4 = :ctf [key(c@Cipher2)  .]

												:apply(csb146#4)

													-- Goal`4-1-3-1-2-2-2-1-1-1-1-2-2-1 Success by reduction
													:apply (rd)

										-- Goal`4-1-3-1-2-2-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb147#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

										:apply(csb147#4)

											-- Goal`4-1-3-1-2-2-2-1-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb148#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

											:apply(csb148#4)

												-- Goal`4-1-3-1-2-2-2-1-1-1-2-1-1 Success by reduction
												:apply (rd)

												-- Goal`4-1-3-1-2-2-2-1-1-1-2-1-2 Success by reduction
												:apply (rd)

											-- Goal`4-1-3-1-2-2-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb149#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

											:apply(csb149#4)

												-- Goal`4-1-3-1-2-2-2-1-1-1-2-2-1 Success by reduction
												:apply (rd)

												-- Goal`4-1-3-1-2-2-2-1-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb150#4 = :ctf [key(c@Cipher2)  .]

												:apply(csb150#4)

													-- Goal`4-1-3-1-2-2-2-1-1-1-2-2-2-1 Success by reduction
													:apply (rd)

									-- Goal`4-1-3-1-2-2-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb151#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

									:apply(csb151#4)

										-- Goal`4-1-3-1-2-2-2-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb152#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

										:apply(csb152#4)

											-- Goal`4-1-3-1-2-2-2-1-1-2-1-1 Success by reduction
											:apply (rd)

											-- Goal`4-1-3-1-2-2-2-1-1-2-1-2 Success by reduction
											:apply (rd)

										-- Goal`4-1-3-1-2-2-2-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb153#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

										:apply(csb153#4)

											-- Goal`4-1-3-1-2-2-2-1-1-2-2-1 Success by reduction
											:apply (rd)

											-- Goal`4-1-3-1-2-2-2-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb154#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

											:apply(csb154#4)

												-- Goal`4-1-3-1-2-2-2-1-1-2-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb155#4 = :ctf [P0#Prin  .]

												:apply(csb155#4)

													-- Goal`4-1-3-1-2-2-2-1-1-2-2-2-1-1 Success by reduction
													:apply (rd)

												-- Goal`4-1-3-1-2-2-2-1-1-2-2-2-2 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

							-- Goal`4-1-3-1-2-2-2-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

			-- Goal`4-1-3-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
			:def csb156#4 = :ctf {eq nonce1(C#EVS4-1.SubCipher2)  = N0#Nonce .}

			:apply(csb156#4)

				-- Goal`4-1-3-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
				:def csb157#4 = :ctf {eq N#Nonce  = N0#Nonce .}

				:apply(csb157#4)

					-- Goal`4-1-3-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb158#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = N0#Nonce .}

					:apply(csb158#4)

						-- Goal`4-1-3-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb159#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

						:apply(csb159#4)

							-- Goal`4-1-3-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb160#4 = :ctf {eq enc2(P0#Prin, N0#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

							:apply(csb160#4)

								-- Goal`4-1-3-2-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb161#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb161#4)

									-- Goal`4-1-3-2-1-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb162#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb162#4)

										-- Goal`4-1-3-2-1-1-1-1-1-1-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-3-2-1-1-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb163#4 = :ctf [key(c@Cipher2)  .]

										:apply(csb163#4)

											-- Goal`4-1-3-2-1-1-1-1-1-1-2-1 Success by reduction
											:apply (rd)

									-- Goal`4-1-3-2-1-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb164#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb164#4)

										-- Goal`4-1-3-2-1-1-1-1-1-2-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-3-2-1-1-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb165#4 = :ctf [key(c@Cipher2)  .]

										:apply(csb165#4)

											-- Goal`4-1-3-2-1-1-1-1-1-2-2-1 Success by reduction
											:apply (rd)

								-- Goal`4-1-3-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb166#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

								:apply(csb166#4)

									-- Goal`4-1-3-2-1-1-1-1-2-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-3-2-1-1-1-1-2-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

						-- Goal`4-1-3-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb167#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

						:apply(csb167#4)

							-- Goal`4-1-3-2-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb168#4 = :ctf {eq enc2(P0#Prin, N0#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

							:apply(csb168#4)

								-- Goal`4-1-3-2-1-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb169#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb169#4)

									-- Goal`4-1-3-2-1-1-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb170#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

									:apply(csb170#4)

										-- Goal`4-1-3-2-1-1-2-1-1-1-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-3-2-1-1-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb171#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

										:apply(csb171#4)

											-- Goal`4-1-3-2-1-1-2-1-1-1-2-1 Success by reduction
											:apply (rd)

											-- Goal`4-1-3-2-1-1-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb172#4 = :ctf [key(c@Cipher2)  .]

											:apply(csb172#4)

												-- Goal`4-1-3-2-1-1-2-1-1-1-2-2-1 Success by reduction
												:apply (rd)

									-- Goal`4-1-3-2-1-1-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb173#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

									:apply(csb173#4)

										-- Goal`4-1-3-2-1-1-2-1-1-2-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-3-2-1-1-2-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb174#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

										:apply(csb174#4)

											-- Goal`4-1-3-2-1-1-2-1-1-2-2-1 Success by reduction
											:apply (rd)

											-- Goal`4-1-3-2-1-1-2-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb175#4 = :ctf [key(c@Cipher2)  .]

											:apply(csb175#4)

												-- Goal`4-1-3-2-1-1-2-1-1-2-2-2-1 Success by reduction
												:apply (rd)

								-- Goal`4-1-3-2-1-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb176#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

								:apply(csb176#4)

									-- Goal`4-1-3-2-1-1-2-1-2-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-3-2-1-1-2-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb177#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb177#4)

										-- Goal`4-1-3-2-1-1-2-1-2-2-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-3-2-1-1-2-1-2-2-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

					-- Goal`4-1-3-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb178#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = N#Nonce .}

					:apply(csb178#4)

						-- Goal`4-1-3-2-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb179#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

						:apply(csb179#4)

							-- Goal`4-1-3-2-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb180#4 = :ctf {eq enc2(P0#Prin, N#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

							:apply(csb180#4)

								-- Goal`4-1-3-2-1-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb181#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb181#4)

									-- Goal`4-1-3-2-1-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb182#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

									:apply(csb182#4)

										-- Goal`4-1-3-2-1-2-1-1-1-1-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-3-2-1-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb183#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

										:apply(csb183#4)

											-- Goal`4-1-3-2-1-2-1-1-1-1-2-1 Success by reduction
											:apply (rd)

											-- Goal`4-1-3-2-1-2-1-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb184#4 = :ctf [key(c@Cipher2)  .]

											:apply(csb184#4)

												-- Goal`4-1-3-2-1-2-1-1-1-1-2-2-1 Success by reduction
												:apply (rd)

									-- Goal`4-1-3-2-1-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb185#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

									:apply(csb185#4)

										-- Goal`4-1-3-2-1-2-1-1-1-2-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-3-2-1-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb186#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

										:apply(csb186#4)

											-- Goal`4-1-3-2-1-2-1-1-1-2-2-1 Success by reduction
											:apply (rd)

											-- Goal`4-1-3-2-1-2-1-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb187#4 = :ctf [key(c@Cipher2)  .]

											:apply(csb187#4)

												-- Goal`4-1-3-2-1-2-1-1-1-2-2-2-1 Success by reduction
												:apply (rd)

								-- Goal`4-1-3-2-1-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb188#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb188#4)

									-- Goal`4-1-3-2-1-2-1-1-2-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-3-2-1-2-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb189#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb189#4)

										-- Goal`4-1-3-2-1-2-1-1-2-2-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-3-2-1-2-1-1-2-2-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

						-- Goal`4-1-3-2-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb190#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = N0#Nonce .}

						:apply(csb190#4)

							-- Goal`4-1-3-2-1-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb191#4 = :ctf [N#Nonce \in cnonce(N0#EVS4-1.Network)  .]

							:apply(csb191#4)

								-- Goal`4-1-3-2-1-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb192#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

								:apply(csb192#4)

									-- Goal`4-1-3-2-1-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb193#4 = :ctf {eq enc2(P0#Prin, N#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

									:apply(csb193#4)

										-- Goal`4-1-3-2-1-2-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb194#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

										:apply(csb194#4)

											-- Goal`4-1-3-2-1-2-2-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb195#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

											:apply(csb195#4)

												-- Goal`4-1-3-2-1-2-2-1-1-1-1-1-1 Success by reduction
												:apply (rd)

												-- Goal`4-1-3-2-1-2-2-1-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb196#4 = :ctf [key(c@Cipher2)  .]

												:apply(csb196#4)

													-- Goal`4-1-3-2-1-2-2-1-1-1-1-1-2-1 Success by reduction
													:apply (rd)

											-- Goal`4-1-3-2-1-2-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb197#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

											:apply(csb197#4)

												-- Goal`4-1-3-2-1-2-2-1-1-1-1-2-1 Success by reduction
												:apply (rd)

												-- Goal`4-1-3-2-1-2-2-1-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb198#4 = :ctf [key(c@Cipher2)  .]

												:apply(csb198#4)

													-- Goal`4-1-3-2-1-2-2-1-1-1-1-2-2-1 Success by reduction
													:apply (rd)

										-- Goal`4-1-3-2-1-2-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb199#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

										:apply(csb199#4)

											-- Goal`4-1-3-2-1-2-2-1-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb200#4 = :ctf [P0#Prin  .]

											:apply(csb200#4)

												-- Goal`4-1-3-2-1-2-2-1-1-1-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`4-1-3-2-1-2-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb201#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

											:apply(csb201#4)

												-- Goal`4-1-3-2-1-2-2-1-1-1-2-2-1 Success by reduction
												:apply (rd)

												-- Goal`4-1-3-2-1-2-2-1-1-1-2-2-2 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

								-- Goal`4-1-3-2-1-2-2-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`4-1-3-2-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb202#4 = :ctf [N#Nonce \in cnonce(N0#EVS4-1.Network)  .]

							:apply(csb202#4)

								-- Goal`4-1-3-2-1-2-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb203#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

								:apply(csb203#4)

									-- Goal`4-1-3-2-1-2-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb204#4 = :ctf {eq enc2(P0#Prin, N#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

									:apply(csb204#4)

										-- Goal`4-1-3-2-1-2-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb205#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

										:apply(csb205#4)

											-- Goal`4-1-3-2-1-2-2-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb206#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

											:apply(csb206#4)

												-- Goal`4-1-3-2-1-2-2-2-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb207#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

												:apply(csb207#4)

													-- Goal`4-1-3-2-1-2-2-2-1-1-1-1-1-1 Success by reduction
													:apply (rd)

													-- Goal`4-1-3-2-1-2-2-2-1-1-1-1-1-2 Success by reduction
													:apply (rd)

												-- Goal`4-1-3-2-1-2-2-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb208#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

												:apply(csb208#4)

													-- Goal`4-1-3-2-1-2-2-2-1-1-1-1-2-1 Success by reduction
													:apply (rd)

													-- Goal`4-1-3-2-1-2-2-2-1-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb209#4 = :ctf [key(c@Cipher2)  .]

													:apply(csb209#4)

														-- Goal`4-1-3-2-1-2-2-2-1-1-1-1-2-2-1 Success by reduction
														:apply (rd)

											-- Goal`4-1-3-2-1-2-2-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb210#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

											:apply(csb210#4)

												-- Goal`4-1-3-2-1-2-2-2-1-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb211#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

												:apply(csb211#4)

													-- Goal`4-1-3-2-1-2-2-2-1-1-1-2-1-1 Success by reduction
													:apply (rd)

													-- Goal`4-1-3-2-1-2-2-2-1-1-1-2-1-2 Success by reduction
													:apply (rd)

												-- Goal`4-1-3-2-1-2-2-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb212#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

												:apply(csb212#4)

													-- Goal`4-1-3-2-1-2-2-2-1-1-1-2-2-1 Success by reduction
													:apply (rd)

													-- Goal`4-1-3-2-1-2-2-2-1-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb213#4 = :ctf [key(c@Cipher2)  .]

													:apply(csb213#4)

														-- Goal`4-1-3-2-1-2-2-2-1-1-1-2-2-2-1 Success by reduction
														:apply (rd)

										-- Goal`4-1-3-2-1-2-2-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb214#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

										:apply(csb214#4)

											-- Goal`4-1-3-2-1-2-2-2-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb215#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

											:apply(csb215#4)

												-- Goal`4-1-3-2-1-2-2-2-1-1-2-1-1 Success by reduction
												:apply (rd)

												-- Goal`4-1-3-2-1-2-2-2-1-1-2-1-2 Success by reduction
												:apply (rd)

											-- Goal`4-1-3-2-1-2-2-2-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb216#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

											:apply(csb216#4)

												-- Goal`4-1-3-2-1-2-2-2-1-1-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb217#4 = :ctf [P0#Prin  .]

												:apply(csb217#4)

													-- Goal`4-1-3-2-1-2-2-2-1-1-2-2-1-1 Success by reduction
													:apply (rd)

												-- Goal`4-1-3-2-1-2-2-2-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb218#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

												:apply(csb218#4)

													-- Goal`4-1-3-2-1-2-2-2-1-1-2-2-2-1 Success by reduction
													:apply (rd)

													-- Goal`4-1-3-2-1-2-2-2-1-1-2-2-2-2 Success by implication and reduction.
													:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

													:apply (rd)

								-- Goal`4-1-3-2-1-2-2-2-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

				-- Goal`4-1-3-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
				:def csb219#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = N#Nonce .}

				:apply(csb219#4)

					-- Goal`4-1-3-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb220#4 = :ctf {eq N#Nonce  = N0#Nonce .}

					:apply(csb220#4)

						-- Goal`4-1-3-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb221#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

						:apply(csb221#4)

							-- Goal`4-1-3-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb222#4 = :ctf {eq enc2(P0#Prin, N0#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

							:apply(csb222#4)

								-- Goal`4-1-3-2-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb223#4 = :ctf {eq nonce1(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

								:apply(csb223#4)

									-- Goal`4-1-3-2-2-1-1-1-1-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-3-2-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb224#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

									:apply(csb224#4)

										-- Goal`4-1-3-2-2-1-1-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb225#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

										:apply(csb225#4)

											-- Goal`4-1-3-2-2-1-1-1-1-2-1-1 Success by reduction
											:apply (rd)

											-- Goal`4-1-3-2-2-1-1-1-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb226#4 = :ctf [key(c@Cipher2)  .]

											:apply(csb226#4)

												-- Goal`4-1-3-2-2-1-1-1-1-2-1-2-1 Success by reduction
												:apply (rd)

										-- Goal`4-1-3-2-2-1-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb227#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

										:apply(csb227#4)

											-- Goal`4-1-3-2-2-1-1-1-1-2-2-1 Success by reduction
											:apply (rd)

											-- Goal`4-1-3-2-2-1-1-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb228#4 = :ctf [key(c@Cipher2)  .]

											:apply(csb228#4)

												-- Goal`4-1-3-2-2-1-1-1-1-2-2-2-1 Success by reduction
												:apply (rd)

								-- Goal`4-1-3-2-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb229#4 = :ctf {eq nonce1(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

								:apply(csb229#4)

									-- Goal`4-1-3-2-2-1-1-1-2-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-3-2-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb230#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb230#4)

										-- Goal`4-1-3-2-2-1-1-1-2-2-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-3-2-2-1-1-1-2-2-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

						-- Goal`4-1-3-2-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb231#4 = :ctf [N0#Nonce \in cnonce(N0#EVS4-1.Network)  .]

						:apply(csb231#4)

							-- Goal`4-1-3-2-2-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb232#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

							:apply(csb232#4)

								-- Goal`4-1-3-2-2-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb233#4 = :ctf {eq enc2(P0#Prin, N#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

								:apply(csb233#4)

									-- Goal`4-1-3-2-2-1-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb234#4 = :ctf {eq nonce1(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

									:apply(csb234#4)

										-- Goal`4-1-3-2-2-1-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb235#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

										:apply(csb235#4)

											-- Goal`4-1-3-2-2-1-2-1-1-1-1-1 Success by reduction
											:apply (rd)

											-- Goal`4-1-3-2-2-1-2-1-1-1-1-2 Success by reduction
											:apply (rd)

										-- Goal`4-1-3-2-2-1-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb236#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

										:apply(csb236#4)

											-- Goal`4-1-3-2-2-1-2-1-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb237#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

											:apply(csb237#4)

												-- Goal`4-1-3-2-2-1-2-1-1-1-2-1-1 Success by reduction
												:apply (rd)

												-- Goal`4-1-3-2-2-1-2-1-1-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb238#4 = :ctf [key(c@Cipher2)  .]

												:apply(csb238#4)

													-- Goal`4-1-3-2-2-1-2-1-1-1-2-1-2-1 Success by reduction
													:apply (rd)

											-- Goal`4-1-3-2-2-1-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb239#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

											:apply(csb239#4)

												-- Goal`4-1-3-2-2-1-2-1-1-1-2-2-1 Success by reduction
												:apply (rd)

												-- Goal`4-1-3-2-2-1-2-1-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb240#4 = :ctf [key(c@Cipher2)  .]

												:apply(csb240#4)

													-- Goal`4-1-3-2-2-1-2-1-1-1-2-2-2-1 Success by reduction
													:apply (rd)

									-- Goal`4-1-3-2-2-1-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb241#4 = :ctf {eq nonce1(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

									:apply(csb241#4)

										-- Goal`4-1-3-2-2-1-2-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb242#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

										:apply(csb242#4)

											-- Goal`4-1-3-2-2-1-2-1-1-2-1-1 Success by reduction
											:apply (rd)

											-- Goal`4-1-3-2-2-1-2-1-1-2-1-2 Success by reduction
											:apply (rd)

										-- Goal`4-1-3-2-2-1-2-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb243#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

										:apply(csb243#4)

											-- Goal`4-1-3-2-2-1-2-1-1-2-2-1 Success by reduction
											:apply (rd)

											-- Goal`4-1-3-2-2-1-2-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb244#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

											:apply(csb244#4)

												-- Goal`4-1-3-2-2-1-2-1-1-2-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb245#4 = :ctf [P0#Prin  .]

												:apply(csb245#4)

													-- Goal`4-1-3-2-2-1-2-1-1-2-2-2-1-1 Success by reduction
													:apply (rd)

												-- Goal`4-1-3-2-2-1-2-1-1-2-2-2-2 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

							-- Goal`4-1-3-2-2-1-2-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

					-- Goal`4-1-3-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb246#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = N0#Nonce .}

					:apply(csb246#4)

						-- Goal`4-1-3-2-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb247#4 = :ctf {eq N#Nonce  = N0#Nonce .}

						:apply(csb247#4)

							-- Goal`4-1-3-2-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb248#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

							:apply(csb248#4)

								-- Goal`4-1-3-2-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb249#4 = :ctf {eq enc2(P0#Prin, N0#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

								:apply(csb249#4)

									-- Goal`4-1-3-2-2-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb250#4 = :ctf {eq nonce1(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

									:apply(csb250#4)

										-- Goal`4-1-3-2-2-2-1-1-1-1-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-3-2-2-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb251#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

										:apply(csb251#4)

											-- Goal`4-1-3-2-2-2-1-1-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb252#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

											:apply(csb252#4)

												-- Goal`4-1-3-2-2-2-1-1-1-1-2-1-1 Success by reduction
												:apply (rd)

												-- Goal`4-1-3-2-2-2-1-1-1-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb253#4 = :ctf [key(c@Cipher2)  .]

												:apply(csb253#4)

													-- Goal`4-1-3-2-2-2-1-1-1-1-2-1-2-1 Success by reduction
													:apply (rd)

											-- Goal`4-1-3-2-2-2-1-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb254#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

											:apply(csb254#4)

												-- Goal`4-1-3-2-2-2-1-1-1-1-2-2-1 Success by reduction
												:apply (rd)

												-- Goal`4-1-3-2-2-2-1-1-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb255#4 = :ctf [key(c@Cipher2)  .]

												:apply(csb255#4)

													-- Goal`4-1-3-2-2-2-1-1-1-1-2-2-2-1 Success by reduction
													:apply (rd)

									-- Goal`4-1-3-2-2-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb256#4 = :ctf {eq nonce1(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

									:apply(csb256#4)

										-- Goal`4-1-3-2-2-2-1-1-1-2-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-3-2-2-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb257#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

										:apply(csb257#4)

											-- Goal`4-1-3-2-2-2-1-1-1-2-2-1 Success by reduction
											:apply (rd)

											-- Goal`4-1-3-2-2-2-1-1-1-2-2-2 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

							-- Goal`4-1-3-2-2-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb258#4 = :ctf [N#Nonce \in cnonce(N0#EVS4-1.Network)  .]

							:apply(csb258#4)

								-- Goal`4-1-3-2-2-2-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb259#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

								:apply(csb259#4)

									-- Goal`4-1-3-2-2-2-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb260#4 = :ctf {eq enc2(P0#Prin, N#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

									:apply(csb260#4)

										-- Goal`4-1-3-2-2-2-1-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb261#4 = :ctf {eq nonce1(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

										:apply(csb261#4)

											-- Goal`4-1-3-2-2-2-1-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb262#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

											:apply(csb262#4)

												-- Goal`4-1-3-2-2-2-1-2-1-1-1-1-1 Success by reduction
												:apply (rd)

												-- Goal`4-1-3-2-2-2-1-2-1-1-1-1-2 Success by reduction
												:apply (rd)

											-- Goal`4-1-3-2-2-2-1-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb263#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

											:apply(csb263#4)

												-- Goal`4-1-3-2-2-2-1-2-1-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb264#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

												:apply(csb264#4)

													-- Goal`4-1-3-2-2-2-1-2-1-1-1-2-1-1 Success by reduction
													:apply (rd)

													-- Goal`4-1-3-2-2-2-1-2-1-1-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb265#4 = :ctf [key(c@Cipher2)  .]

													:apply(csb265#4)

														-- Goal`4-1-3-2-2-2-1-2-1-1-1-2-1-2-1 Success by reduction
														:apply (rd)

												-- Goal`4-1-3-2-2-2-1-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb266#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

												:apply(csb266#4)

													-- Goal`4-1-3-2-2-2-1-2-1-1-1-2-2-1 Success by reduction
													:apply (rd)

													-- Goal`4-1-3-2-2-2-1-2-1-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb267#4 = :ctf [key(c@Cipher2)  .]

													:apply(csb267#4)

														-- Goal`4-1-3-2-2-2-1-2-1-1-1-2-2-2-1 Success by reduction
														:apply (rd)

										-- Goal`4-1-3-2-2-2-1-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb268#4 = :ctf {eq nonce1(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

										:apply(csb268#4)

											-- Goal`4-1-3-2-2-2-1-2-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb269#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

											:apply(csb269#4)

												-- Goal`4-1-3-2-2-2-1-2-1-1-2-1-1 Success by reduction
												:apply (rd)

												-- Goal`4-1-3-2-2-2-1-2-1-1-2-1-2 Success by reduction
												:apply (rd)

											-- Goal`4-1-3-2-2-2-1-2-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb270#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

											:apply(csb270#4)

												-- Goal`4-1-3-2-2-2-1-2-1-1-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb271#4 = :ctf [P0#Prin  .]

												:apply(csb271#4)

													-- Goal`4-1-3-2-2-2-1-2-1-1-2-2-1-1 Success by reduction
													:apply (rd)

												-- Goal`4-1-3-2-2-2-1-2-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb272#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

												:apply(csb272#4)

													-- Goal`4-1-3-2-2-2-1-2-1-1-2-2-2-1 Success by reduction
													:apply (rd)

													-- Goal`4-1-3-2-2-2-1-2-1-1-2-2-2-2 Success by implication and reduction.
													:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

													:apply (rd)

								-- Goal`4-1-3-2-2-2-1-2-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

						-- Goal`4-1-3-2-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb273#4 = :ctf [N#Nonce \in cnonce(N0#EVS4-1.Network)  .]

						:apply(csb273#4)

							-- Goal`4-1-3-2-2-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb274#4 = :ctf [N0#Nonce \in cnonce(N0#EVS4-1.Network)  .]

							:apply(csb274#4)

								-- Goal`4-1-3-2-2-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb275#4 = :ctf {eq C#EVS4-1.SubCipher2  = c@Cipher2 .}

								:apply(csb275#4)

									-- Goal`4-1-3-2-2-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb276#4 = :ctf {eq nonce1(c@Cipher2)  = N#Nonce .}

									:apply(csb276#4)

										-- Goal`4-1-3-2-2-2-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb277#4 = :ctf {eq N#Nonce  = N0#Nonce .}

										:apply(csb277#4)

											-- Goal`4-1-3-2-2-2-2-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb278#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

											:apply(csb278#4)

												-- Goal`4-1-3-2-2-2-2-1-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb279#4 = :ctf [key(c@Cipher2)  .]

												:apply(csb279#4)

													-- Goal`4-1-3-2-2-2-2-1-1-1-1-1-1-1 Success by reduction
													:apply (rd)

												-- Goal`4-1-3-2-2-2-2-1-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb280#4 = :ctf [key(c@Cipher2)  .]

												:apply(csb280#4)

													-- Goal`4-1-3-2-2-2-2-1-1-1-1-1-2-1 Success by reduction
													:apply (rd)

											-- Goal`4-1-3-2-2-2-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb281#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

											:apply(csb281#4)

												-- Goal`4-1-3-2-2-2-2-1-1-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb282#4 = :ctf [key(c@Cipher2)  .]

												:apply(csb282#4)

													-- Goal`4-1-3-2-2-2-2-1-1-1-1-2-1-1 Success by reduction
													:apply (rd)

												-- Goal`4-1-3-2-2-2-2-1-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb283#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

												:apply(csb283#4)

													-- Goal`4-1-3-2-2-2-2-1-1-1-1-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb284#4 = :ctf [key(c@Cipher2)  .]

													:apply(csb284#4)

														-- Goal`4-1-3-2-2-2-2-1-1-1-1-2-2-1-1 Success by reduction
														:apply (rd)

													-- Goal`4-1-3-2-2-2-2-1-1-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb285#4 = :ctf [key(c@Cipher2)  .]

													:apply(csb285#4)

														-- Goal`4-1-3-2-2-2-2-1-1-1-1-2-2-2-1 Success by reduction
														:apply (rd)

										-- Goal`4-1-3-2-2-2-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb286#4 = :ctf {eq nonce1(c@Cipher2)  = N0#Nonce .}

										:apply(csb286#4)

											-- Goal`4-1-3-2-2-2-2-1-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb287#4 = :ctf {eq N#Nonce  = N0#Nonce .}

											:apply(csb287#4)

												-- Goal`4-1-3-2-2-2-2-1-1-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb288#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

												:apply(csb288#4)

													-- Goal`4-1-3-2-2-2-2-1-1-1-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb289#4 = :ctf [key(c@Cipher2)  .]

													:apply(csb289#4)

														-- Goal`4-1-3-2-2-2-2-1-1-1-2-1-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`4-1-3-2-2-2-2-1-1-1-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb290#4 = :ctf [key(c@Cipher2)  .]

													:apply(csb290#4)

														-- Goal`4-1-3-2-2-2-2-1-1-1-2-1-1-2-1 Success by reduction
														:apply (rd)

												-- Goal`4-1-3-2-2-2-2-1-1-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb291#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

												:apply(csb291#4)

													-- Goal`4-1-3-2-2-2-2-1-1-1-2-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb292#4 = :ctf [key(c@Cipher2)  .]

													:apply(csb292#4)

														-- Goal`4-1-3-2-2-2-2-1-1-1-2-1-2-1-1 Success by reduction
														:apply (rd)

													-- Goal`4-1-3-2-2-2-2-1-1-1-2-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb293#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

													:apply(csb293#4)

														-- Goal`4-1-3-2-2-2-2-1-1-1-2-1-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb294#4 = :ctf [key(c@Cipher2)  .]

														:apply(csb294#4)

															-- Goal`4-1-3-2-2-2-2-1-1-1-2-1-2-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`4-1-3-2-2-2-2-1-1-1-2-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb295#4 = :ctf [key(c@Cipher2)  .]

														:apply(csb295#4)

															-- Goal`4-1-3-2-2-2-2-1-1-1-2-1-2-2-2-1 Success by reduction
															:apply (rd)

											-- Goal`4-1-3-2-2-2-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb296#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

											:apply(csb296#4)

												-- Goal`4-1-3-2-2-2-2-1-1-1-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb297#4 = :ctf {eq N#Nonce  = N0#Nonce .}

												:apply(csb297#4)

													-- Goal`4-1-3-2-2-2-2-1-1-1-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb298#4 = :ctf [key(c@Cipher2)  .]

													:apply(csb298#4)

														-- Goal`4-1-3-2-2-2-2-1-1-1-2-2-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`4-1-3-2-2-2-2-1-1-1-2-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb299#4 = :ctf [key(c@Cipher2)  .]

													:apply(csb299#4)

														-- Goal`4-1-3-2-2-2-2-1-1-1-2-2-1-2-1 Success by reduction
														:apply (rd)

												-- Goal`4-1-3-2-2-2-2-1-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb300#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

												:apply(csb300#4)

													-- Goal`4-1-3-2-2-2-2-1-1-1-2-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb301#4 = :ctf {eq N#Nonce  = N0#Nonce .}

													:apply(csb301#4)

														-- Goal`4-1-3-2-2-2-2-1-1-1-2-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb302#4 = :ctf [key(c@Cipher2)  .]

														:apply(csb302#4)

															-- Goal`4-1-3-2-2-2-2-1-1-1-2-2-2-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`4-1-3-2-2-2-2-1-1-1-2-2-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb303#4 = :ctf [key(c@Cipher2)  .]

														:apply(csb303#4)

															-- Goal`4-1-3-2-2-2-2-1-1-1-2-2-2-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`4-1-3-2-2-2-2-1-1-1-2-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb304#4 = :ctf {eq enc2(P0#Prin, N#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

													:apply(csb304#4)

														-- Goal`4-1-3-2-2-2-2-1-1-1-2-2-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb305#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb305#4)

															-- Goal`4-1-3-2-2-2-2-1-1-1-2-2-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb306#4 = :ctf [key(c@Cipher2)  .]

															:apply(csb306#4)

																-- Goal`4-1-3-2-2-2-2-1-1-1-2-2-2-2-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`4-1-3-2-2-2-2-1-1-1-2-2-2-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb307#4 = :ctf [key(c@Cipher2)  .]

															:apply(csb307#4)

																-- Goal`4-1-3-2-2-2-2-1-1-1-2-2-2-2-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`4-1-3-2-2-2-2-1-1-1-2-2-2-2-2 Success by implication and reduction.
														:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

														:apply (rd)

									-- Goal`4-1-3-2-2-2-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb308#4 = :ctf {eq enc2(P0#Prin, N#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

									:apply(csb308#4)

										-- Goal`4-1-3-2-2-2-2-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb309#4 = :ctf {eq nonce1(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

										:apply(csb309#4)

											-- Goal`4-1-3-2-2-2-2-1-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb310#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

											:apply(csb310#4)

												-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb311#4 = :ctf {eq N#Nonce  = N0#Nonce .}

												:apply(csb311#4)

													-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb312#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

													:apply(csb312#4)

														-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb313#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

													:apply(csb313#4)

														-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-1-2-1 Success by reduction
														:apply (rd)

												-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb314#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

												:apply(csb314#4)

													-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb315#4 = :ctf {eq N#Nonce  = N0#Nonce .}

													:apply(csb315#4)

														-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb316#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

														:apply(csb316#4)

															-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-2-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb317#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

														:apply(csb317#4)

															-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-2-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb318#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb318#4)

														-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb319#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

														:apply(csb319#4)

															-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb320#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

															:apply(csb320#4)

																-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-2-2-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-2-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb321#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

															:apply(csb321#4)

																-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-2-2-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb322#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

														:apply(csb322#4)

															-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-2-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb323#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

															:apply(csb323#4)

																-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-2-2-2-1-1 Success by reduction
																:apply (rd)

															-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-2-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb324#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

															:apply(csb324#4)

																-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-2-2-2-2-1 Success by reduction
																:apply (rd)

											-- Goal`4-1-3-2-2-2-2-1-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb325#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

											:apply(csb325#4)

												-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb326#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

												:apply(csb326#4)

													-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb327#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

													:apply(csb327#4)

														-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb328#4 = :ctf {eq N#Nonce  = N0#Nonce .}

														:apply(csb328#4)

															-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb329#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

															:apply(csb329#4)

																-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-1-1-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb330#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

															:apply(csb330#4)

																-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-1-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb331#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

														:apply(csb331#4)

															-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb332#4 = :ctf {eq N#Nonce  = N0#Nonce .}

															:apply(csb332#4)

																-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-1-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
																:def csb333#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

																:apply(csb333#4)

																	-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-1-1-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-1-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
																:def csb334#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

																:apply(csb334#4)

																	-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-1-1-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb335#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

															:apply(csb335#4)

																-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-1-1-2-2-1 Success by reduction
																:apply (rd)

													-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb336#4 = :ctf [key(c@Cipher2)  .]

													:apply(csb336#4)

														-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-1-2-1 Success by reduction
														:apply (rd)

												-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb337#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

												:apply(csb337#4)

													-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb338#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

													:apply(csb338#4)

														-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb339#4 = :ctf {eq N#Nonce  = N0#Nonce .}

														:apply(csb339#4)

															-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb340#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

															:apply(csb340#4)

																-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-2-1-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb341#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

															:apply(csb341#4)

																-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-2-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb342#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

														:apply(csb342#4)

															-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-2-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb343#4 = :ctf {eq N#Nonce  = N0#Nonce .}

															:apply(csb343#4)

																-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-2-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
																:def csb344#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

																:apply(csb344#4)

																	-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-2-1-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-2-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
																:def csb345#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

																:apply(csb345#4)

																	-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-2-1-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-2-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb346#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

															:apply(csb346#4)

																-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-2-1-2-2-1 Success by reduction
																:apply (rd)

													-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb347#4 = :ctf [key(c@Cipher2)  .]

													:apply(csb347#4)

														-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-2-2-1 Success by reduction
														:apply (rd)

										-- Goal`4-1-3-2-2-2-2-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb348#4 = :ctf {eq nonce1(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

										:apply(csb348#4)

											-- Goal`4-1-3-2-2-2-2-1-1-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb349#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

											:apply(csb349#4)

												-- Goal`4-1-3-2-2-2-2-1-1-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb350#4 = :ctf {eq N#Nonce  = N0#Nonce .}

												:apply(csb350#4)

													-- Goal`4-1-3-2-2-2-2-1-1-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb351#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

													:apply(csb351#4)

														-- Goal`4-1-3-2-2-2-2-1-1-2-2-1-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`4-1-3-2-2-2-2-1-1-2-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb352#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

													:apply(csb352#4)

														-- Goal`4-1-3-2-2-2-2-1-1-2-2-1-1-2-1 Success by reduction
														:apply (rd)

												-- Goal`4-1-3-2-2-2-2-1-1-2-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb353#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

												:apply(csb353#4)

													-- Goal`4-1-3-2-2-2-2-1-1-2-2-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb354#4 = :ctf {eq N#Nonce  = N0#Nonce .}

													:apply(csb354#4)

														-- Goal`4-1-3-2-2-2-2-1-1-2-2-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb355#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

														:apply(csb355#4)

															-- Goal`4-1-3-2-2-2-2-1-1-2-2-1-2-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`4-1-3-2-2-2-2-1-1-2-2-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb356#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

														:apply(csb356#4)

															-- Goal`4-1-3-2-2-2-2-1-1-2-2-1-2-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`4-1-3-2-2-2-2-1-1-2-2-1-2-2 Success by implication and reduction.
													:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

													:apply (rd)

											-- Goal`4-1-3-2-2-2-2-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb357#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = nonce2(c@Cipher2) .}

											:apply(csb357#4)

												-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb358#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

												:apply(csb358#4)

													-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb359#4 = :ctf {eq N#Nonce  = N0#Nonce .}

													:apply(csb359#4)

														-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb360#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

														:apply(csb360#4)

															-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb361#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

														:apply(csb361#4)

															-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb362#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

													:apply(csb362#4)

														-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb363#4 = :ctf {eq N#Nonce  = N0#Nonce .}

														:apply(csb363#4)

															-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb364#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

															:apply(csb364#4)

																-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-1-2-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb365#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

															:apply(csb365#4)

																-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-1-2-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-1-2-2 Success by implication and reduction.
														:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

														:apply (rd)

												-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb366#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

												:apply(csb366#4)

													-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb367#4 = :ctf {eq N#Nonce  = N0#Nonce .}

													:apply(csb367#4)

														-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb368#4 = :ctf {eq enc2(P0#Prin, N0#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

														:apply(csb368#4)

															-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb369#4 = :ctf {eq nonce1(c@Cipher2)  = N0#Nonce .}

															:apply(csb369#4)

																-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
																:def csb370#4 = :ctf [key(c@Cipher2)  .]

																:apply(csb370#4)

																	-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-1-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
																:def csb371#4 = :ctf [key(c@Cipher2)  .]

																:apply(csb371#4)

																	-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-1-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb372#4 = :ctf [P0#Prin  .]

															:apply(csb372#4)

																-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb373#4 = :ctf [P0#Prin  .]

														:apply(csb373#4)

															-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb374#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

													:apply(csb374#4)

														-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
														:def csb375#4 = :ctf {eq N#Nonce  = N0#Nonce .}

														:apply(csb375#4)

															-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb376#4 = :ctf {eq enc2(P0#Prin, N0#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

															:apply(csb376#4)

																-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
																:def csb377#4 = :ctf [key(c@Cipher2)  .]

																:apply(csb377#4)

																	-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
																:def csb378#4 = :ctf [P0#Prin  .]

																:apply(csb378#4)

																	-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
															:def csb379#4 = :ctf [P0#Prin  .]

															:apply(csb379#4)

																-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-2-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`4-1-3-2-2-2-2-1-1-2-2-2-2-2-2 Success by implication and reduction.
														:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

														:apply (rd)

								-- Goal`4-1-3-2-2-2-2-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`4-1-3-2-2-2-2-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

		-- Goal`4-1-4  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
		:def csb380#4 = :ctf {eq nonce(C#EVS4-1.SubCipher3)  = N#Nonce .}

		:apply(csb380#4)

			-- Goal`4-1-4-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
			:def csb381#4 = :ctf {eq N#Nonce  = N0#Nonce .}

			:apply(csb381#4)

				-- Goal`4-1-4-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
				:def csb382#4 = :ctf [key(C#EVS4-1.SubCipher3)  .]

				:apply(csb382#4)

					-- Goal`4-1-4-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb383#4 = :ctf {eq enc2(P0#Prin, N0#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

					:apply(csb383#4)

						-- Goal`4-1-4-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb384#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

						:apply(csb384#4)

							-- Goal`4-1-4-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb385#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

							:apply(csb385#4)

								-- Goal`4-1-4-1-1-1-1-1-1 Success by reduction
								:apply (rd)

								-- Goal`4-1-4-1-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb386#4 = :ctf [key(c@Cipher2)  .]

								:apply(csb386#4)

									-- Goal`4-1-4-1-1-1-1-1-2-1 Success by reduction
									:apply (rd)

							-- Goal`4-1-4-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb387#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

							:apply(csb387#4)

								-- Goal`4-1-4-1-1-1-1-2-1 Success by reduction
								:apply (rd)

								-- Goal`4-1-4-1-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb388#4 = :ctf [key(c@Cipher2)  .]

								:apply(csb388#4)

									-- Goal`4-1-4-1-1-1-1-2-2-1 Success by reduction
									:apply (rd)

						-- Goal`4-1-4-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb389#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

						:apply(csb389#4)

							-- Goal`4-1-4-1-1-1-2-1 Success by reduction
							:apply (rd)

							-- Goal`4-1-4-1-1-1-2-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

				-- Goal`4-1-4-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
				:def csb390#4 = :ctf [N0#Nonce \in cnonce(N0#EVS4-1.Network)  .]

				:apply(csb390#4)

					-- Goal`4-1-4-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb391#4 = :ctf [key(C#EVS4-1.SubCipher3)  .]

					:apply(csb391#4)

						-- Goal`4-1-4-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb392#4 = :ctf {eq enc2(P0#Prin, N#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

						:apply(csb392#4)

							-- Goal`4-1-4-1-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb393#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

							:apply(csb393#4)

								-- Goal`4-1-4-1-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb394#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb394#4)

									-- Goal`4-1-4-1-2-1-1-1-1-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-4-1-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb395#4 = :ctf [key(c@Cipher2)  .]

									:apply(csb395#4)

										-- Goal`4-1-4-1-2-1-1-1-1-2-1 Success by reduction
										:apply (rd)

								-- Goal`4-1-4-1-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb396#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb396#4)

									-- Goal`4-1-4-1-2-1-1-1-2-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-4-1-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb397#4 = :ctf [key(c@Cipher2)  .]

									:apply(csb397#4)

										-- Goal`4-1-4-1-2-1-1-1-2-2-1 Success by reduction
										:apply (rd)

							-- Goal`4-1-4-1-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb398#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

							:apply(csb398#4)

								-- Goal`4-1-4-1-2-1-1-2-1 Success by reduction
								:apply (rd)

								-- Goal`4-1-4-1-2-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb399#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

								:apply(csb399#4)

									-- Goal`4-1-4-1-2-1-1-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb400#4 = :ctf [P0#Prin  .]

									:apply(csb400#4)

										-- Goal`4-1-4-1-2-1-1-2-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`4-1-4-1-2-1-1-2-2-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

					-- Goal`4-1-4-1-2-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

			-- Goal`4-1-4-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
			:def csb401#4 = :ctf {eq nonce(C#EVS4-1.SubCipher3)  = N0#Nonce .}

			:apply(csb401#4)

				-- Goal`4-1-4-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
				:def csb402#4 = :ctf {eq N#Nonce  = N0#Nonce .}

				:apply(csb402#4)

					-- Goal`4-1-4-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb403#4 = :ctf [key(C#EVS4-1.SubCipher3)  .]

					:apply(csb403#4)

						-- Goal`4-1-4-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb404#4 = :ctf {eq enc2(P0#Prin, N0#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

						:apply(csb404#4)

							-- Goal`4-1-4-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb405#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

							:apply(csb405#4)

								-- Goal`4-1-4-2-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb406#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

								:apply(csb406#4)

									-- Goal`4-1-4-2-1-1-1-1-1-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-4-2-1-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb407#4 = :ctf [key(c@Cipher2)  .]

									:apply(csb407#4)

										-- Goal`4-1-4-2-1-1-1-1-1-2-1 Success by reduction
										:apply (rd)

								-- Goal`4-1-4-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb408#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

								:apply(csb408#4)

									-- Goal`4-1-4-2-1-1-1-1-2-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-4-2-1-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb409#4 = :ctf [key(c@Cipher2)  .]

									:apply(csb409#4)

										-- Goal`4-1-4-2-1-1-1-1-2-2-1 Success by reduction
										:apply (rd)

							-- Goal`4-1-4-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb410#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

							:apply(csb410#4)

								-- Goal`4-1-4-2-1-1-1-2-1 Success by reduction
								:apply (rd)

								-- Goal`4-1-4-2-1-1-1-2-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

					-- Goal`4-1-4-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb411#4 = :ctf [N#Nonce \in cnonce(N0#EVS4-1.Network)  .]

					:apply(csb411#4)

						-- Goal`4-1-4-2-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb412#4 = :ctf [key(C#EVS4-1.SubCipher3)  .]

						:apply(csb412#4)

							-- Goal`4-1-4-2-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb413#4 = :ctf {eq enc2(P0#Prin, N#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

							:apply(csb413#4)

								-- Goal`4-1-4-2-1-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb414#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb414#4)

									-- Goal`4-1-4-2-1-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb415#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb415#4)

										-- Goal`4-1-4-2-1-2-1-1-1-1-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-4-2-1-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb416#4 = :ctf [key(c@Cipher2)  .]

										:apply(csb416#4)

											-- Goal`4-1-4-2-1-2-1-1-1-1-2-1 Success by reduction
											:apply (rd)

									-- Goal`4-1-4-2-1-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb417#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb417#4)

										-- Goal`4-1-4-2-1-2-1-1-1-2-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-4-2-1-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb418#4 = :ctf [key(c@Cipher2)  .]

										:apply(csb418#4)

											-- Goal`4-1-4-2-1-2-1-1-1-2-2-1 Success by reduction
											:apply (rd)

								-- Goal`4-1-4-2-1-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb419#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb419#4)

									-- Goal`4-1-4-2-1-2-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb420#4 = :ctf [P0#Prin  .]

									:apply(csb420#4)

										-- Goal`4-1-4-2-1-2-1-1-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`4-1-4-2-1-2-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb421#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb421#4)

										-- Goal`4-1-4-2-1-2-1-1-2-2-1 Success by reduction
										:apply (rd)

										-- Goal`4-1-4-2-1-2-1-1-2-2-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

						-- Goal`4-1-4-2-1-2-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

				-- Goal`4-1-4-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
				:def csb422#4 = :ctf [N#Nonce \in cnonce(N0#EVS4-1.Network)  .]

				:apply(csb422#4)

					-- Goal`4-1-4-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
					:def csb423#4 = :ctf [N0#Nonce \in cnonce(N0#EVS4-1.Network)  .]

					:apply(csb423#4)

						-- Goal`4-1-4-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
						:def csb424#4 = :ctf {eq enc2(P0#Prin, N#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

						:apply(csb424#4)

							-- Goal`4-1-4-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb425#4 = :ctf {eq nonce(C#EVS4-1.SubCipher3)  = nonce2(c@Cipher2) .}

							:apply(csb425#4)

								-- Goal`4-1-4-2-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb426#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb426#4)

									-- Goal`4-1-4-2-2-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb427#4 = :ctf {eq N#Nonce  = N0#Nonce .}

									:apply(csb427#4)

										-- Goal`4-1-4-2-2-1-1-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb428#4 = :ctf [key(C#EVS4-1.SubCipher3)  .]

										:apply(csb428#4)

											-- Goal`4-1-4-2-2-1-1-1-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`4-1-4-2-2-1-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb429#4 = :ctf [key(C#EVS4-1.SubCipher3)  .]

										:apply(csb429#4)

											-- Goal`4-1-4-2-2-1-1-1-1-1-2-1 Success by reduction
											:apply (rd)

									-- Goal`4-1-4-2-2-1-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb430#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb430#4)

										-- Goal`4-1-4-2-2-1-1-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb431#4 = :ctf {eq N#Nonce  = N0#Nonce .}

										:apply(csb431#4)

											-- Goal`4-1-4-2-2-1-1-1-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb432#4 = :ctf [key(C#EVS4-1.SubCipher3)  .]

											:apply(csb432#4)

												-- Goal`4-1-4-2-2-1-1-1-1-2-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`4-1-4-2-2-1-1-1-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb433#4 = :ctf [key(C#EVS4-1.SubCipher3)  .]

											:apply(csb433#4)

												-- Goal`4-1-4-2-2-1-1-1-1-2-1-2-1 Success by reduction
												:apply (rd)

										-- Goal`4-1-4-2-2-1-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb434#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

										:apply(csb434#4)

											-- Goal`4-1-4-2-2-1-1-1-1-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb435#4 = :ctf [key(C#EVS4-1.SubCipher3)  .]

											:apply(csb435#4)

												-- Goal`4-1-4-2-2-1-1-1-1-2-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`4-1-4-2-2-1-1-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb436#4 = :ctf [key(C#EVS4-1.SubCipher3)  .]

											:apply(csb436#4)

												-- Goal`4-1-4-2-2-1-1-1-1-2-2-2-1 Success by reduction
												:apply (rd)

								-- Goal`4-1-4-2-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb437#4 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

								:apply(csb437#4)

									-- Goal`4-1-4-2-2-1-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb438#4 = :ctf [key(c@Cipher2)  .]

									:apply(csb438#4)

										-- Goal`4-1-4-2-2-1-1-1-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`4-1-4-2-2-1-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb439#4 = :ctf [key(c@Cipher2)  .]

									:apply(csb439#4)

										-- Goal`4-1-4-2-2-1-1-1-2-2-1 Success by reduction
										:apply (rd)

							-- Goal`4-1-4-2-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
							:def csb440#4 = :ctf {eq nonce(C#EVS4-1.SubCipher3)  = nonce2(c@Cipher2) .}

							:apply(csb440#4)

								-- Goal`4-1-4-2-2-1-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb441#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb441#4)

									-- Goal`4-1-4-2-2-1-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb442#4 = :ctf {eq N#Nonce  = N0#Nonce .}

									:apply(csb442#4)

										-- Goal`4-1-4-2-2-1-1-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb443#4 = :ctf [key(C#EVS4-1.SubCipher3)  .]

										:apply(csb443#4)

											-- Goal`4-1-4-2-2-1-1-2-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`4-1-4-2-2-1-1-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb444#4 = :ctf [key(C#EVS4-1.SubCipher3)  .]

										:apply(csb444#4)

											-- Goal`4-1-4-2-2-1-1-2-1-1-2-1 Success by reduction
											:apply (rd)

									-- Goal`4-1-4-2-2-1-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb445#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb445#4)

										-- Goal`4-1-4-2-2-1-1-2-1-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb446#4 = :ctf {eq N#Nonce  = N0#Nonce .}

										:apply(csb446#4)

											-- Goal`4-1-4-2-2-1-1-2-1-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb447#4 = :ctf [key(C#EVS4-1.SubCipher3)  .]

											:apply(csb447#4)

												-- Goal`4-1-4-2-2-1-1-2-1-2-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`4-1-4-2-2-1-1-2-1-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb448#4 = :ctf [key(C#EVS4-1.SubCipher3)  .]

											:apply(csb448#4)

												-- Goal`4-1-4-2-2-1-1-2-1-2-1-2-1 Success by reduction
												:apply (rd)

										-- Goal`4-1-4-2-2-1-1-2-1-2-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

								-- Goal`4-1-4-2-2-1-1-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
								:def csb449#4 = :ctf {eq nonce2(c@Cipher2)  = N#Nonce .}

								:apply(csb449#4)

									-- Goal`4-1-4-2-2-1-1-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb450#4 = :ctf {eq N#Nonce  = N0#Nonce .}

									:apply(csb450#4)

										-- Goal`4-1-4-2-2-1-1-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb451#4 = :ctf {eq enc2(P0#Prin, N0#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

										:apply(csb451#4)

											-- Goal`4-1-4-2-2-1-1-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb452#4 = :ctf {eq nonce1(c@Cipher2)  = N0#Nonce .}

											:apply(csb452#4)

												-- Goal`4-1-4-2-2-1-1-2-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb453#4 = :ctf [key(c@Cipher2)  .]

												:apply(csb453#4)

													-- Goal`4-1-4-2-2-1-1-2-2-1-1-1-1-1 Success by reduction
													:apply (rd)

												-- Goal`4-1-4-2-2-1-1-2-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb454#4 = :ctf [key(c@Cipher2)  .]

												:apply(csb454#4)

													-- Goal`4-1-4-2-2-1-1-2-2-1-1-1-2-1 Success by reduction
													:apply (rd)

											-- Goal`4-1-4-2-2-1-1-2-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb455#4 = :ctf [P0#Prin  .]

											:apply(csb455#4)

												-- Goal`4-1-4-2-2-1-1-2-2-1-1-2-1 Success by reduction
												:apply (rd)

										-- Goal`4-1-4-2-2-1-1-2-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb456#4 = :ctf [P0#Prin  .]

										:apply(csb456#4)

											-- Goal`4-1-4-2-2-1-1-2-2-1-2-1 Success by reduction
											:apply (rd)

									-- Goal`4-1-4-2-2-1-1-2-2-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
									:def csb457#4 = :ctf {eq nonce2(c@Cipher2)  = N0#Nonce .}

									:apply(csb457#4)

										-- Goal`4-1-4-2-2-1-1-2-2-2-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
										:def csb458#4 = :ctf {eq N#Nonce  = N0#Nonce .}

										:apply(csb458#4)

											-- Goal`4-1-4-2-2-1-1-2-2-2-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb459#4 = :ctf {eq enc2(P0#Prin, N0#Nonce, N0#Nonce, P#Prin)  = c@Cipher2 .}

											:apply(csb459#4)

												-- Goal`4-1-4-2-2-1-1-2-2-2-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb460#4 = :ctf {eq nonce1(c@Cipher2)  = N0#Nonce .}

												:apply(csb460#4)

													-- Goal`4-1-4-2-2-1-1-2-2-2-1-1-1-1  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb461#4 = :ctf [key(c@Cipher2)  .]

													:apply(csb461#4)

														-- Goal`4-1-4-2-2-1-1-2-2-2-1-1-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`4-1-4-2-2-1-1-2-2-2-1-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
													:def csb462#4 = :ctf [key(c@Cipher2)  .]

													:apply(csb462#4)

														-- Goal`4-1-4-2-2-1-1-2-2-2-1-1-1-2-1 Success by reduction
														:apply (rd)

												-- Goal`4-1-4-2-2-1-1-2-2-2-1-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
												:def csb463#4 = :ctf [P0#Prin  .]

												:apply(csb463#4)

													-- Goal`4-1-4-2-2-1-1-2-2-2-1-1-2-1 Success by reduction
													:apply (rd)

											-- Goal`4-1-4-2-2-1-1-2-2-2-1-2  -  inv150(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher2)  - Success
											:def csb464#4 = :ctf [P0#Prin  .]

											:apply(csb464#4)

												-- Goal`4-1-4-2-2-1-1-2-2-2-1-2-1 Success by reduction
												:apply (rd)

										-- Goal`4-1-4-2-2-1-1-2-2-2-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

						-- Goal`4-1-4-2-2-1-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

					-- Goal`4-1-4-2-2-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)


:sel(10)
	:apply(tc)

	:def csb1#10 = :ctf [M#Msg \in nw(S#Sys)  .]

	:apply(csb1#10)

	:def csb2#10 = :ctf [M0#Msg \in nw(S#Sys)  .]

	:apply(csb2#10)

	:def csb3#10 = :ctf [m1?(M#Msg)  .]

	:apply(csb3#10)

	:def csb4#10 = :ctf [m2?(M0#Msg)  .]

	:apply(csb4#10)

	:def csb5#10 = :ctf {eq creator(M#Msg)  = P#Prin .}

	:apply(csb5#10)

	:def csb6#10 = :ctf {eq sender(M#Msg)  = P#Prin .}

	:apply(csb6#10)

	:def csb7#10 = :ctf {eq receiver(M#Msg)  = sender(M0#Msg) .}

	:apply(csb7#10)

	:def csb8#10 = :ctf {eq key(cipher1(M#Msg))  = sender(M0#Msg) .}

	:apply(csb8#10)

	:def csb9#10 = :ctf {eq nonce(cipher1(M#Msg))  = n(P#Prin, sender(M0#Msg), R#Rand) .}

	:apply(csb9#10)

	:def csb10#10 = :ctf {eq principal(cipher1(M#Msg))  = P#Prin .}

	:apply(csb10#10)

	:def csb11#10 = :ctf {eq receiver(M0#Msg)  = P#Prin .}

	:apply(csb11#10)

	:def csb12#10 = :ctf {eq key(cipher2(M0#Msg))  = P#Prin .}

	:apply(csb12#10)

	:def csb13#10 = :ctf {eq nonce1(cipher2(M0#Msg))  = n(P#Prin, sender(M0#Msg), R#Rand) .}

	:apply(csb13#10)

	:def csb14#10 = :ctf {eq principal(cipher2(M0#Msg))  = sender(M0#Msg) .}

	:apply(csb14#10)

	:def csb15#10 = :ctf {eq sender(M0#Msg)  = intruder .}

	:apply(csb15#10)

	:def csb16#10 = :ctf {eq nonce2(c@Cipher2)  = nonce2(cipher2(M0#Msg)) .}

	:apply(csb16#10)

	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

	:apply (rd)

	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

	:apply (rd)

	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

	:apply (rd)

	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

	:apply (rd)

	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

	:apply (rd)

	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

	:apply (rd)

	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

	:apply (rd)

	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

	:apply (rd)

	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

	:apply (rd)

	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

	:apply (rd)

	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

	:apply (rd)

	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

	:apply (rd)

	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

	:apply (rd)

	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

	:apply (rd)

	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

	:apply (rd)

	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

	:apply (rd)

	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

	:apply (rd)


:sel(9)
	:apply(tc)

	-- Goal`9-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
	:def csb1#9 = :cvs [nw(S#Sys)  .]

	:apply(csb1#9)

		-- Goal`9-1-1 Success by reduction
		:apply (rd)

		-- Goal`9-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
	:def csb2#9 = :cvs [ur(S#Sys)  .]

	:apply(csb2#9)

			-- Goal`9-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
			:def csb3#9 = :ctf {eq cipher1(M#Msg)  = C#EVS9-1.SubCipher1 .}

			:apply(csb3#9)

				-- Goal`9-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
				:def csb4#9 = :ctf {eq creator(M#Msg)  = P#EVS9-1.SubPrin .}

				:apply(csb4#9)

					-- Goal`9-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
					:def csb5#9 = :ctf {eq key(C#EVS9-1.SubCipher1)  = P#Prin .}

					:apply(csb5#9)

						-- Goal`9-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
						:def csb6#9 = :ctf {eq principal(C#EVS9-1.SubCipher1)  = sender(M#Msg) .}

						:apply(csb6#9)

							-- Goal`9-1-2-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
							:def csb7#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

							:apply(csb7#9)

								-- Goal`9-1-2-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
								:def csb8#9 = :ctf {eq P#Prin  = P1#EVS9-1.SubPrin .}

								:apply(csb8#9)

									-- Goal`9-1-2-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb9#9 = :ctf {eq sender(M#Msg)  = P0#EVS9-1.SubPrin .}

									:apply(csb9#9)

										-- Goal`9-1-2-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb10#9 = :ctf [m1?(M#Msg)  .]

										:apply(csb10#9)

											-- Goal`9-1-2-1-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb11#9 = :ctf {eq enc2(P0#EVS9-1.SubPrin, nonce(C#EVS9-1.SubCipher1), n(P1#EVS9-1.SubPrin, P0#EVS9-1.SubPrin, R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

											:apply(csb11#9)

												-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb12#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

												:apply(csb12#9)

													-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb13#9 = :ctf {eq enc2(P0#EVS9-1.SubPrin, nonce2(c@Cipher2), n(P1#EVS9-1.SubPrin, P0#EVS9-1.SubPrin, R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

													:apply(csb13#9)

														-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb14#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb14#9)

															-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb15#9 = :ctf [P1#EVS9-1.SubPrin  .]

															:apply(csb15#9)

																-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1-1-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb16#9 = :ctf [P1#EVS9-1.SubPrin  .]

															:apply(csb16#9)

																-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb17#9 = :ctf [P0#EVS9-1.SubPrin  .]

														:apply(csb17#9)

															-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb18#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb18#9)

														-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb19#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb19#9)

															-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb20#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb20#9)

															-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1-2-2-1 Success by reduction
															:apply (rd)

												-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb21#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

												:apply(csb21#9)

													-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb22#9 = :ctf {eq enc2(P0#EVS9-1.SubPrin, nonce2(c@Cipher2), n(P1#EVS9-1.SubPrin, P0#EVS9-1.SubPrin, R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

													:apply(csb22#9)

														-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb23#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb23#9)

															-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb24#9 = :ctf [P1#EVS9-1.SubPrin  .]

															:apply(csb24#9)

																-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-1-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb25#9 = :ctf [P1#EVS9-1.SubPrin  .]

															:apply(csb25#9)

																-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb26#9 = :ctf [P0#EVS9-1.SubPrin  .]

														:apply(csb26#9)

															-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb27#9 = :ctf [P0#EVS9-1.SubPrin  .]

													:apply(csb27#9)

														-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb28#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

														:apply(csb28#9)

															-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb29#9 = :ctf [nonce2(c@Cipher2)  .]

															:apply(csb29#9)

																-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb30#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb30#9)

																	-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-2-1-1-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

															-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-2-1-2 Success by reduction
															:apply (rd)

											-- Goal`9-1-2-1-1-1-1-1-1-1-1-2 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

										-- Goal`9-1-2-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb31#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

										:apply(csb31#9)

											-- Goal`9-1-2-1-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb32#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb32#9)

												-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb33#9 = :ctf {eq enc2(sender(M#Msg), nonce(C#EVS9-1.SubCipher1), n(P1#EVS9-1.SubPrin, sender(M#Msg), R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

												:apply(csb33#9)

													-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb34#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

													:apply(csb34#9)

														-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb35#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P1#EVS9-1.SubPrin, sender(M#Msg), R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

														:apply(csb35#9)

															-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb36#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb36#9)

																-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb37#9 = :ctf [P1#EVS9-1.SubPrin  .]

																:apply(csb37#9)

																	-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-1-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb38#9 = :ctf [P1#EVS9-1.SubPrin  .]

																:apply(csb38#9)

																	-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-1-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb39#9 = :ctf [P1#EVS9-1.SubPrin  .]

															:apply(csb39#9)

																-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb40#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb40#9)

															-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb41#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb41#9)

																-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-1-2-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb42#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb42#9)

																-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-1-2-2-1 Success by reduction
																:apply (rd)

													-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb43#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

													:apply(csb43#9)

														-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb44#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P1#EVS9-1.SubPrin, sender(M#Msg), R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

														:apply(csb44#9)

															-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb45#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb45#9)

																-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb46#9 = :ctf [P1#EVS9-1.SubPrin  .]

																:apply(csb46#9)

																	-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb47#9 = :ctf [P1#EVS9-1.SubPrin  .]

																:apply(csb47#9)

																	-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb48#9 = :ctf [P1#EVS9-1.SubPrin  .]

															:apply(csb48#9)

																-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-2-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb49#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

														:apply(csb49#9)

															-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb50#9 = :ctf [nonce2(c@Cipher2)  .]

															:apply(csb50#9)

																-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb51#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb51#9)

																	-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-2-2-1-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

															-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-2-2-2 Success by reduction
															:apply (rd)

												-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-2 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

											-- Goal`9-1-2-1-1-1-1-1-1-1-2-2 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

									-- Goal`9-1-2-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb52#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

									:apply(csb52#9)

										-- Goal`9-1-2-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb53#9 = :ctf [m1?(M#Msg)  .]

										:apply(csb53#9)

											-- Goal`9-1-2-1-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb54#9 = :ctf {eq enc2(sender(M#Msg), nonce(C#EVS9-1.SubCipher1), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

											:apply(csb54#9)

												-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb55#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

												:apply(csb55#9)

													-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb56#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

													:apply(csb56#9)

														-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb57#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb57#9)

															-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb58#9 = :ctf [P#Prin  .]

															:apply(csb58#9)

																-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1-1-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb59#9 = :ctf [P#Prin  .]

															:apply(csb59#9)

																-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb60#9 = :ctf [P#Prin  .]

														:apply(csb60#9)

															-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb61#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb61#9)

														-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb62#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb62#9)

															-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb63#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb63#9)

															-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1-2-2-1 Success by reduction
															:apply (rd)

												-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb64#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

												:apply(csb64#9)

													-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb65#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

													:apply(csb65#9)

														-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb66#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb66#9)

															-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb67#9 = :ctf [P#Prin  .]

															:apply(csb67#9)

																-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-1-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb68#9 = :ctf [P#Prin  .]

															:apply(csb68#9)

																-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb69#9 = :ctf [P#Prin  .]

														:apply(csb69#9)

															-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb70#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

													:apply(csb70#9)

														-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb71#9 = :ctf [nonce2(c@Cipher2)  .]

														:apply(csb71#9)

															-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb72#9 = :ctf {eq P#CS9-1-2-1-1-1-1-1-1-2-1-1-2-2-1.Prin  = P#Prin .}

															:apply(csb72#9)

																-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb73#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb73#9)

																	-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-2-1-1-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

																-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb74#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb74#9)

																	-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-2-1-1-2-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

														-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-2-2 Success by reduction
														:apply (rd)

											-- Goal`9-1-2-1-1-1-1-1-1-2-1-2 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

										-- Goal`9-1-2-1-1-1-1-1-1-2-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

								-- Goal`9-1-2-1-1-1-1-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`9-1-2-1-1-1-1-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

						-- Goal`9-1-2-1-1-1-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

					-- Goal`9-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
					:def csb75#9 = :ctf {eq key(C#EVS9-1.SubCipher1)  = P#Prin .}

					:apply(csb75#9)

						-- Goal`9-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
						:def csb76#9 = :ctf {eq principal(C#EVS9-1.SubCipher1)  = sender(M#Msg) .}

						:apply(csb76#9)

							-- Goal`9-1-2-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
							:def csb77#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

							:apply(csb77#9)

								-- Goal`9-1-2-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
								:def csb78#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

								:apply(csb78#9)

									-- Goal`9-1-2-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb79#9 = :ctf [m1?(M#Msg)  .]

									:apply(csb79#9)

										-- Goal`9-1-2-1-1-2-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb80#9 = :ctf {eq enc2(sender(M#Msg), nonce(C#EVS9-1.SubCipher1), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

										:apply(csb80#9)

											-- Goal`9-1-2-1-1-2-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb81#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

											:apply(csb81#9)

												-- Goal`9-1-2-1-1-2-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb82#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

												:apply(csb82#9)

													-- Goal`9-1-2-1-1-2-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb83#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb83#9)

														-- Goal`9-1-2-1-1-2-1-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb84#9 = :ctf [P#Prin  .]

														:apply(csb84#9)

															-- Goal`9-1-2-1-1-2-1-1-1-1-1-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-2-1-1-2-1-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb85#9 = :ctf [P#Prin  .]

														:apply(csb85#9)

															-- Goal`9-1-2-1-1-2-1-1-1-1-1-1-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-2-1-1-2-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb86#9 = :ctf [P#Prin  .]

													:apply(csb86#9)

														-- Goal`9-1-2-1-1-2-1-1-1-1-1-1-1-2-1 Success by reduction
														:apply (rd)

												-- Goal`9-1-2-1-1-2-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb87#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

												:apply(csb87#9)

													-- Goal`9-1-2-1-1-2-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb88#9 = :ctf [key(c@Cipher2)  .]

													:apply(csb88#9)

														-- Goal`9-1-2-1-1-2-1-1-1-1-1-1-2-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-2-1-1-2-1-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb89#9 = :ctf [key(c@Cipher2)  .]

													:apply(csb89#9)

														-- Goal`9-1-2-1-1-2-1-1-1-1-1-1-2-2-1 Success by reduction
														:apply (rd)

											-- Goal`9-1-2-1-1-2-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb90#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

											:apply(csb90#9)

												-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb91#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

												:apply(csb91#9)

													-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb92#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb92#9)

														-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb93#9 = :ctf [P#Prin  .]

														:apply(csb93#9)

															-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb94#9 = :ctf [P#Prin  .]

														:apply(csb94#9)

															-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb95#9 = :ctf [P#Prin  .]

													:apply(csb95#9)

														-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-1-2-1 Success by reduction
														:apply (rd)

												-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb96#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

												:apply(csb96#9)

													-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb97#9 = :ctf [nonce2(c@Cipher2)  .]

													:apply(csb97#9)

														-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb98#9 = :ctf {eq P#CS9-1-2-1-1-2-1-1-1-1-1-2-2-1.Prin  = P#Prin .}

														:apply(csb98#9)

															-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb99#9 = :ctf {eq R#CS9-1-2-1-1-2-1-1-1-1-1-2-2-1.Rand  = R#Rand .}

															:apply(csb99#9)

																-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb100#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb100#9)

																	-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-2-1-1-1-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

																-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb101#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb101#9)

																	-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-2-1-1-1-2-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

															-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb102#9 = :ctf [P#Prin  .]

															:apply(csb102#9)

																-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb103#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb103#9)

																	-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-2-1-1-2-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

													-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-2-2 Success by reduction
													:apply (rd)

										-- Goal`9-1-2-1-1-2-1-1-1-1-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

									-- Goal`9-1-2-1-1-2-1-1-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`9-1-2-1-1-2-1-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`9-1-2-1-1-2-1-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

						-- Goal`9-1-2-1-1-2-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

				-- Goal`9-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
				:def csb104#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

				:apply(csb104#9)

					-- Goal`9-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
					:def csb105#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

					:apply(csb105#9)

						-- Goal`9-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
						:def csb106#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

						:apply(csb106#9)

							-- Goal`9-1-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
							:def csb107#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

							:apply(csb107#9)

								-- Goal`9-1-2-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
								:def csb108#9 = :ctf [m1?(M#Msg)  .]

								:apply(csb108#9)

									-- Goal`9-1-2-1-2-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb109#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

									:apply(csb109#9)

										-- Goal`9-1-2-1-2-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb110#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

										:apply(csb110#9)

											-- Goal`9-1-2-1-2-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb111#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

											:apply(csb111#9)

												-- Goal`9-1-2-1-2-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb112#9 = :ctf [key(C#EVS9-1.SubCipher1)  .]

												:apply(csb112#9)

													-- Goal`9-1-2-1-2-1-1-1-1-1-1-1-1-1 Success by reduction
													:apply (rd)

												-- Goal`9-1-2-1-2-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb113#9 = :ctf [key(C#EVS9-1.SubCipher1)  .]

												:apply(csb113#9)

													-- Goal`9-1-2-1-2-1-1-1-1-1-1-1-2-1 Success by reduction
													:apply (rd)

											-- Goal`9-1-2-1-2-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb114#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

											:apply(csb114#9)

												-- Goal`9-1-2-1-2-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb115#9 = :ctf [key(c@Cipher2)  .]

												:apply(csb115#9)

													-- Goal`9-1-2-1-2-1-1-1-1-1-1-2-1-1 Success by reduction
													:apply (rd)

												-- Goal`9-1-2-1-2-1-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb116#9 = :ctf [key(c@Cipher2)  .]

												:apply(csb116#9)

													-- Goal`9-1-2-1-2-1-1-1-1-1-1-2-2-1 Success by reduction
													:apply (rd)

										-- Goal`9-1-2-1-2-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb117#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

										:apply(csb117#9)

											-- Goal`9-1-2-1-2-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb118#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

											:apply(csb118#9)

												-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb119#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

												:apply(csb119#9)

													-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb120#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb120#9)

														-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb121#9 = :ctf [key(C#EVS9-1.SubCipher1)  .]

														:apply(csb121#9)

															-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb122#9 = :ctf [key(C#EVS9-1.SubCipher1)  .]

														:apply(csb122#9)

															-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb123#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

													:apply(csb123#9)

														-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb124#9 = :ctf [key(C#EVS9-1.SubCipher1)  .]

														:apply(csb124#9)

															-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-1-2-2 Success by reduction
														:apply (rd)

												-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb125#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

												:apply(csb125#9)

													-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb126#9 = :ctf [key(C#EVS9-1.SubCipher1)  .]

													:apply(csb126#9)

														-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-2-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-2-2 Success by reduction
													:apply (rd)

											-- Goal`9-1-2-1-2-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb127#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

											:apply(csb127#9)

												-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb128#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

												:apply(csb128#9)

													-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb129#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb129#9)

														-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb130#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb130#9)

															-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb131#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb131#9)

															-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb132#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

													:apply(csb132#9)

														-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb133#9 = :ctf [nonce2(c@Cipher2)  .]

														:apply(csb133#9)

															-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb134#9 = :ctf {eq P#CS9-1-2-1-2-1-1-1-1-1-2-2-1-2-1.Prin  = P#Prin .}

															:apply(csb134#9)

																-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb135#9 = :ctf [sender(M#Msg)  .]

																:apply(csb135#9)

																	-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb136#9 = :ctf [sender(M#Msg)  .]

																:apply(csb136#9)

																	-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1-2-1-1-2-1 Success by reduction
																	:apply (rd)

														-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1-2-2 Success by reduction
														:apply (rd)

												-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb137#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

												:apply(csb137#9)

													-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb138#9 = :ctf [nonce2(c@Cipher2)  .]

													:apply(csb138#9)

														-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb139#9 = :ctf {eq P#CS9-1-2-1-2-1-1-1-1-1-2-2-2-1.Prin  = P#Prin .}

														:apply(csb139#9)

															-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb140#9 = :ctf {eq R#CS9-1-2-1-2-1-1-1-1-1-2-2-2-1.Rand  = R#Rand .}

															:apply(csb140#9)

																-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb141#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb141#9)

																	-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-2-1-1-1-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

																-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb142#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb142#9)

																	-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-2-1-1-1-2-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

															-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb143#9 = :ctf [cipher1(M#Msg)  .]

															:apply(csb143#9)

																-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb144#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb144#9)

																	-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-2-1-1-2-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

													-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-2-2 Success by reduction
													:apply (rd)

									-- Goal`9-1-2-1-2-1-1-1-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`9-1-2-1-2-1-1-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`9-1-2-1-2-1-1-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

						-- Goal`9-1-2-1-2-1-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

					-- Goal`9-1-2-1-2-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

			-- Goal`9-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
			:def csb145#9 = :ctf {eq EVS9-1-2.SubRand  = R#Rand .}

			:apply(csb145#9)

				-- Goal`9-1-2-2-1 Success by implication and reduction.
				:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

				:apply (rd)

				-- Goal`9-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
				:def csb146#9 = :ctf {eq cipher1(M#Msg)  = C#EVS9-1.SubCipher1 .}

				:apply(csb146#9)

					-- Goal`9-1-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
					:def csb147#9 = :ctf {eq creator(M#Msg)  = P#EVS9-1.SubPrin .}

					:apply(csb147#9)

						-- Goal`9-1-2-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
						:def csb148#9 = :ctf {eq key(C#EVS9-1.SubCipher1)  = P#Prin .}

						:apply(csb148#9)

							-- Goal`9-1-2-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
							:def csb149#9 = :ctf {eq principal(C#EVS9-1.SubCipher1)  = sender(M#Msg) .}

							:apply(csb149#9)

								-- Goal`9-1-2-2-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
								:def csb150#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

								:apply(csb150#9)

									-- Goal`9-1-2-2-2-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb151#9 = :ctf {eq P#Prin  = P1#EVS9-1.SubPrin .}

									:apply(csb151#9)

										-- Goal`9-1-2-2-2-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb152#9 = :ctf {eq sender(M#Msg)  = P0#EVS9-1.SubPrin .}

										:apply(csb152#9)

											-- Goal`9-1-2-2-2-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb153#9 = :ctf [R#Rand \in U0#EVS9-1-2.URand  .]

											:apply(csb153#9)

												-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-1 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

												-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb154#9 = :ctf [m1?(M#Msg)  .]

												:apply(csb154#9)

													-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb155#9 = :ctf {eq enc2(P0#EVS9-1.SubPrin, nonce(C#EVS9-1.SubCipher1), n(P1#EVS9-1.SubPrin, P0#EVS9-1.SubPrin, R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

													:apply(csb155#9)

														-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb156#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

														:apply(csb156#9)

															-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb157#9 = :ctf {eq enc2(P0#EVS9-1.SubPrin, nonce2(c@Cipher2), n(P1#EVS9-1.SubPrin, P0#EVS9-1.SubPrin, R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

															:apply(csb157#9)

																-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb158#9 = :ctf [P1#EVS9-1.SubPrin  .]

																:apply(csb158#9)

																	-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb159#9 = :ctf [P0#EVS9-1.SubPrin  .]

																:apply(csb159#9)

																	-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb160#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb160#9)

																-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb161#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb161#9)

																	-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb162#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb162#9)

																	-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-1-2-2-1 Success by reduction
																	:apply (rd)

														-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb163#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

														:apply(csb163#9)

															-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb164#9 = :ctf {eq enc2(P0#EVS9-1.SubPrin, nonce2(c@Cipher2), n(P1#EVS9-1.SubPrin, P0#EVS9-1.SubPrin, R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

															:apply(csb164#9)

																-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb165#9 = :ctf [P1#EVS9-1.SubPrin  .]

																:apply(csb165#9)

																	-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb166#9 = :ctf [P0#EVS9-1.SubPrin  .]

																:apply(csb166#9)

																	-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb167#9 = :ctf [P0#EVS9-1.SubPrin  .]

															:apply(csb167#9)

																-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb168#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb168#9)

																	-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-2-2-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

													-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-2 Success by implication and reduction.
													:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

													:apply (rd)

											-- Goal`9-1-2-2-2-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb169#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

											:apply(csb169#9)

												-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb170#9 = :ctf [R#Rand \in U0#EVS9-1-2.URand  .]

												:apply(csb170#9)

													-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-1 Success by implication and reduction.
													:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

													:apply (rd)

													-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb171#9 = :ctf [m1?(M#Msg)  .]

													:apply(csb171#9)

														-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb172#9 = :ctf {eq enc2(sender(M#Msg), nonce(C#EVS9-1.SubCipher1), n(P1#EVS9-1.SubPrin, sender(M#Msg), R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

														:apply(csb172#9)

															-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb173#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

															:apply(csb173#9)

																-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb174#9 = :ctf [P1#EVS9-1.SubPrin  .]

																:apply(csb174#9)

																	-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb175#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb175#9)

																	-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb176#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

															:apply(csb176#9)

																-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb177#9 = :ctf [P1#EVS9-1.SubPrin  .]

																:apply(csb177#9)

																	-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb178#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb178#9)

																	-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-2-1-2-2-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

														-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-2-2 Success by implication and reduction.
														:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

														:apply (rd)

												-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-2 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

										-- Goal`9-1-2-2-2-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb179#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

										:apply(csb179#9)

											-- Goal`9-1-2-2-2-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb180#9 = :ctf [R#Rand \in U0#EVS9-1-2.URand  .]

											:apply(csb180#9)

												-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-1 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

												-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb181#9 = :ctf [m1?(M#Msg)  .]

												:apply(csb181#9)

													-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb182#9 = :ctf {eq enc2(sender(M#Msg), nonce(C#EVS9-1.SubCipher1), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

													:apply(csb182#9)

														-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb183#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

														:apply(csb183#9)

															-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb184#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

															:apply(csb184#9)

																-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb185#9 = :ctf [P#Prin  .]

																:apply(csb185#9)

																	-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb186#9 = :ctf [P#Prin  .]

																:apply(csb186#9)

																	-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb187#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb187#9)

																-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb188#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb188#9)

																	-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb189#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb189#9)

																	-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-1-2-2-1 Success by reduction
																	:apply (rd)

														-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb190#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

														:apply(csb190#9)

															-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb191#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

															:apply(csb191#9)

																-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb192#9 = :ctf [P#Prin  .]

																:apply(csb192#9)

																	-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb193#9 = :ctf [P#Prin  .]

																:apply(csb193#9)

																	-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb194#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb194#9)

																-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb195#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb195#9)

																	-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-2-2-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

																-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-2-2-2 Success by reduction
																:apply (rd)

													-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-2 Success by implication and reduction.
													:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

													:apply (rd)

											-- Goal`9-1-2-2-2-1-1-1-1-1-2-2 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

									-- Goal`9-1-2-2-2-1-1-1-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`9-1-2-2-2-1-1-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`9-1-2-2-2-1-1-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

						-- Goal`9-1-2-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
						:def csb196#9 = :ctf {eq key(C#EVS9-1.SubCipher1)  = P#Prin .}

						:apply(csb196#9)

							-- Goal`9-1-2-2-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
							:def csb197#9 = :ctf {eq principal(C#EVS9-1.SubCipher1)  = sender(M#Msg) .}

							:apply(csb197#9)

								-- Goal`9-1-2-2-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
								:def csb198#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

								:apply(csb198#9)

									-- Goal`9-1-2-2-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb199#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

									:apply(csb199#9)

										-- Goal`9-1-2-2-2-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb200#9 = :ctf [R#Rand \in U0#EVS9-1-2.URand  .]

										:apply(csb200#9)

											-- Goal`9-1-2-2-2-1-2-1-1-1-1-1 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

											-- Goal`9-1-2-2-2-1-2-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb201#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb201#9)

												-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb202#9 = :ctf {eq enc2(sender(M#Msg), nonce(C#EVS9-1.SubCipher1), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

												:apply(csb202#9)

													-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb203#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

													:apply(csb203#9)

														-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb204#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

														:apply(csb204#9)

															-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb205#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb205#9)

																-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb206#9 = :ctf [P#Prin  .]

																:apply(csb206#9)

																	-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-1-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb207#9 = :ctf [P#Prin  .]

																:apply(csb207#9)

																	-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-1-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb208#9 = :ctf [P#Prin  .]

															:apply(csb208#9)

																-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb209#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb209#9)

															-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb210#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb210#9)

																-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-1-2-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb211#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb211#9)

																-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-1-2-2-1 Success by reduction
																:apply (rd)

													-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb212#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

													:apply(csb212#9)

														-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb213#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

														:apply(csb213#9)

															-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb214#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb214#9)

																-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb215#9 = :ctf [P#Prin  .]

																:apply(csb215#9)

																	-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb216#9 = :ctf [P#Prin  .]

																:apply(csb216#9)

																	-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb217#9 = :ctf [P#Prin  .]

															:apply(csb217#9)

																-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-2-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb218#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

														:apply(csb218#9)

															-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb219#9 = :ctf [nonce2(c@Cipher2)  .]

															:apply(csb219#9)

																-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb220#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb220#9)

																	-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-2-2-1-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

															-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-2-2-2 Success by reduction
															:apply (rd)

												-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-2 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

										-- Goal`9-1-2-2-2-1-2-1-1-1-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

									-- Goal`9-1-2-2-2-1-2-1-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`9-1-2-2-2-1-2-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`9-1-2-2-2-1-2-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

					-- Goal`9-1-2-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
					:def csb221#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

					:apply(csb221#9)

						-- Goal`9-1-2-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
						:def csb222#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

						:apply(csb222#9)

							-- Goal`9-1-2-2-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
							:def csb223#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

							:apply(csb223#9)

								-- Goal`9-1-2-2-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
								:def csb224#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

								:apply(csb224#9)

									-- Goal`9-1-2-2-2-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb225#9 = :ctf [R#Rand \in U0#EVS9-1-2.URand  .]

									:apply(csb225#9)

										-- Goal`9-1-2-2-2-2-1-1-1-1-1 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

										-- Goal`9-1-2-2-2-2-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb226#9 = :ctf [m1?(M#Msg)  .]

										:apply(csb226#9)

											-- Goal`9-1-2-2-2-2-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb227#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

											:apply(csb227#9)

												-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb228#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

												:apply(csb228#9)

													-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb229#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb229#9)

														-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb230#9 = :ctf [key(C#EVS9-1.SubCipher1)  .]

														:apply(csb230#9)

															-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb231#9 = :ctf [key(C#EVS9-1.SubCipher1)  .]

														:apply(csb231#9)

															-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb232#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb232#9)

														-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb233#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb233#9)

															-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb234#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb234#9)

															-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-1-2-2-1 Success by reduction
															:apply (rd)

												-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb235#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce2(c@Cipher2) .}

												:apply(csb235#9)

													-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb236#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

													:apply(csb236#9)

														-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb237#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

														:apply(csb237#9)

															-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb238#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb238#9)

																-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb239#9 = :ctf [key(C#EVS9-1.SubCipher1)  .]

																:apply(csb239#9)

																	-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb240#9 = :ctf [key(C#EVS9-1.SubCipher1)  .]

																:apply(csb240#9)

																	-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb241#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb241#9)

																-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb242#9 = :ctf [key(C#EVS9-1.SubCipher1)  .]

																:apply(csb242#9)

																	-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1-1-2-2 Success by reduction
																:apply (rd)

														-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb243#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

														:apply(csb243#9)

															-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb244#9 = :ctf [key(C#EVS9-1.SubCipher1)  .]

															:apply(csb244#9)

																-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1-2-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1-2-2 Success by reduction
															:apply (rd)

													-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb245#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

													:apply(csb245#9)

														-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb246#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

														:apply(csb246#9)

															-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb247#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb247#9)

																-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb248#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb248#9)

																	-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb249#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb249#9)

																	-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb250#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb250#9)

																-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb251#9 = :ctf [sender(M#Msg)  .]

																:apply(csb251#9)

																	-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-1-2-2 Success by reduction
																:apply (rd)

														-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb252#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

														:apply(csb252#9)

															-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb253#9 = :ctf [nonce2(c@Cipher2)  .]

															:apply(csb253#9)

																-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb254#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb254#9)

																	-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-2-1-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

															-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-2-2 Success by reduction
															:apply (rd)

											-- Goal`9-1-2-2-2-2-1-1-1-1-2-2 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

									-- Goal`9-1-2-2-2-2-1-1-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`9-1-2-2-2-2-1-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`9-1-2-2-2-2-1-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

						-- Goal`9-1-2-2-2-2-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

		-- Goal`9-1-3  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
	:def csb255#9 = :cvs [ur(S#Sys)  .]

	:apply(csb255#9)

			-- Goal`9-1-3-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
			:def csb256#9 = :ctf {eq cipher2(M#Msg)  = C#EVS9-1.SubCipher2 .}

			:apply(csb256#9)

				-- Goal`9-1-3-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
				:def csb257#9 = :ctf {eq creator(M#Msg)  = P#EVS9-1.SubPrin .}

				:apply(csb257#9)

					-- Goal`9-1-3-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
					:def csb258#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

					:apply(csb258#9)

						-- Goal`9-1-3-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
						:def csb259#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

						:apply(csb259#9)

							-- Goal`9-1-3-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
							:def csb260#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

							:apply(csb260#9)

								-- Goal`9-1-3-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
								:def csb261#9 = :ctf {eq P#Prin  = P1#EVS9-1.SubPrin .}

								:apply(csb261#9)

									-- Goal`9-1-3-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb262#9 = :ctf {eq sender(M#Msg)  = P0#EVS9-1.SubPrin .}

									:apply(csb262#9)

										-- Goal`9-1-3-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb263#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

										:apply(csb263#9)

											-- Goal`9-1-3-1-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb264#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb264#9)

												-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb265#9 = :ctf {eq C#EVS9-1.SubCipher2  = c@Cipher2 .}

												:apply(csb265#9)

													-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb266#9 = :ctf {eq enc2(P0#EVS9-1.SubPrin, nonce(cipher1(M#Msg)), n(P1#EVS9-1.SubPrin, P0#EVS9-1.SubPrin, R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

													:apply(csb266#9)

														-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb267#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb267#9)

															-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb268#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb268#9)

																-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb269#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb269#9)

																-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb270#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

														:apply(csb270#9)

															-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb271#9 = :ctf {eq enc2(P0#EVS9-1.SubPrin, nonce2(c@Cipher2), n(P1#EVS9-1.SubPrin, P0#EVS9-1.SubPrin, R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

															:apply(csb271#9)

																-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb272#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb272#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb273#9 = :ctf [P0#EVS9-1.SubPrin  .]

																:apply(csb273#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb274#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb274#9)

																-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb275#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb275#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-2-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb276#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb276#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-2-2-2-1 Success by reduction
																	:apply (rd)

													-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb277#9 = :ctf {eq enc2(P0#EVS9-1.SubPrin, nonce(cipher1(M#Msg)), n(P1#EVS9-1.SubPrin, P0#EVS9-1.SubPrin, R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

													:apply(csb277#9)

														-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb278#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

														:apply(csb278#9)

															-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb279#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb279#9)

																-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb280#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb280#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb281#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb281#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb282#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb282#9)

																-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb283#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb283#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb284#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb284#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-1-2-2-1 Success by reduction
																	:apply (rd)

														-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb285#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

														:apply(csb285#9)

															-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb286#9 = :ctf {eq enc2(P0#EVS9-1.SubPrin, nonce2(c@Cipher2), n(P1#EVS9-1.SubPrin, P0#EVS9-1.SubPrin, R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

															:apply(csb286#9)

																-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb287#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb287#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb288#9 = :ctf [P0#EVS9-1.SubPrin  .]

																:apply(csb288#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb289#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb289#9)

																-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb290#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb290#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-2-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb291#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb291#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-2-2-2-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

												-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-2 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

											-- Goal`9-1-3-1-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb292#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb292#9)

												-- Goal`9-1-3-1-1-1-1-1-1-1-1-2-1 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

												-- Goal`9-1-3-1-1-1-1-1-1-1-1-2-2 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

										-- Goal`9-1-3-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb293#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

										:apply(csb293#9)

											-- Goal`9-1-3-1-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb294#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb294#9)

												-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb295#9 = :ctf {eq C#EVS9-1.SubCipher2  = c@Cipher2 .}

												:apply(csb295#9)

													-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb296#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P1#EVS9-1.SubPrin, sender(M#Msg), R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

													:apply(csb296#9)

														-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb297#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb297#9)

															-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb298#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb298#9)

																-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb299#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb299#9)

																-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb300#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

														:apply(csb300#9)

															-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb301#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P1#EVS9-1.SubPrin, sender(M#Msg), R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

															:apply(csb301#9)

																-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb302#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb302#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb303#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb303#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb304#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb304#9)

																-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb305#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb305#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-2-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb306#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb306#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-2-2-2-1 Success by reduction
																	:apply (rd)

													-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb307#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P1#EVS9-1.SubPrin, sender(M#Msg), R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

													:apply(csb307#9)

														-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb308#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

														:apply(csb308#9)

															-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb309#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb309#9)

																-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb310#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb310#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb311#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb311#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb312#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb312#9)

																-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb313#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb313#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb314#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb314#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-1-2-2-1 Success by reduction
																	:apply (rd)

														-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb315#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

														:apply(csb315#9)

															-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb316#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P1#EVS9-1.SubPrin, sender(M#Msg), R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

															:apply(csb316#9)

																-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb317#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb317#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb318#9 = :ctf [sender(M#Msg)  .]

																:apply(csb318#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb319#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb319#9)

																-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb320#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb320#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-2-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb321#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb321#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-2-2-2-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

												-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-2 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

											-- Goal`9-1-3-1-1-1-1-1-1-1-2-2 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

									-- Goal`9-1-3-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb322#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

									:apply(csb322#9)

										-- Goal`9-1-3-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb323#9 = :ctf [m1?(M#Msg)  .]

										:apply(csb323#9)

											-- Goal`9-1-3-1-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb324#9 = :ctf {eq C#EVS9-1.SubCipher2  = c@Cipher2 .}

											:apply(csb324#9)

												-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb325#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

												:apply(csb325#9)

													-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb326#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb326#9)

														-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb327#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb327#9)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb328#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb328#9)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb329#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

													:apply(csb329#9)

														-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb330#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

														:apply(csb330#9)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb331#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb331#9)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb332#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb332#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb333#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb333#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb334#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb334#9)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb335#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb335#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb336#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb336#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-1-2-2-1 Success by reduction
																	:apply (rd)

														-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb337#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb337#9)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb338#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb338#9)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-2-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb339#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb339#9)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-2-2-1 Success by reduction
																:apply (rd)

												-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb340#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

												:apply(csb340#9)

													-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb341#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

													:apply(csb341#9)

														-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb342#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb342#9)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb343#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb343#9)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb344#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb344#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb345#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb345#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb346#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb346#9)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb347#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb347#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb348#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb348#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-1-2-2-1 Success by reduction
																	:apply (rd)

														-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb349#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb349#9)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb350#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb350#9)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb351#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb351#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb352#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb352#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb353#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb353#9)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb354#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb354#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-2-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb355#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb355#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-2-2-2-1 Success by reduction
																	:apply (rd)

													-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb356#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

													:apply(csb356#9)

														-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb357#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

														:apply(csb357#9)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb358#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb358#9)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb359#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb359#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb360#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb360#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb361#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb361#9)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb362#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb362#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb363#9 = :ctf [sender(M#Msg)  .]

																:apply(csb363#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-1-2-2-1 Success by reduction
																	:apply (rd)

														-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb364#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

														:apply(csb364#9)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb365#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb365#9)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb366#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb366#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb367#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb367#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb368#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb368#9)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb369#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb369#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-2-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb370#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb370#9)

																	-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-2-2-2-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

											-- Goal`9-1-3-1-1-1-1-1-1-2-1-2 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

										-- Goal`9-1-3-1-1-1-1-1-1-2-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

								-- Goal`9-1-3-1-1-1-1-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`9-1-3-1-1-1-1-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

						-- Goal`9-1-3-1-1-1-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

					-- Goal`9-1-3-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
					:def csb371#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

					:apply(csb371#9)

						-- Goal`9-1-3-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
						:def csb372#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

						:apply(csb372#9)

							-- Goal`9-1-3-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
							:def csb373#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

							:apply(csb373#9)

								-- Goal`9-1-3-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
								:def csb374#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

								:apply(csb374#9)

									-- Goal`9-1-3-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb375#9 = :ctf [m1?(M#Msg)  .]

									:apply(csb375#9)

										-- Goal`9-1-3-1-1-2-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb376#9 = :ctf {eq C#EVS9-1.SubCipher2  = c@Cipher2 .}

										:apply(csb376#9)

											-- Goal`9-1-3-1-1-2-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb377#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

											:apply(csb377#9)

												-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb378#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

												:apply(csb378#9)

													-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb379#9 = :ctf [key(c@Cipher2)  .]

													:apply(csb379#9)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb380#9 = :ctf [key(c@Cipher2)  .]

													:apply(csb380#9)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-1-2-1 Success by reduction
														:apply (rd)

												-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb381#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

												:apply(csb381#9)

													-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb382#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

													:apply(csb382#9)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb383#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb383#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb384#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb384#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-1-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb385#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb385#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb386#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb386#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb387#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb387#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-1-2-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb388#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb388#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-1-2-2-1 Success by reduction
																:apply (rd)

													-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb389#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb389#9)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb390#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb390#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb391#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb391#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-2-2-1 Success by reduction
															:apply (rd)

											-- Goal`9-1-3-1-1-2-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb392#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

											:apply(csb392#9)

												-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb393#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

												:apply(csb393#9)

													-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb394#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb394#9)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb395#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

														:apply(csb395#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb396#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

															:apply(csb396#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-1-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb397#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

															:apply(csb397#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb398#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

														:apply(csb398#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb399#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

															:apply(csb399#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-1-2-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb400#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

															:apply(csb400#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-1-2-2-1 Success by reduction
																:apply (rd)

													-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb401#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb401#9)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb402#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

														:apply(csb402#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb403#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

															:apply(csb403#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-2-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb404#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb404#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-2-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb405#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

														:apply(csb405#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb406#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

															:apply(csb406#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-2-2-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb407#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb407#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-2-2-2-1 Success by reduction
																:apply (rd)

												-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb408#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

												:apply(csb408#9)

													-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb409#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

													:apply(csb409#9)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb410#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

														:apply(csb410#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb411#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb411#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb412#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb412#9)

																	-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb413#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb413#9)

																	-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb414#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb414#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb415#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb415#9)

																	-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb416#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb416#9)

																	-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-1-2-2-1 Success by reduction
																	:apply (rd)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb417#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

														:apply(csb417#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb418#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb418#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb419#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb419#9)

																	-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb420#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb420#9)

																	-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb421#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb421#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb422#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb422#9)

																	-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-2-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb423#9 = :ctf [sender(M#Msg)  .]

																:apply(csb423#9)

																	-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-2-2-2-1 Success by reduction
																	:apply (rd)

													-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb424#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

													:apply(csb424#9)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb425#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

														:apply(csb425#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb426#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb426#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb427#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb427#9)

																	-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-1-1-2 Success by reduction
																:apply (rd)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb428#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb428#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb429#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb429#9)

																	-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-1-2-2 Success by reduction
																:apply (rd)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb430#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

														:apply(csb430#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb431#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb431#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb432#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb432#9)

																	-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-2-1-2 Success by reduction
																:apply (rd)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb433#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb433#9)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb434#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb434#9)

																	-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-2-2-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

																-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-2-2-2 Success by reduction
																:apply (rd)

										-- Goal`9-1-3-1-1-2-1-1-1-1-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

									-- Goal`9-1-3-1-1-2-1-1-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`9-1-3-1-1-2-1-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`9-1-3-1-1-2-1-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

						-- Goal`9-1-3-1-1-2-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

				-- Goal`9-1-3-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
				:def csb435#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

				:apply(csb435#9)

					-- Goal`9-1-3-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
					:def csb436#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

					:apply(csb436#9)

						-- Goal`9-1-3-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
						:def csb437#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

						:apply(csb437#9)

							-- Goal`9-1-3-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
							:def csb438#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

							:apply(csb438#9)

								-- Goal`9-1-3-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
								:def csb439#9 = :ctf [m1?(M#Msg)  .]

								:apply(csb439#9)

									-- Goal`9-1-3-1-2-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb440#9 = :ctf {eq C#EVS9-1.SubCipher2  = c@Cipher2 .}

									:apply(csb440#9)

										-- Goal`9-1-3-1-2-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb441#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

										:apply(csb441#9)

											-- Goal`9-1-3-1-2-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb442#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

											:apply(csb442#9)

												-- Goal`9-1-3-1-2-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb443#9 = :ctf [key(c@Cipher2)  .]

												:apply(csb443#9)

													-- Goal`9-1-3-1-2-1-1-1-1-1-1-1-1-1 Success by reduction
													:apply (rd)

												-- Goal`9-1-3-1-2-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb444#9 = :ctf [key(c@Cipher2)  .]

												:apply(csb444#9)

													-- Goal`9-1-3-1-2-1-1-1-1-1-1-1-2-1 Success by reduction
													:apply (rd)

											-- Goal`9-1-3-1-2-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb445#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

											:apply(csb445#9)

												-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb446#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

												:apply(csb446#9)

													-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb447#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb447#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb448#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb448#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb449#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb449#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb450#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb450#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb451#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb451#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb452#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb452#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1-2-2-1 Success by reduction
															:apply (rd)

												-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb453#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

												:apply(csb453#9)

													-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb454#9 = :ctf [key(c@Cipher2)  .]

													:apply(csb454#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-2-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb455#9 = :ctf [key(c@Cipher2)  .]

													:apply(csb455#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-2-2-1 Success by reduction
														:apply (rd)

										-- Goal`9-1-3-1-2-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb456#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

										:apply(csb456#9)

											-- Goal`9-1-3-1-2-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb457#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

											:apply(csb457#9)

												-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb458#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

												:apply(csb458#9)

													-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb459#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

													:apply(csb459#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb460#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb460#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb461#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb461#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb462#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

													:apply(csb462#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb463#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb463#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb464#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb464#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1-2-2-1 Success by reduction
															:apply (rd)

												-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb465#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

												:apply(csb465#9)

													-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb466#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

													:apply(csb466#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb467#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb467#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb468#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb468#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb469#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

													:apply(csb469#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb470#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb470#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb471#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb471#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-2-2-1 Success by reduction
															:apply (rd)

											-- Goal`9-1-3-1-2-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb472#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

											:apply(csb472#9)

												-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb473#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

												:apply(csb473#9)

													-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb474#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

													:apply(csb474#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb475#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb475#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb476#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb476#9)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb477#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb477#9)

																	-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb478#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb478#9)

																	-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb479#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb479#9)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb480#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb480#9)

																	-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb481#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb481#9)

																	-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-1-2-2-1 Success by reduction
																	:apply (rd)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb482#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb482#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb483#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb483#9)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb484#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb484#9)

																	-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb485#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb485#9)

																	-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb486#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb486#9)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb487#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb487#9)

																	-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-2-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb488#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb488#9)

																	-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-2-2-2-1 Success by reduction
																	:apply (rd)

													-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb489#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

													:apply(csb489#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb490#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

														:apply(csb490#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb491#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb491#9)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb492#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb492#9)

																	-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-1-1-2 Success by reduction
																:apply (rd)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb493#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb493#9)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb494#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb494#9)

																	-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-1-2-2 Success by reduction
																:apply (rd)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb495#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

														:apply(csb495#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb496#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb496#9)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb497#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb497#9)

																	-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-2-1-2 Success by reduction
																:apply (rd)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb498#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb498#9)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb499#9 = :ctf [sender(M#Msg)  .]

																:apply(csb499#9)

																	-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-2-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-2-2-2 Success by reduction
																:apply (rd)

												-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb500#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

												:apply(csb500#9)

													-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb501#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

													:apply(csb501#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb502#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

														:apply(csb502#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb503#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

															:apply(csb503#9)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-1-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-1-1-2 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb504#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

														:apply(csb504#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb505#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

															:apply(csb505#9)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-1-2-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-1-2-2 Success by reduction
															:apply (rd)

													-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb506#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

													:apply(csb506#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb507#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

														:apply(csb507#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb508#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

															:apply(csb508#9)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-2-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-2-1-2 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb509#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

														:apply(csb509#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb510#9 = :ctf [nonce2(c@Cipher2)  .]

															:apply(csb510#9)

																-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb511#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb511#9)

																	-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-2-2-1-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-2-2-2 Success by reduction
															:apply (rd)

									-- Goal`9-1-3-1-2-1-1-1-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`9-1-3-1-2-1-1-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`9-1-3-1-2-1-1-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

						-- Goal`9-1-3-1-2-1-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

					-- Goal`9-1-3-1-2-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

			-- Goal`9-1-3-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
			:def csb512#9 = :ctf {eq EVS9-1-3.SubRand  = R#Rand .}

			:apply(csb512#9)

				-- Goal`9-1-3-2-1 Success by implication and reduction.
				:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

				:apply (rd)

				-- Goal`9-1-3-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
				:def csb513#9 = :ctf {eq cipher2(M#Msg)  = C#EVS9-1.SubCipher2 .}

				:apply(csb513#9)

					-- Goal`9-1-3-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
					:def csb514#9 = :ctf {eq creator(M#Msg)  = P#EVS9-1.SubPrin .}

					:apply(csb514#9)

						-- Goal`9-1-3-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
						:def csb515#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

						:apply(csb515#9)

							-- Goal`9-1-3-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
							:def csb516#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

							:apply(csb516#9)

								-- Goal`9-1-3-2-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
								:def csb517#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

								:apply(csb517#9)

									-- Goal`9-1-3-2-2-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb518#9 = :ctf {eq P#Prin  = P1#EVS9-1.SubPrin .}

									:apply(csb518#9)

										-- Goal`9-1-3-2-2-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb519#9 = :ctf {eq sender(M#Msg)  = P0#EVS9-1.SubPrin .}

										:apply(csb519#9)

											-- Goal`9-1-3-2-2-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb520#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

											:apply(csb520#9)

												-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb521#9 = :ctf [R#Rand \in U0#EVS9-1-3.URand  .]

												:apply(csb521#9)

													-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-1 Success by implication and reduction.
													:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

													:apply (rd)

													-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb522#9 = :ctf [m1?(M#Msg)  .]

													:apply(csb522#9)

														-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb523#9 = :ctf {eq C#EVS9-1.SubCipher2  = c@Cipher2 .}

														:apply(csb523#9)

															-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb524#9 = :ctf {eq enc2(P0#EVS9-1.SubPrin, nonce(cipher1(M#Msg)), n(P1#EVS9-1.SubPrin, P0#EVS9-1.SubPrin, R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

															:apply(csb524#9)

																-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb525#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb525#9)

																	-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb526#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb526#9)

																	-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb527#9 = :ctf {eq enc2(P0#EVS9-1.SubPrin, nonce(cipher1(M#Msg)), n(P1#EVS9-1.SubPrin, P0#EVS9-1.SubPrin, R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

															:apply(csb527#9)

																-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb528#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb528#9)

																	-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb529#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb529#9)

																	-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-2-1-2-2-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

														-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-2-2 Success by implication and reduction.
														:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

														:apply (rd)

												-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb530#9 = :ctf [R#Rand \in U0#EVS9-1-3.URand  .]

												:apply(csb530#9)

													-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-2-1 Success by implication and reduction.
													:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

													:apply (rd)

													-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb531#9 = :ctf [m1?(M#Msg)  .]

													:apply(csb531#9)

														-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-2-2-1 Success by implication and reduction.
														:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

														:apply (rd)

														-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-2-2-2 Success by implication and reduction.
														:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

														:apply (rd)

											-- Goal`9-1-3-2-2-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb532#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

											:apply(csb532#9)

												-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb533#9 = :ctf [R#Rand \in U0#EVS9-1-3.URand  .]

												:apply(csb533#9)

													-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-1 Success by implication and reduction.
													:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

													:apply (rd)

													-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb534#9 = :ctf [m1?(M#Msg)  .]

													:apply(csb534#9)

														-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb535#9 = :ctf {eq C#EVS9-1.SubCipher2  = c@Cipher2 .}

														:apply(csb535#9)

															-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb536#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P1#EVS9-1.SubPrin, sender(M#Msg), R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

															:apply(csb536#9)

																-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb537#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb537#9)

																	-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb538#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb538#9)

																	-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb539#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P1#EVS9-1.SubPrin, sender(M#Msg), R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

															:apply(csb539#9)

																-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb540#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb540#9)

																	-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb541#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb541#9)

																	-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-2-1-2-2-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

														-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-2-2 Success by implication and reduction.
														:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

														:apply (rd)

												-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-2 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

										-- Goal`9-1-3-2-2-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb542#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

										:apply(csb542#9)

											-- Goal`9-1-3-2-2-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb543#9 = :ctf [R#Rand \in U0#EVS9-1-3.URand  .]

											:apply(csb543#9)

												-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-1 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

												-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb544#9 = :ctf [m1?(M#Msg)  .]

												:apply(csb544#9)

													-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb545#9 = :ctf {eq C#EVS9-1.SubCipher2  = c@Cipher2 .}

													:apply(csb545#9)

														-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb546#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

														:apply(csb546#9)

															-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb547#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb547#9)

																-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb548#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb548#9)

																	-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb549#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb549#9)

																	-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb550#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

															:apply(csb550#9)

																-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb551#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb551#9)

																	-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb552#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb552#9)

																	-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-1-2-2-1 Success by reduction
																	:apply (rd)

														-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb553#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

														:apply(csb553#9)

															-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb554#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb554#9)

																-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb555#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb555#9)

																	-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb556#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb556#9)

																	-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb557#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

															:apply(csb557#9)

																-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb558#9 = :ctf [sender(M#Msg)  .]

																:apply(csb558#9)

																	-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-2-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb559#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb559#9)

																	-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-2-2-2-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

													-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-2 Success by implication and reduction.
													:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

													:apply (rd)

											-- Goal`9-1-3-2-2-1-1-1-1-1-2-2 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

									-- Goal`9-1-3-2-2-1-1-1-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`9-1-3-2-2-1-1-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`9-1-3-2-2-1-1-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

						-- Goal`9-1-3-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
						:def csb560#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

						:apply(csb560#9)

							-- Goal`9-1-3-2-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
							:def csb561#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

							:apply(csb561#9)

								-- Goal`9-1-3-2-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
								:def csb562#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

								:apply(csb562#9)

									-- Goal`9-1-3-2-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb563#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

									:apply(csb563#9)

										-- Goal`9-1-3-2-2-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb564#9 = :ctf [R#Rand \in U0#EVS9-1-3.URand  .]

										:apply(csb564#9)

											-- Goal`9-1-3-2-2-1-2-1-1-1-1-1 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

											-- Goal`9-1-3-2-2-1-2-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb565#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb565#9)

												-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb566#9 = :ctf {eq C#EVS9-1.SubCipher2  = c@Cipher2 .}

												:apply(csb566#9)

													-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb567#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

													:apply(csb567#9)

														-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb568#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb568#9)

															-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb569#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb569#9)

																-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb570#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb570#9)

																-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb571#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

														:apply(csb571#9)

															-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb572#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

															:apply(csb572#9)

																-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb573#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb573#9)

																	-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb574#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb574#9)

																	-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb575#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb575#9)

																-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb576#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb576#9)

																	-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-2-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb577#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb577#9)

																	-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-2-2-2-1 Success by reduction
																	:apply (rd)

													-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb578#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

													:apply(csb578#9)

														-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb579#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

														:apply(csb579#9)

															-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb580#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb580#9)

																-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb581#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb581#9)

																	-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb582#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb582#9)

																	-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb583#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb583#9)

																-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb584#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb584#9)

																	-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb585#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb585#9)

																	-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-1-2-2-1 Success by reduction
																	:apply (rd)

														-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb586#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

														:apply(csb586#9)

															-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb587#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

															:apply(csb587#9)

																-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb588#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb588#9)

																	-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb589#9 = :ctf [sender(M#Msg)  .]

																:apply(csb589#9)

																	-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb590#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb590#9)

																-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb591#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb591#9)

																	-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-2-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb592#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb592#9)

																	-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-2-2-2-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

												-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-2 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

										-- Goal`9-1-3-2-2-1-2-1-1-1-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

									-- Goal`9-1-3-2-2-1-2-1-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`9-1-3-2-2-1-2-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`9-1-3-2-2-1-2-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

					-- Goal`9-1-3-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
					:def csb593#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

					:apply(csb593#9)

						-- Goal`9-1-3-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
						:def csb594#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

						:apply(csb594#9)

							-- Goal`9-1-3-2-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
							:def csb595#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

							:apply(csb595#9)

								-- Goal`9-1-3-2-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
								:def csb596#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

								:apply(csb596#9)

									-- Goal`9-1-3-2-2-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb597#9 = :ctf [R#Rand \in U0#EVS9-1-3.URand  .]

									:apply(csb597#9)

										-- Goal`9-1-3-2-2-2-1-1-1-1-1 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

										-- Goal`9-1-3-2-2-2-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb598#9 = :ctf [m1?(M#Msg)  .]

										:apply(csb598#9)

											-- Goal`9-1-3-2-2-2-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb599#9 = :ctf {eq C#EVS9-1.SubCipher2  = c@Cipher2 .}

											:apply(csb599#9)

												-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb600#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

												:apply(csb600#9)

													-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb601#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb601#9)

														-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb602#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb602#9)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb603#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb603#9)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb604#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

													:apply(csb604#9)

														-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb605#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

														:apply(csb605#9)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb606#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb606#9)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb607#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb607#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb608#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb608#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb609#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb609#9)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb610#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb610#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb611#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb611#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-1-2-2-1 Success by reduction
																	:apply (rd)

														-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb612#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb612#9)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb613#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb613#9)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-2-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb614#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb614#9)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-2-2-1 Success by reduction
																:apply (rd)

												-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb615#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

												:apply(csb615#9)

													-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb616#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

													:apply(csb616#9)

														-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb617#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb617#9)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb618#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb618#9)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb619#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb619#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb620#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb620#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb621#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb621#9)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb622#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb622#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb623#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb623#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-1-2-2-1 Success by reduction
																	:apply (rd)

														-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb624#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb624#9)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb625#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb625#9)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb626#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb626#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb627#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb627#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb628#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb628#9)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb629#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb629#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-2-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb630#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb630#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-2-2-2-1 Success by reduction
																	:apply (rd)

													-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb631#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

													:apply(csb631#9)

														-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb632#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

														:apply(csb632#9)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb633#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb633#9)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb634#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb634#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb635#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb635#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb636#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb636#9)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb637#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb637#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb638#9 = :ctf [sender(M#Msg)  .]

																:apply(csb638#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-1-2-2-1 Success by reduction
																	:apply (rd)

														-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb639#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

														:apply(csb639#9)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb640#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb640#9)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb641#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb641#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb642#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb642#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb643#9 = :ctf {eq nonce2(C#EVS9-1.SubCipher2)  = nonce2(c@Cipher2) .}

															:apply(csb643#9)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb644#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

																:apply(csb644#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-2-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb645#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb645#9)

																	-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-2-2-2-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

											-- Goal`9-1-3-2-2-2-1-1-1-1-2-2 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

									-- Goal`9-1-3-2-2-2-1-1-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`9-1-3-2-2-2-1-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`9-1-3-2-2-2-1-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

						-- Goal`9-1-3-2-2-2-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

		-- Goal`9-1-4  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
	:def csb646#9 = :cvs [ur(S#Sys)  .]

	:apply(csb646#9)

			-- Goal`9-1-4-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
			:def csb647#9 = :ctf {eq cipher3(M#Msg)  = C#EVS9-1.SubCipher3 .}

			:apply(csb647#9)

				-- Goal`9-1-4-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
				:def csb648#9 = :ctf {eq creator(M#Msg)  = P#EVS9-1.SubPrin .}

				:apply(csb648#9)

					-- Goal`9-1-4-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
					:def csb649#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

					:apply(csb649#9)

						-- Goal`9-1-4-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
						:def csb650#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

						:apply(csb650#9)

							-- Goal`9-1-4-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
							:def csb651#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

							:apply(csb651#9)

								-- Goal`9-1-4-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
								:def csb652#9 = :ctf {eq P#Prin  = P1#EVS9-1.SubPrin .}

								:apply(csb652#9)

									-- Goal`9-1-4-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb653#9 = :ctf {eq sender(M#Msg)  = P0#EVS9-1.SubPrin .}

									:apply(csb653#9)

										-- Goal`9-1-4-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb654#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

										:apply(csb654#9)

											-- Goal`9-1-4-1-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb655#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb655#9)

												-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb656#9 = :ctf {eq enc2(P0#EVS9-1.SubPrin, nonce(cipher1(M#Msg)), n(P1#EVS9-1.SubPrin, P0#EVS9-1.SubPrin, R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

												:apply(csb656#9)

													-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb657#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

													:apply(csb657#9)

														-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb658#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb658#9)

															-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb659#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

															:apply(csb659#9)

																-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-1-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb660#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

															:apply(csb660#9)

																-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb661#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb661#9)

															-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb662#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb662#9)

																-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-1-2-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb663#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb663#9)

																-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-1-2-2-1 Success by reduction
																:apply (rd)

													-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb664#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

													:apply(csb664#9)

														-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb665#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

														:apply(csb665#9)

															-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb666#9 = :ctf {eq enc2(P0#EVS9-1.SubPrin, nonce2(c@Cipher2), n(P1#EVS9-1.SubPrin, P0#EVS9-1.SubPrin, R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

															:apply(csb666#9)

																-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb667#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb667#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb668#9 = :ctf [P0#EVS9-1.SubPrin  .]

																:apply(csb668#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb669#9 = :ctf [P0#EVS9-1.SubPrin  .]

															:apply(csb669#9)

																-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb670#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb670#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-1-2-1-1 Success by reduction
																	:apply (rd)

														-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb671#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

														:apply(csb671#9)

															-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb672#9 = :ctf {eq enc2(P0#EVS9-1.SubPrin, nonce2(c@Cipher2), n(P1#EVS9-1.SubPrin, P0#EVS9-1.SubPrin, R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

															:apply(csb672#9)

																-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb673#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb673#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb674#9 = :ctf [P0#EVS9-1.SubPrin  .]

																:apply(csb674#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb675#9 = :ctf [P0#EVS9-1.SubPrin  .]

															:apply(csb675#9)

																-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb676#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb676#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-2-2-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

												-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-2 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

											-- Goal`9-1-4-1-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb677#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb677#9)

												-- Goal`9-1-4-1-1-1-1-1-1-1-1-2-1 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

												-- Goal`9-1-4-1-1-1-1-1-1-1-1-2-2 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

										-- Goal`9-1-4-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb678#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

										:apply(csb678#9)

											-- Goal`9-1-4-1-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb679#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb679#9)

												-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb680#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P1#EVS9-1.SubPrin, sender(M#Msg), R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

												:apply(csb680#9)

													-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb681#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

													:apply(csb681#9)

														-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb682#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb682#9)

															-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb683#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

															:apply(csb683#9)

																-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-1-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb684#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

															:apply(csb684#9)

																-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb685#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb685#9)

															-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb686#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb686#9)

																-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-1-2-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb687#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb687#9)

																-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-1-2-2-1 Success by reduction
																:apply (rd)

													-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb688#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

													:apply(csb688#9)

														-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb689#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

														:apply(csb689#9)

															-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb690#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P1#EVS9-1.SubPrin, sender(M#Msg), R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

															:apply(csb690#9)

																-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb691#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb691#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb692#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb692#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb693#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb693#9)

																-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb694#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb694#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-1-2-2 Success by reduction
																:apply (rd)

														-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb695#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

														:apply(csb695#9)

															-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb696#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P1#EVS9-1.SubPrin, sender(M#Msg), R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

															:apply(csb696#9)

																-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb697#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb697#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb698#9 = :ctf [sender(M#Msg)  .]

																:apply(csb698#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb699#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb699#9)

																-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb700#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb700#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-2-2-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

																-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-2-2-2 Success by reduction
																:apply (rd)

												-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-2 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

											-- Goal`9-1-4-1-1-1-1-1-1-1-2-2 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

									-- Goal`9-1-4-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb701#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

									:apply(csb701#9)

										-- Goal`9-1-4-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb702#9 = :ctf [m1?(M#Msg)  .]

										:apply(csb702#9)

											-- Goal`9-1-4-1-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb703#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

											:apply(csb703#9)

												-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb704#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

												:apply(csb704#9)

													-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb705#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb705#9)

														-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb706#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb706#9)

															-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb707#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb707#9)

															-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb708#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb708#9)

														-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb709#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb709#9)

															-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb710#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb710#9)

															-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1-2-2-1 Success by reduction
															:apply (rd)

												-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb711#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

												:apply(csb711#9)

													-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb712#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

													:apply(csb712#9)

														-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb713#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

														:apply(csb713#9)

															-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb714#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb714#9)

																-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb715#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb715#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb716#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb716#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb717#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb717#9)

																-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb718#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb718#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1-1-2-2 Success by reduction
																:apply (rd)

														-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb719#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

														:apply(csb719#9)

															-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb720#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

															:apply(csb720#9)

																-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1-2-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1-2-2 Success by reduction
															:apply (rd)

													-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb721#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

													:apply(csb721#9)

														-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb722#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

														:apply(csb722#9)

															-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb723#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb723#9)

																-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb724#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb724#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb725#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb725#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb726#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb726#9)

																-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb727#9 = :ctf [sender(M#Msg)  .]

																:apply(csb727#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2-1-2-2 Success by reduction
																:apply (rd)

														-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb728#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

														:apply(csb728#9)

															-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb729#9 = :ctf [nonce2(c@Cipher2)  .]

															:apply(csb729#9)

																-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb730#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb730#9)

																	-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2-2-1-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

															-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2-2-2 Success by reduction
															:apply (rd)

											-- Goal`9-1-4-1-1-1-1-1-1-2-1-2 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

										-- Goal`9-1-4-1-1-1-1-1-1-2-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

								-- Goal`9-1-4-1-1-1-1-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`9-1-4-1-1-1-1-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

						-- Goal`9-1-4-1-1-1-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

					-- Goal`9-1-4-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
					:def csb731#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

					:apply(csb731#9)

						-- Goal`9-1-4-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
						:def csb732#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

						:apply(csb732#9)

							-- Goal`9-1-4-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
							:def csb733#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

							:apply(csb733#9)

								-- Goal`9-1-4-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
								:def csb734#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

								:apply(csb734#9)

									-- Goal`9-1-4-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb735#9 = :ctf [m1?(M#Msg)  .]

									:apply(csb735#9)

										-- Goal`9-1-4-1-1-2-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb736#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

										:apply(csb736#9)

											-- Goal`9-1-4-1-1-2-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb737#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

											:apply(csb737#9)

												-- Goal`9-1-4-1-1-2-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb738#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

												:apply(csb738#9)

													-- Goal`9-1-4-1-1-2-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb739#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

													:apply(csb739#9)

														-- Goal`9-1-4-1-1-2-1-1-1-1-1-1-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-4-1-1-2-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb740#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

													:apply(csb740#9)

														-- Goal`9-1-4-1-1-2-1-1-1-1-1-1-1-2-1 Success by reduction
														:apply (rd)

												-- Goal`9-1-4-1-1-2-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb741#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

												:apply(csb741#9)

													-- Goal`9-1-4-1-1-2-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb742#9 = :ctf [key(c@Cipher2)  .]

													:apply(csb742#9)

														-- Goal`9-1-4-1-1-2-1-1-1-1-1-1-2-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-4-1-1-2-1-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb743#9 = :ctf [key(c@Cipher2)  .]

													:apply(csb743#9)

														-- Goal`9-1-4-1-1-2-1-1-1-1-1-1-2-2-1 Success by reduction
														:apply (rd)

											-- Goal`9-1-4-1-1-2-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb744#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

											:apply(csb744#9)

												-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb745#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

												:apply(csb745#9)

													-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb746#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

													:apply(csb746#9)

														-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb747#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb747#9)

															-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb748#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

															:apply(csb748#9)

																-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-1-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb749#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

															:apply(csb749#9)

																-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb750#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

														:apply(csb750#9)

															-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb751#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

															:apply(csb751#9)

																-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-1-2-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-1-2-2 Success by reduction
															:apply (rd)

													-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb752#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

													:apply(csb752#9)

														-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb753#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb753#9)

															-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-2-2 Success by reduction
														:apply (rd)

												-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb754#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

												:apply(csb754#9)

													-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb755#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

													:apply(csb755#9)

														-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb756#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb756#9)

															-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb757#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb757#9)

																-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-1-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb758#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb758#9)

																-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb759#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

														:apply(csb759#9)

															-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb760#9 = :ctf [nonce2(c@Cipher2)  .]

															:apply(csb760#9)

																-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb761#9 = :ctf [sender(M#Msg)  .]

																:apply(csb761#9)

																	-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-1-2-1-1-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-1-2-2 Success by reduction
															:apply (rd)

													-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb762#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

													:apply(csb762#9)

														-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb763#9 = :ctf [nonce2(c@Cipher2)  .]

														:apply(csb763#9)

															-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb764#9 = :ctf {eq P#CS9-1-4-1-1-2-1-1-1-1-1-2-2-2-1.Prin  = P#Prin .}

															:apply(csb764#9)

																-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb765#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb765#9)

																	-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-2-1-1-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

																-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb766#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb766#9)

																	-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-2-1-1-2-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

														-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-2-2 Success by reduction
														:apply (rd)

										-- Goal`9-1-4-1-1-2-1-1-1-1-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

									-- Goal`9-1-4-1-1-2-1-1-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`9-1-4-1-1-2-1-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`9-1-4-1-1-2-1-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

						-- Goal`9-1-4-1-1-2-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

				-- Goal`9-1-4-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
				:def csb767#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

				:apply(csb767#9)

					-- Goal`9-1-4-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
					:def csb768#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

					:apply(csb768#9)

						-- Goal`9-1-4-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
						:def csb769#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

						:apply(csb769#9)

							-- Goal`9-1-4-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
							:def csb770#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

							:apply(csb770#9)

								-- Goal`9-1-4-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
								:def csb771#9 = :ctf [m1?(M#Msg)  .]

								:apply(csb771#9)

									-- Goal`9-1-4-1-2-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb772#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

									:apply(csb772#9)

										-- Goal`9-1-4-1-2-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb773#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

										:apply(csb773#9)

											-- Goal`9-1-4-1-2-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb774#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

											:apply(csb774#9)

												-- Goal`9-1-4-1-2-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb775#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

												:apply(csb775#9)

													-- Goal`9-1-4-1-2-1-1-1-1-1-1-1-1-1 Success by reduction
													:apply (rd)

												-- Goal`9-1-4-1-2-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb776#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

												:apply(csb776#9)

													-- Goal`9-1-4-1-2-1-1-1-1-1-1-1-2-1 Success by reduction
													:apply (rd)

											-- Goal`9-1-4-1-2-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb777#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

											:apply(csb777#9)

												-- Goal`9-1-4-1-2-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb778#9 = :ctf [key(c@Cipher2)  .]

												:apply(csb778#9)

													-- Goal`9-1-4-1-2-1-1-1-1-1-1-2-1-1 Success by reduction
													:apply (rd)

												-- Goal`9-1-4-1-2-1-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb779#9 = :ctf [key(c@Cipher2)  .]

												:apply(csb779#9)

													-- Goal`9-1-4-1-2-1-1-1-1-1-1-2-2-1 Success by reduction
													:apply (rd)

										-- Goal`9-1-4-1-2-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb780#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

										:apply(csb780#9)

											-- Goal`9-1-4-1-2-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb781#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

											:apply(csb781#9)

												-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb782#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

												:apply(csb782#9)

													-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb783#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb783#9)

														-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb784#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb784#9)

															-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb785#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb785#9)

															-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb786#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

													:apply(csb786#9)

														-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb787#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb787#9)

															-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-1-2-2 Success by reduction
														:apply (rd)

												-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb788#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

												:apply(csb788#9)

													-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb789#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

													:apply(csb789#9)

														-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-2-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-2-2 Success by reduction
													:apply (rd)

											-- Goal`9-1-4-1-2-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb790#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

											:apply(csb790#9)

												-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb791#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

												:apply(csb791#9)

													-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb792#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb792#9)

														-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb793#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb793#9)

															-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb794#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb794#9)

															-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb795#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

													:apply(csb795#9)

														-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb796#9 = :ctf [nonce2(c@Cipher2)  .]

														:apply(csb796#9)

															-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb797#9 = :ctf {eq P#CS9-1-4-1-2-1-1-1-1-1-2-2-1-2-1.Prin  = P#Prin .}

															:apply(csb797#9)

																-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb798#9 = :ctf [sender(M#Msg)  .]

																:apply(csb798#9)

																	-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb799#9 = :ctf [sender(M#Msg)  .]

																:apply(csb799#9)

																	-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1-2-1-1-2-1 Success by reduction
																	:apply (rd)

														-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1-2-2 Success by reduction
														:apply (rd)

												-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb800#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

												:apply(csb800#9)

													-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb801#9 = :ctf [nonce2(c@Cipher2)  .]

													:apply(csb801#9)

														-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb802#9 = :ctf {eq P#CS9-1-4-1-2-1-1-1-1-1-2-2-2-1.Prin  = P#Prin .}

														:apply(csb802#9)

															-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb803#9 = :ctf {eq R#CS9-1-4-1-2-1-1-1-1-1-2-2-2-1.Rand  = R#Rand .}

															:apply(csb803#9)

																-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb804#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb804#9)

																	-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-2-1-1-1-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

																-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb805#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb805#9)

																	-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-2-1-1-1-2-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

															-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb806#9 = :ctf [cipher1(M#Msg)  .]

															:apply(csb806#9)

																-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb807#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb807#9)

																	-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-2-1-1-2-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

													-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-2-2 Success by reduction
													:apply (rd)

									-- Goal`9-1-4-1-2-1-1-1-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`9-1-4-1-2-1-1-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`9-1-4-1-2-1-1-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

						-- Goal`9-1-4-1-2-1-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

					-- Goal`9-1-4-1-2-2 Success by implication and reduction.
					:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

					:apply (rd)

			-- Goal`9-1-4-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
			:def csb808#9 = :ctf {eq EVS9-1-4.SubRand  = R#Rand .}

			:apply(csb808#9)

				-- Goal`9-1-4-2-1 Success by implication and reduction.
				:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

				:apply (rd)

				-- Goal`9-1-4-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
				:def csb809#9 = :ctf {eq cipher3(M#Msg)  = C#EVS9-1.SubCipher3 .}

				:apply(csb809#9)

					-- Goal`9-1-4-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
					:def csb810#9 = :ctf {eq creator(M#Msg)  = P#EVS9-1.SubPrin .}

					:apply(csb810#9)

						-- Goal`9-1-4-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
						:def csb811#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

						:apply(csb811#9)

							-- Goal`9-1-4-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
							:def csb812#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

							:apply(csb812#9)

								-- Goal`9-1-4-2-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
								:def csb813#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

								:apply(csb813#9)

									-- Goal`9-1-4-2-2-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb814#9 = :ctf {eq P#Prin  = P1#EVS9-1.SubPrin .}

									:apply(csb814#9)

										-- Goal`9-1-4-2-2-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb815#9 = :ctf {eq sender(M#Msg)  = P0#EVS9-1.SubPrin .}

										:apply(csb815#9)

											-- Goal`9-1-4-2-2-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb816#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

											:apply(csb816#9)

												-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb817#9 = :ctf [R#Rand \in U0#EVS9-1-4.URand  .]

												:apply(csb817#9)

													-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-1 Success by implication and reduction.
													:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

													:apply (rd)

													-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb818#9 = :ctf [m1?(M#Msg)  .]

													:apply(csb818#9)

														-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb819#9 = :ctf {eq enc2(P0#EVS9-1.SubPrin, nonce(cipher1(M#Msg)), n(P1#EVS9-1.SubPrin, P0#EVS9-1.SubPrin, R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

														:apply(csb819#9)

															-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb820#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

															:apply(csb820#9)

																-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb821#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb821#9)

																	-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb822#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb822#9)

																	-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb823#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

															:apply(csb823#9)

																-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb824#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb824#9)

																	-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb825#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb825#9)

																	-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-2-1-2-2-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

														-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-2-2 Success by implication and reduction.
														:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

														:apply (rd)

												-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb826#9 = :ctf [R#Rand \in U0#EVS9-1-4.URand  .]

												:apply(csb826#9)

													-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-2-1 Success by implication and reduction.
													:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

													:apply (rd)

													-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb827#9 = :ctf [m1?(M#Msg)  .]

													:apply(csb827#9)

														-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-2-2-1 Success by implication and reduction.
														:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

														:apply (rd)

														-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-2-2-2 Success by implication and reduction.
														:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

														:apply (rd)

											-- Goal`9-1-4-2-2-1-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb828#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

											:apply(csb828#9)

												-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb829#9 = :ctf [R#Rand \in U0#EVS9-1-4.URand  .]

												:apply(csb829#9)

													-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-1 Success by implication and reduction.
													:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

													:apply (rd)

													-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb830#9 = :ctf [m1?(M#Msg)  .]

													:apply(csb830#9)

														-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb831#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P1#EVS9-1.SubPrin, sender(M#Msg), R#Rand), P1#EVS9-1.SubPrin)  = c@Cipher2 .}

														:apply(csb831#9)

															-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb832#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

															:apply(csb832#9)

																-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb833#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb833#9)

																	-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb834#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb834#9)

																	-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb835#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

															:apply(csb835#9)

																-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb836#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb836#9)

																	-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb837#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb837#9)

																	-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-2-1-2-2-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

														-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-2-2 Success by implication and reduction.
														:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

														:apply (rd)

												-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-2 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

										-- Goal`9-1-4-2-2-1-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb838#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

										:apply(csb838#9)

											-- Goal`9-1-4-2-2-1-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb839#9 = :ctf [R#Rand \in U0#EVS9-1-4.URand  .]

											:apply(csb839#9)

												-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-1 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

												-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb840#9 = :ctf [m1?(M#Msg)  .]

												:apply(csb840#9)

													-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb841#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

													:apply(csb841#9)

														-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb842#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

														:apply(csb842#9)

															-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb843#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb843#9)

																-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb844#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb844#9)

																	-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb845#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb845#9)

																	-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb846#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb846#9)

																-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb847#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb847#9)

																	-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb848#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb848#9)

																	-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-1-2-2-1 Success by reduction
																	:apply (rd)

														-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb849#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

														:apply(csb849#9)

															-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb850#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

															:apply(csb850#9)

																-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb851#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb851#9)

																	-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb852#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb852#9)

																	-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb853#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

															:apply(csb853#9)

																-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb854#9 = :ctf [sender(M#Msg)  .]

																:apply(csb854#9)

																	-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-2-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb855#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb855#9)

																	-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-2-2-2-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

													-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-2 Success by implication and reduction.
													:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

													:apply (rd)

											-- Goal`9-1-4-2-2-1-1-1-1-1-2-2 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

									-- Goal`9-1-4-2-2-1-1-1-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`9-1-4-2-2-1-1-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`9-1-4-2-2-1-1-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

						-- Goal`9-1-4-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
						:def csb856#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

						:apply(csb856#9)

							-- Goal`9-1-4-2-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
							:def csb857#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

							:apply(csb857#9)

								-- Goal`9-1-4-2-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
								:def csb858#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

								:apply(csb858#9)

									-- Goal`9-1-4-2-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb859#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

									:apply(csb859#9)

										-- Goal`9-1-4-2-2-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb860#9 = :ctf [R#Rand \in U0#EVS9-1-4.URand  .]

										:apply(csb860#9)

											-- Goal`9-1-4-2-2-1-2-1-1-1-1-1 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

											-- Goal`9-1-4-2-2-1-2-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb861#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb861#9)

												-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb862#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

												:apply(csb862#9)

													-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb863#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

													:apply(csb863#9)

														-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb864#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb864#9)

															-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb865#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

															:apply(csb865#9)

																-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-1-1-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb866#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

															:apply(csb866#9)

																-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-1-1-2-1 Success by reduction
																:apply (rd)

														-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb867#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

														:apply(csb867#9)

															-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb868#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb868#9)

																-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-1-2-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb869#9 = :ctf [key(c@Cipher2)  .]

															:apply(csb869#9)

																-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-1-2-2-1 Success by reduction
																:apply (rd)

													-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb870#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

													:apply(csb870#9)

														-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb871#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

														:apply(csb871#9)

															-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb872#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

															:apply(csb872#9)

																-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb873#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb873#9)

																	-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb874#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb874#9)

																	-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb875#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb875#9)

																-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb876#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb876#9)

																	-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-1-2-2 Success by reduction
																:apply (rd)

														-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb877#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

														:apply(csb877#9)

															-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb878#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

															:apply(csb878#9)

																-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb879#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb879#9)

																	-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-2-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb880#9 = :ctf [sender(M#Msg)  .]

																:apply(csb880#9)

																	-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-2-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb881#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb881#9)

																-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb882#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb882#9)

																	-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-2-2-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

																-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-2-2-2 Success by reduction
																:apply (rd)

												-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-2 Success by implication and reduction.
												:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

												:apply (rd)

										-- Goal`9-1-4-2-2-1-2-1-1-1-2 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

									-- Goal`9-1-4-2-2-1-2-1-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`9-1-4-2-2-1-2-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`9-1-4-2-2-1-2-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

					-- Goal`9-1-4-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
					:def csb883#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

					:apply(csb883#9)

						-- Goal`9-1-4-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
						:def csb884#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

						:apply(csb884#9)

							-- Goal`9-1-4-2-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
							:def csb885#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

							:apply(csb885#9)

								-- Goal`9-1-4-2-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
								:def csb886#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

								:apply(csb886#9)

									-- Goal`9-1-4-2-2-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
									:def csb887#9 = :ctf [R#Rand \in U0#EVS9-1-4.URand  .]

									:apply(csb887#9)

										-- Goal`9-1-4-2-2-2-1-1-1-1-1 Success by implication and reduction.
										:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

										:apply (rd)

										-- Goal`9-1-4-2-2-2-1-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
										:def csb888#9 = :ctf [m1?(M#Msg)  .]

										:apply(csb888#9)

											-- Goal`9-1-4-2-2-2-1-1-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
											:def csb889#9 = :ctf {eq enc2(sender(M#Msg), nonce(cipher1(M#Msg)), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

											:apply(csb889#9)

												-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb890#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

												:apply(csb890#9)

													-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb891#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb891#9)

														-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb892#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb892#9)

															-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb893#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb893#9)

															-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb894#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

													:apply(csb894#9)

														-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb895#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb895#9)

															-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb896#9 = :ctf [key(c@Cipher2)  .]

														:apply(csb896#9)

															-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1-2-2-1 Success by reduction
															:apply (rd)

												-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
												:def csb897#9 = :ctf {eq nonce(C#EVS9-1.SubCipher3)  = nonce2(c@Cipher2) .}

												:apply(csb897#9)

													-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb898#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

													:apply(csb898#9)

														-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb899#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

														:apply(csb899#9)

															-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb900#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb900#9)

																-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb901#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb901#9)

																	-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb902#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb902#9)

																	-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb903#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb903#9)

																-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb904#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

																:apply(csb904#9)

																	-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1-1-2-2 Success by reduction
																:apply (rd)

														-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb905#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

														:apply(csb905#9)

															-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb906#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

															:apply(csb906#9)

																-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1-2-1-1 Success by reduction
																:apply (rd)

															-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1-2-2 Success by reduction
															:apply (rd)

													-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
													:def csb907#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(c@Cipher2) .}

													:apply(csb907#9)

														-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb908#9 = :ctf {eq enc2(sender(M#Msg), nonce2(c@Cipher2), n(P#Prin, sender(M#Msg), R#Rand), P#Prin)  = c@Cipher2 .}

														:apply(csb908#9)

															-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb909#9 = :ctf {eq nonce1(c@Cipher2)  = nonce2(c@Cipher2) .}

															:apply(csb909#9)

																-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2-1-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb910#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb910#9)

																	-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2-1-1-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2-1-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb911#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb911#9)

																	-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2-1-1-2-1 Success by reduction
																	:apply (rd)

															-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2-1-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb912#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

															:apply(csb912#9)

																-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2-1-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb913#9 = :ctf [sender(M#Msg)  .]

																:apply(csb913#9)

																	-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2-1-2-1-1 Success by reduction
																	:apply (rd)

																-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2-1-2-2 Success by reduction
																:apply (rd)

														-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2-2  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
														:def csb914#9 = :ctf [c@Cipher2 \in cenc2(N0#EVS9-1.Network)  .]

														:apply(csb914#9)

															-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2-2-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
															:def csb915#9 = :ctf [nonce2(c@Cipher2)  .]

															:apply(csb915#9)

																-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2-2-1-1  -  inv150(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher2)  - Success
																:def csb916#9 = :ctf [key(c@Cipher2)  .]

																:apply(csb916#9)

																	-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2-2-1-1-1 Success by implication and reduction.
																	:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

																	:imp [proven-goal1]  by {C:Cipher2 <- c@Cipher2 ;}

																	:apply (rd)

															-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2-2-2 Success by reduction
															:apply (rd)

											-- Goal`9-1-4-2-2-2-1-1-1-1-2-2 Success by implication and reduction.
											:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

											:apply (rd)

									-- Goal`9-1-4-2-2-2-1-1-1-2 Success by implication and reduction.
									:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

									:apply (rd)

								-- Goal`9-1-4-2-2-2-1-1-2 Success by implication and reduction.
								:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

								:apply (rd)

							-- Goal`9-1-4-2-2-2-1-2 Success by implication and reduction.
							:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

							:apply (rd)

						-- Goal`9-1-4-2-2-2-2 Success by implication and reduction.
						:imp [inv15]  by {c:Cipher2 <- c@Cipher2 ;}

						:apply (rd)

