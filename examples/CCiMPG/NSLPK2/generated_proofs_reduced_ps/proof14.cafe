
:proven(inv100(S:Sys, C:Cipher1))
:proven(inv110(S:Sys, C:Cipher2))
:proven(inv120(S:Sys, C:Cipher3))
:proven(inv160(S:Sys, N:Nonce))
:goal{
eq [inv14 :nonexec] : inv140(S:Sys, c:Cipher1)  = true .
}
:ind on (S:Sys)
:apply(si)
:sel(1)
	:apply(tc)

	-- Goal`1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
	:def csb1#1 = :cvs [nw(S#Sys)  .]

	:apply(csb1#1)

		-- Goal`1-1-1 Success by reduction
		:apply (rd)

		-- Goal`1-1-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
		:def csb2#1 = :ctf {eq C#Cipher1  = C#EVS1-1.SubCipher1 .}

		:apply(csb2#1)

			-- Goal`1-1-2-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
			:def csb3#1 = :ctf [key(C#EVS1-1.SubCipher1)  .]

			:apply(csb3#1)

				-- Goal`1-1-2-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
				:def csb4#1 = :ctf [C#EVS1-1.SubCipher1 \in cenc1(N0#EVS1-1.Network)  .]

				:apply(csb4#1)

					-- Goal`1-1-2-1-1-1 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:imp [proven-goal0]  by {C:Cipher1 <- C#Cipher1 ;}

					:apply (rd)

					-- Goal`1-1-2-1-1-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)

			-- Goal`1-1-2-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
			:def csb5#1 = :ctf [C#Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

			:apply(csb5#1)

				-- Goal`1-1-2-2-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
				:def csb6#1 = :ctf {eq C#Cipher1  = c@Cipher1 .}

				:apply(csb6#1)

					-- Goal`1-1-2-2-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
					:def csb7#1 = :ctf {eq C#EVS1-1.SubCipher1  = c@Cipher1 .}

					:apply(csb7#1)

						-- Goal`1-1-2-2-1-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
						:def csb8#1 = :ctf [key(c@Cipher1)  .]

						:apply(csb8#1)

							-- Goal`1-1-2-2-1-1-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
							:def csb9#1 = :ctf [c@Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

							:apply(csb9#1)

								-- Goal`1-1-2-2-1-1-1-1-1 Success by reduction
								:apply (rd)

								-- Goal`1-1-2-2-1-1-1-1-2 Success by reduction
								:apply (rd)

						-- Goal`1-1-2-2-1-1-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
						:def csb10#1 = :ctf [c@Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

						:apply(csb10#1)

							-- Goal`1-1-2-2-1-1-2-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
							:def csb11#1 = :ctf {eq nonce(C#EVS1-1.SubCipher1)  = nonce(c@Cipher1) .}

							:apply(csb11#1)

								-- Goal`1-1-2-2-1-1-2-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
								:def csb12#1 = :ctf [key(C#EVS1-1.SubCipher1)  .]

								:apply(csb12#1)

									-- Goal`1-1-2-2-1-1-2-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`1-1-2-2-1-1-2-1-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
								:def csb13#1 = :ctf [key(c@Cipher1)  .]

								:apply(csb13#1)

									-- Goal`1-1-2-2-1-1-2-1-2-1 Success by reduction
									:apply (rd)

							-- Goal`1-1-2-2-1-1-2-2 Success by reduction
							:apply (rd)

					-- Goal`1-1-2-2-1-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
					:def csb14#1 = :ctf {eq C#EVS1-1.SubCipher1  = c@Cipher1 .}

					:apply(csb14#1)

						-- Goal`1-1-2-2-1-2-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
						:def csb15#1 = :ctf {eq nonce(C#Cipher1)  = nonce(c@Cipher1) .}

						:apply(csb15#1)

							-- Goal`1-1-2-2-1-2-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
							:def csb16#1 = :ctf [key(C#Cipher1)  .]

							:apply(csb16#1)

								-- Goal`1-1-2-2-1-2-1-1-1 Success by reduction
								:apply (rd)

							-- Goal`1-1-2-2-1-2-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

						-- Goal`1-1-2-2-1-2-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
						:def csb17#1 = :ctf {eq nonce(C#Cipher1)  = nonce(c@Cipher1) .}

						:apply(csb17#1)

							-- Goal`1-1-2-2-1-2-2-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
							:def csb18#1 = :ctf {eq nonce(C#EVS1-1.SubCipher1)  = nonce(c@Cipher1) .}

							:apply(csb18#1)

								-- Goal`1-1-2-2-1-2-2-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
								:def csb19#1 = :ctf [c@Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

								:apply(csb19#1)

									-- Goal`1-1-2-2-1-2-2-1-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
									:def csb20#1 = :ctf [key(C#Cipher1)  .]

									:apply(csb20#1)

										-- Goal`1-1-2-2-1-2-2-1-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`1-1-2-2-1-2-2-1-1-2 Success by reduction
									:apply (rd)

								-- Goal`1-1-2-2-1-2-2-1-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
								:def csb21#1 = :ctf [c@Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

								:apply(csb21#1)

									-- Goal`1-1-2-2-1-2-2-1-2-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
									:def csb22#1 = :ctf [key(C#Cipher1)  .]

									:apply(csb22#1)

										-- Goal`1-1-2-2-1-2-2-1-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`1-1-2-2-1-2-2-1-2-2 Success by reduction
									:apply (rd)

							-- Goal`1-1-2-2-1-2-2-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

				-- Goal`1-1-2-2-2 Success by implication and reduction.
				:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

				:apply (rd)

		-- Goal`1-1-3  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
		:def csb23#1 = :ctf [C#Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

		:apply(csb23#1)

			-- Goal`1-1-3-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
			:def csb24#1 = :ctf {eq C#Cipher1  = c@Cipher1 .}

			:apply(csb24#1)

				-- Goal`1-1-3-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
				:def csb25#1 = :ctf [c@Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

				:apply(csb25#1)

					-- Goal`1-1-3-1-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
					:def csb26#1 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#EVS1-1.SubCipher2) .}

					:apply(csb26#1)

						-- Goal`1-1-3-1-1-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
						:def csb27#1 = :ctf {eq nonce1(C#EVS1-1.SubCipher2)  = nonce2(C#EVS1-1.SubCipher2) .}

						:apply(csb27#1)

							-- Goal`1-1-3-1-1-1-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
							:def csb28#1 = :ctf [key(C#EVS1-1.SubCipher2)  .]

							:apply(csb28#1)

								-- Goal`1-1-3-1-1-1-1-1-1 Success by reduction
								:apply (rd)

							-- Goal`1-1-3-1-1-1-1-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
							:def csb29#1 = :ctf [key(C#EVS1-1.SubCipher2)  .]

							:apply(csb29#1)

								-- Goal`1-1-3-1-1-1-1-2-1 Success by reduction
								:apply (rd)

						-- Goal`1-1-3-1-1-1-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
						:def csb30#1 = :ctf {eq nonce(c@Cipher1)  = nonce2(C#EVS1-1.SubCipher2) .}

						:apply(csb30#1)

							-- Goal`1-1-3-1-1-1-2-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
							:def csb31#1 = :ctf {eq nonce1(C#EVS1-1.SubCipher2)  = nonce2(C#EVS1-1.SubCipher2) .}

							:apply(csb31#1)

								-- Goal`1-1-3-1-1-1-2-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
								:def csb32#1 = :ctf [key(C#EVS1-1.SubCipher2)  .]

								:apply(csb32#1)

									-- Goal`1-1-3-1-1-1-2-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`1-1-3-1-1-1-2-1-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
								:def csb33#1 = :ctf [key(C#EVS1-1.SubCipher2)  .]

								:apply(csb33#1)

									-- Goal`1-1-3-1-1-1-2-1-2-1 Success by reduction
									:apply (rd)

							-- Goal`1-1-3-1-1-1-2-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
							:def csb34#1 = :ctf [key(c@Cipher1)  .]

							:apply(csb34#1)

								-- Goal`1-1-3-1-1-1-2-2-1 Success by reduction
								:apply (rd)

					-- Goal`1-1-3-1-1-2 Success by reduction
					:apply (rd)

				-- Goal`1-1-3-1-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
				:def csb35#1 = :ctf {eq nonce(C#Cipher1)  = nonce(c@Cipher1) .}

				:apply(csb35#1)

					-- Goal`1-1-3-1-2-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
					:def csb36#1 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#EVS1-1.SubCipher2) .}

					:apply(csb36#1)

						-- Goal`1-1-3-1-2-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
						:def csb37#1 = :ctf {eq nonce1(C#EVS1-1.SubCipher2)  = nonce2(C#EVS1-1.SubCipher2) .}

						:apply(csb37#1)

							-- Goal`1-1-3-1-2-1-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
							:def csb38#1 = :ctf [c@Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

							:apply(csb38#1)

								-- Goal`1-1-3-1-2-1-1-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
								:def csb39#1 = :ctf [key(C#Cipher1)  .]

								:apply(csb39#1)

									-- Goal`1-1-3-1-2-1-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`1-1-3-1-2-1-1-1-2 Success by reduction
								:apply (rd)

							-- Goal`1-1-3-1-2-1-1-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
							:def csb40#1 = :ctf [c@Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

							:apply(csb40#1)

								-- Goal`1-1-3-1-2-1-1-2-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
								:def csb41#1 = :ctf [key(C#Cipher1)  .]

								:apply(csb41#1)

									-- Goal`1-1-3-1-2-1-1-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`1-1-3-1-2-1-1-2-2 Success by reduction
								:apply (rd)

						-- Goal`1-1-3-1-2-1-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
						:def csb42#1 = :ctf {eq nonce(c@Cipher1)  = nonce2(C#EVS1-1.SubCipher2) .}

						:apply(csb42#1)

							-- Goal`1-1-3-1-2-1-2-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
							:def csb43#1 = :ctf {eq nonce1(C#EVS1-1.SubCipher2)  = nonce2(C#EVS1-1.SubCipher2) .}

							:apply(csb43#1)

								-- Goal`1-1-3-1-2-1-2-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
								:def csb44#1 = :ctf [c@Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

								:apply(csb44#1)

									-- Goal`1-1-3-1-2-1-2-1-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
									:def csb45#1 = :ctf [key(C#Cipher1)  .]

									:apply(csb45#1)

										-- Goal`1-1-3-1-2-1-2-1-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`1-1-3-1-2-1-2-1-1-2 Success by reduction
									:apply (rd)

								-- Goal`1-1-3-1-2-1-2-1-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
								:def csb46#1 = :ctf [c@Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

								:apply(csb46#1)

									-- Goal`1-1-3-1-2-1-2-1-2-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
									:def csb47#1 = :ctf [key(C#Cipher1)  .]

									:apply(csb47#1)

										-- Goal`1-1-3-1-2-1-2-1-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`1-1-3-1-2-1-2-1-2-2 Success by reduction
									:apply (rd)

							-- Goal`1-1-3-1-2-1-2-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
							:def csb48#1 = :ctf [c@Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

							:apply(csb48#1)

								-- Goal`1-1-3-1-2-1-2-2-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
								:def csb49#1 = :ctf [key(C#Cipher1)  .]

								:apply(csb49#1)

									-- Goal`1-1-3-1-2-1-2-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`1-1-3-1-2-1-2-2-2 Success by reduction
								:apply (rd)

					-- Goal`1-1-3-1-2-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)

			-- Goal`1-1-3-2 Success by implication and reduction.
			:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

			:apply (rd)

		-- Goal`1-1-4  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
		:def csb50#1 = :ctf [C#Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

		:apply(csb50#1)

			-- Goal`1-1-4-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
			:def csb51#1 = :ctf {eq C#Cipher1  = c@Cipher1 .}

			:apply(csb51#1)

				-- Goal`1-1-4-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
				:def csb52#1 = :ctf [c@Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

				:apply(csb52#1)

					-- Goal`1-1-4-1-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
					:def csb53#1 = :ctf {eq nonce(c@Cipher1)  = nonce(C#EVS1-1.SubCipher3) .}

					:apply(csb53#1)

						-- Goal`1-1-4-1-1-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
						:def csb54#1 = :ctf [key(C#EVS1-1.SubCipher3)  .]

						:apply(csb54#1)

							-- Goal`1-1-4-1-1-1-1-1 Success by reduction
							:apply (rd)

						-- Goal`1-1-4-1-1-1-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
						:def csb55#1 = :ctf [key(c@Cipher1)  .]

						:apply(csb55#1)

							-- Goal`1-1-4-1-1-1-2-1 Success by reduction
							:apply (rd)

					-- Goal`1-1-4-1-1-2 Success by reduction
					:apply (rd)

				-- Goal`1-1-4-1-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
				:def csb56#1 = :ctf {eq nonce(C#Cipher1)  = nonce(c@Cipher1) .}

				:apply(csb56#1)

					-- Goal`1-1-4-1-2-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
					:def csb57#1 = :ctf {eq nonce(c@Cipher1)  = nonce(C#EVS1-1.SubCipher3) .}

					:apply(csb57#1)

						-- Goal`1-1-4-1-2-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
						:def csb58#1 = :ctf [c@Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

						:apply(csb58#1)

							-- Goal`1-1-4-1-2-1-1-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
							:def csb59#1 = :ctf [key(C#Cipher1)  .]

							:apply(csb59#1)

								-- Goal`1-1-4-1-2-1-1-1-1 Success by reduction
								:apply (rd)

							-- Goal`1-1-4-1-2-1-1-2 Success by reduction
							:apply (rd)

						-- Goal`1-1-4-1-2-1-2  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
						:def csb60#1 = :ctf [c@Cipher1 \in cenc1(N0#EVS1-1.Network)  .]

						:apply(csb60#1)

							-- Goal`1-1-4-1-2-1-2-1  -  inv140(fkm11(S#Sys, P#Prin, P0#Prin, C#Cipher1), c@Cipher1)  - Success
							:def csb61#1 = :ctf [key(C#Cipher1)  .]

							:apply(csb61#1)

								-- Goal`1-1-4-1-2-1-2-1-1 Success by reduction
								:apply (rd)

							-- Goal`1-1-4-1-2-1-2-2 Success by reduction
							:apply (rd)

					-- Goal`1-1-4-1-2-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)

			-- Goal`1-1-4-2 Success by implication and reduction.
			:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

			:apply (rd)


:sel(2)
	:apply(tc)

	-- Goal`2-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
	:def csb1#2 = :cvs [nw(S#Sys)  .]

	:apply(csb1#2)

		-- Goal`2-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
		:def csb2#2 = :ctf [creator(N#Nonce)  .]

		:apply(csb2#2)

			-- Goal`2-1-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
			:def csb3#2 = :ctf {eq enc1(P0#Prin, N#Nonce, P#Prin)  = c@Cipher1 .}

			:apply(csb3#2)

				-- Goal`2-1-1-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
				:def csb4#2 = :ctf [key(c@Cipher1)  .]

				:apply(csb4#2)

					-- Goal`2-1-1-1-1-1 Success by reduction
					:apply (rd)

				-- Goal`2-1-1-1-2 Success by reduction
				:apply (rd)

		-- Goal`2-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
		:def csb5#2 = :ctf {eq nonce(C#EVS2-1.SubCipher1)  = N#Nonce .}

		:apply(csb5#2)

			-- Goal`2-1-2-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
			:def csb6#2 = :ctf [key(C#EVS2-1.SubCipher1)  .]

			:apply(csb6#2)

				-- Goal`2-1-2-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
				:def csb7#2 = :ctf {eq enc1(P0#Prin, N#Nonce, P#Prin)  = c@Cipher1 .}

				:apply(csb7#2)

					-- Goal`2-1-2-1-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb8#2 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

					:apply(csb8#2)

						-- Goal`2-1-2-1-1-1-1 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-1-1-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb9#2 = :ctf [key(c@Cipher1)  .]

						:apply(csb9#2)

							-- Goal`2-1-2-1-1-1-2-1 Success by reduction
							:apply (rd)

					-- Goal`2-1-2-1-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb10#2 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

					:apply(csb10#2)

						-- Goal`2-1-2-1-1-2-1 Success by reduction
						:apply (rd)

						-- Goal`2-1-2-1-1-2-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

			-- Goal`2-1-2-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
			:def csb11#2 = :ctf [N#Nonce \in cnonce(N0#EVS2-1.Network)  .]

			:apply(csb11#2)

				-- Goal`2-1-2-2-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
				:def csb12#2 = :ctf {eq C#EVS2-1.SubCipher1  = c@Cipher1 .}

				:apply(csb12#2)

					-- Goal`2-1-2-2-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb13#2 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

					:apply(csb13#2)

						-- Goal`2-1-2-2-1-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb14#2 = :ctf [key(c@Cipher1)  .]

						:apply(csb14#2)

							-- Goal`2-1-2-2-1-1-1-1 Success by reduction
							:apply (rd)

						-- Goal`2-1-2-2-1-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb15#2 = :ctf {eq enc1(P0#Prin, N#Nonce, P#Prin)  = c@Cipher1 .}

						:apply(csb15#2)

							-- Goal`2-1-2-2-1-1-2-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
							:def csb16#2 = :ctf [key(c@Cipher1)  .]

							:apply(csb16#2)

								-- Goal`2-1-2-2-1-1-2-1-1 Success by reduction
								:apply (rd)

							-- Goal`2-1-2-2-1-1-2-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

					-- Goal`2-1-2-2-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb17#2 = :ctf {eq enc1(P0#Prin, N#Nonce, P#Prin)  = c@Cipher1 .}

					:apply(csb17#2)

						-- Goal`2-1-2-2-1-2-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb18#2 = :ctf {eq nonce(C#EVS2-1.SubCipher1)  = nonce(c@Cipher1) .}

						:apply(csb18#2)

							-- Goal`2-1-2-2-1-2-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
							:def csb19#2 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

							:apply(csb19#2)

								-- Goal`2-1-2-2-1-2-1-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
								:def csb20#2 = :ctf [key(C#EVS2-1.SubCipher1)  .]

								:apply(csb20#2)

									-- Goal`2-1-2-2-1-2-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`2-1-2-2-1-2-1-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
								:def csb21#2 = :ctf [key(C#EVS2-1.SubCipher1)  .]

								:apply(csb21#2)

									-- Goal`2-1-2-2-1-2-1-1-2-1 Success by reduction
									:apply (rd)

							-- Goal`2-1-2-2-1-2-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
							:def csb22#2 = :ctf [key(c@Cipher1)  .]

							:apply(csb22#2)

								-- Goal`2-1-2-2-1-2-1-2-1 Success by reduction
								:apply (rd)

						-- Goal`2-1-2-2-1-2-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb23#2 = :ctf {eq nonce(C#EVS2-1.SubCipher1)  = nonce(c@Cipher1) .}

						:apply(csb23#2)

							-- Goal`2-1-2-2-1-2-2-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
							:def csb24#2 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

							:apply(csb24#2)

								-- Goal`2-1-2-2-1-2-2-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
								:def csb25#2 = :ctf [key(C#EVS2-1.SubCipher1)  .]

								:apply(csb25#2)

									-- Goal`2-1-2-2-1-2-2-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`2-1-2-2-1-2-2-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`2-1-2-2-1-2-2-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
							:def csb26#2 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

							:apply(csb26#2)

								-- Goal`2-1-2-2-1-2-2-2-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
								:def csb27#2 = :ctf [P0#Prin  .]

								:apply(csb27#2)

									-- Goal`2-1-2-2-1-2-2-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`2-1-2-2-1-2-2-2-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

				-- Goal`2-1-2-2-2 Success by implication and reduction.
				:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

				:apply (rd)

		-- Goal`2-1-3  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
		:def csb28#2 = :ctf {eq nonce1(C#EVS2-1.SubCipher2)  = N#Nonce .}

		:apply(csb28#2)

			-- Goal`2-1-3-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
			:def csb29#2 = :ctf {eq nonce2(C#EVS2-1.SubCipher2)  = N#Nonce .}

			:apply(csb29#2)

				-- Goal`2-1-3-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
				:def csb30#2 = :ctf [key(C#EVS2-1.SubCipher2)  .]

				:apply(csb30#2)

					-- Goal`2-1-3-1-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb31#2 = :ctf {eq enc1(P0#Prin, N#Nonce, P#Prin)  = c@Cipher1 .}

					:apply(csb31#2)

						-- Goal`2-1-3-1-1-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb32#2 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

						:apply(csb32#2)

							-- Goal`2-1-3-1-1-1-1-1 Success by reduction
							:apply (rd)

							-- Goal`2-1-3-1-1-1-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
							:def csb33#2 = :ctf [key(c@Cipher1)  .]

							:apply(csb33#2)

								-- Goal`2-1-3-1-1-1-1-2-1 Success by reduction
								:apply (rd)

						-- Goal`2-1-3-1-1-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb34#2 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

						:apply(csb34#2)

							-- Goal`2-1-3-1-1-1-2-1 Success by reduction
							:apply (rd)

							-- Goal`2-1-3-1-1-1-2-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

				-- Goal`2-1-3-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
				:def csb35#2 = :ctf [key(C#EVS2-1.SubCipher2)  .]

				:apply(csb35#2)

					-- Goal`2-1-3-1-2-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb36#2 = :ctf {eq enc1(P0#Prin, N#Nonce, P#Prin)  = c@Cipher1 .}

					:apply(csb36#2)

						-- Goal`2-1-3-1-2-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb37#2 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

						:apply(csb37#2)

							-- Goal`2-1-3-1-2-1-1-1 Success by reduction
							:apply (rd)

							-- Goal`2-1-3-1-2-1-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
							:def csb38#2 = :ctf {eq nonce(c@Cipher1)  = nonce2(C#EVS2-1.SubCipher2) .}

							:apply(csb38#2)

								-- Goal`2-1-3-1-2-1-1-2-1 Success by reduction
								:apply (rd)

								-- Goal`2-1-3-1-2-1-1-2-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
								:def csb39#2 = :ctf [key(c@Cipher1)  .]

								:apply(csb39#2)

									-- Goal`2-1-3-1-2-1-1-2-2-1 Success by reduction
									:apply (rd)

						-- Goal`2-1-3-1-2-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb40#2 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

						:apply(csb40#2)

							-- Goal`2-1-3-1-2-1-2-1 Success by reduction
							:apply (rd)

							-- Goal`2-1-3-1-2-1-2-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

			-- Goal`2-1-3-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
			:def csb41#2 = :ctf {eq nonce2(C#EVS2-1.SubCipher2)  = N#Nonce .}

			:apply(csb41#2)

				-- Goal`2-1-3-2-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
				:def csb42#2 = :ctf [key(C#EVS2-1.SubCipher2)  .]

				:apply(csb42#2)

					-- Goal`2-1-3-2-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb43#2 = :ctf {eq enc1(P0#Prin, N#Nonce, P#Prin)  = c@Cipher1 .}

					:apply(csb43#2)

						-- Goal`2-1-3-2-1-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb44#2 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

						:apply(csb44#2)

							-- Goal`2-1-3-2-1-1-1-1 Success by reduction
							:apply (rd)

							-- Goal`2-1-3-2-1-1-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
							:def csb45#2 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#EVS2-1.SubCipher2) .}

							:apply(csb45#2)

								-- Goal`2-1-3-2-1-1-1-2-1 Success by reduction
								:apply (rd)

								-- Goal`2-1-3-2-1-1-1-2-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
								:def csb46#2 = :ctf [key(c@Cipher1)  .]

								:apply(csb46#2)

									-- Goal`2-1-3-2-1-1-1-2-2-1 Success by reduction
									:apply (rd)

						-- Goal`2-1-3-2-1-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb47#2 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

						:apply(csb47#2)

							-- Goal`2-1-3-2-1-1-2-1 Success by reduction
							:apply (rd)

							-- Goal`2-1-3-2-1-1-2-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

				-- Goal`2-1-3-2-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
				:def csb48#2 = :ctf [N#Nonce \in cnonce(N0#EVS2-1.Network)  .]

				:apply(csb48#2)

					-- Goal`2-1-3-2-2-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb49#2 = :ctf {eq enc1(P0#Prin, N#Nonce, P#Prin)  = c@Cipher1 .}

					:apply(csb49#2)

						-- Goal`2-1-3-2-2-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb50#2 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#EVS2-1.SubCipher2) .}

						:apply(csb50#2)

							-- Goal`2-1-3-2-2-1-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
							:def csb51#2 = :ctf {eq nonce1(C#EVS2-1.SubCipher2)  = nonce2(C#EVS2-1.SubCipher2) .}

							:apply(csb51#2)

								-- Goal`2-1-3-2-2-1-1-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
								:def csb52#2 = :ctf [key(C#EVS2-1.SubCipher2)  .]

								:apply(csb52#2)

									-- Goal`2-1-3-2-2-1-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`2-1-3-2-2-1-1-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
								:def csb53#2 = :ctf [key(C#EVS2-1.SubCipher2)  .]

								:apply(csb53#2)

									-- Goal`2-1-3-2-2-1-1-1-2-1 Success by reduction
									:apply (rd)

							-- Goal`2-1-3-2-2-1-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
							:def csb54#2 = :ctf {eq nonce(c@Cipher1)  = nonce2(C#EVS2-1.SubCipher2) .}

							:apply(csb54#2)

								-- Goal`2-1-3-2-2-1-1-2-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
								:def csb55#2 = :ctf {eq nonce1(C#EVS2-1.SubCipher2)  = nonce2(C#EVS2-1.SubCipher2) .}

								:apply(csb55#2)

									-- Goal`2-1-3-2-2-1-1-2-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
									:def csb56#2 = :ctf [key(C#EVS2-1.SubCipher2)  .]

									:apply(csb56#2)

										-- Goal`2-1-3-2-2-1-1-2-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`2-1-3-2-2-1-1-2-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
									:def csb57#2 = :ctf [key(C#EVS2-1.SubCipher2)  .]

									:apply(csb57#2)

										-- Goal`2-1-3-2-2-1-1-2-1-2-1 Success by reduction
										:apply (rd)

								-- Goal`2-1-3-2-2-1-1-2-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
								:def csb58#2 = :ctf [key(c@Cipher1)  .]

								:apply(csb58#2)

									-- Goal`2-1-3-2-2-1-1-2-2-1 Success by reduction
									:apply (rd)

						-- Goal`2-1-3-2-2-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb59#2 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

						:apply(csb59#2)

							-- Goal`2-1-3-2-2-1-2-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
							:def csb60#2 = :ctf [P0#Prin  .]

							:apply(csb60#2)

								-- Goal`2-1-3-2-2-1-2-1-1 Success by reduction
								:apply (rd)

							-- Goal`2-1-3-2-2-1-2-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

					-- Goal`2-1-3-2-2-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)

		-- Goal`2-1-4  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
		:def csb61#2 = :ctf {eq nonce(C#EVS2-1.SubCipher3)  = N#Nonce .}

		:apply(csb61#2)

			-- Goal`2-1-4-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
			:def csb62#2 = :ctf [key(C#EVS2-1.SubCipher3)  .]

			:apply(csb62#2)

				-- Goal`2-1-4-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
				:def csb63#2 = :ctf {eq enc1(P0#Prin, N#Nonce, P#Prin)  = c@Cipher1 .}

				:apply(csb63#2)

					-- Goal`2-1-4-1-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb64#2 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

					:apply(csb64#2)

						-- Goal`2-1-4-1-1-1-1 Success by reduction
						:apply (rd)

						-- Goal`2-1-4-1-1-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb65#2 = :ctf [key(c@Cipher1)  .]

						:apply(csb65#2)

							-- Goal`2-1-4-1-1-1-2-1 Success by reduction
							:apply (rd)

					-- Goal`2-1-4-1-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb66#2 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

					:apply(csb66#2)

						-- Goal`2-1-4-1-1-2-1 Success by reduction
						:apply (rd)

						-- Goal`2-1-4-1-1-2-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

			-- Goal`2-1-4-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
			:def csb67#2 = :ctf [N#Nonce \in cnonce(N0#EVS2-1.Network)  .]

			:apply(csb67#2)

				-- Goal`2-1-4-2-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
				:def csb68#2 = :ctf {eq enc1(P0#Prin, N#Nonce, P#Prin)  = c@Cipher1 .}

				:apply(csb68#2)

					-- Goal`2-1-4-2-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb69#2 = :ctf {eq nonce(c@Cipher1)  = nonce(C#EVS2-1.SubCipher3) .}

					:apply(csb69#2)

						-- Goal`2-1-4-2-1-1-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb70#2 = :ctf [key(C#EVS2-1.SubCipher3)  .]

						:apply(csb70#2)

							-- Goal`2-1-4-2-1-1-1-1 Success by reduction
							:apply (rd)

						-- Goal`2-1-4-2-1-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb71#2 = :ctf [key(c@Cipher1)  .]

						:apply(csb71#2)

							-- Goal`2-1-4-2-1-1-2-1 Success by reduction
							:apply (rd)

					-- Goal`2-1-4-2-1-2  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb72#2 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

					:apply(csb72#2)

						-- Goal`2-1-4-2-1-2-1  -  inv140(fkm12(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb73#2 = :ctf [P0#Prin  .]

						:apply(csb73#2)

							-- Goal`2-1-4-2-1-2-1-1 Success by reduction
							:apply (rd)

						-- Goal`2-1-4-2-1-2-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

				-- Goal`2-1-4-2-2 Success by implication and reduction.
				:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

				:apply (rd)


:sel(5)
	:apply(tc)

	-- Goal`5-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
	:def csb1#5 = :cvs [nw(S#Sys)  .]

	:apply(csb1#5)

		-- Goal`5-1-1 Success by reduction
		:apply (rd)

		-- Goal`5-1-2  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
		:def csb2#5 = :ctf [C#Cipher3 \in cenc3(N0#EVS5-1.Network)  .]

		:apply(csb2#5)

			-- Goal`5-1-2-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
			:def csb3#5 = :ctf {eq C#EVS5-1.SubCipher1  = c@Cipher1 .}

			:apply(csb3#5)

				-- Goal`5-1-2-1-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
				:def csb4#5 = :ctf {eq nonce(c@Cipher1)  = nonce(C#Cipher3) .}

				:apply(csb4#5)

					-- Goal`5-1-2-1-1-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
					:def csb5#5 = :ctf [key(C#Cipher3)  .]

					:apply(csb5#5)

						-- Goal`5-1-2-1-1-1-1 Success by reduction
						:apply (rd)

					-- Goal`5-1-2-1-1-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)

				-- Goal`5-1-2-1-2  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
				:def csb6#5 = :ctf {eq nonce(C#EVS5-1.SubCipher1)  = nonce(c@Cipher1) .}

				:apply(csb6#5)

					-- Goal`5-1-2-1-2-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
					:def csb7#5 = :ctf {eq nonce(c@Cipher1)  = nonce(C#Cipher3) .}

					:apply(csb7#5)

						-- Goal`5-1-2-1-2-1-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
						:def csb8#5 = :ctf [c@Cipher1 \in cenc1(N0#EVS5-1.Network)  .]

						:apply(csb8#5)

							-- Goal`5-1-2-1-2-1-1-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
							:def csb9#5 = :ctf [key(C#Cipher3)  .]

							:apply(csb9#5)

								-- Goal`5-1-2-1-2-1-1-1-1 Success by reduction
								:apply (rd)

							-- Goal`5-1-2-1-2-1-1-2 Success by reduction
							:apply (rd)

						-- Goal`5-1-2-1-2-1-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

					-- Goal`5-1-2-1-2-2  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
					:def csb10#5 = :ctf {eq nonce(c@Cipher1)  = nonce(C#Cipher3) .}

					:apply(csb10#5)

						-- Goal`5-1-2-1-2-2-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
						:def csb11#5 = :ctf {eq nonce(C#EVS5-1.SubCipher1)  = nonce(C#Cipher3) .}

						:apply(csb11#5)

							-- Goal`5-1-2-1-2-2-1-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
							:def csb12#5 = :ctf [c@Cipher1 \in cenc1(N0#EVS5-1.Network)  .]

							:apply(csb12#5)

								-- Goal`5-1-2-1-2-2-1-1-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
								:def csb13#5 = :ctf [key(C#Cipher3)  .]

								:apply(csb13#5)

									-- Goal`5-1-2-1-2-2-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`5-1-2-1-2-2-1-1-2 Success by reduction
								:apply (rd)

							-- Goal`5-1-2-1-2-2-1-2  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
							:def csb14#5 = :ctf [c@Cipher1 \in cenc1(N0#EVS5-1.Network)  .]

							:apply(csb14#5)

								-- Goal`5-1-2-1-2-2-1-2-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
								:def csb15#5 = :ctf [key(C#Cipher3)  .]

								:apply(csb15#5)

									-- Goal`5-1-2-1-2-2-1-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`5-1-2-1-2-2-1-2-2 Success by reduction
								:apply (rd)

						-- Goal`5-1-2-1-2-2-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

			-- Goal`5-1-2-2 Success by implication and reduction.
			:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

			:apply (rd)

		-- Goal`5-1-3  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
		:def csb16#5 = :ctf [C#Cipher3 \in cenc3(N0#EVS5-1.Network)  .]

		:apply(csb16#5)

			-- Goal`5-1-3-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
			:def csb17#5 = :ctf {eq nonce(c@Cipher1)  = nonce(C#Cipher3) .}

			:apply(csb17#5)

				-- Goal`5-1-3-1-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
				:def csb18#5 = :ctf {eq nonce(C#Cipher3)  = nonce1(C#EVS5-1.SubCipher2) .}

				:apply(csb18#5)

					-- Goal`5-1-3-1-1-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
					:def csb19#5 = :ctf {eq nonce1(C#EVS5-1.SubCipher2)  = nonce2(C#EVS5-1.SubCipher2) .}

					:apply(csb19#5)

						-- Goal`5-1-3-1-1-1-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
						:def csb20#5 = :ctf [c@Cipher1 \in cenc1(N0#EVS5-1.Network)  .]

						:apply(csb20#5)

							-- Goal`5-1-3-1-1-1-1-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
							:def csb21#5 = :ctf [key(C#Cipher3)  .]

							:apply(csb21#5)

								-- Goal`5-1-3-1-1-1-1-1-1 Success by reduction
								:apply (rd)

							-- Goal`5-1-3-1-1-1-1-2 Success by reduction
							:apply (rd)

						-- Goal`5-1-3-1-1-1-2  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
						:def csb22#5 = :ctf [c@Cipher1 \in cenc1(N0#EVS5-1.Network)  .]

						:apply(csb22#5)

							-- Goal`5-1-3-1-1-1-2-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
							:def csb23#5 = :ctf [key(C#Cipher3)  .]

							:apply(csb23#5)

								-- Goal`5-1-3-1-1-1-2-1-1 Success by reduction
								:apply (rd)

							-- Goal`5-1-3-1-1-1-2-2 Success by reduction
							:apply (rd)

					-- Goal`5-1-3-1-1-2  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
					:def csb24#5 = :ctf {eq nonce(C#Cipher3)  = nonce2(C#EVS5-1.SubCipher2) .}

					:apply(csb24#5)

						-- Goal`5-1-3-1-1-2-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
						:def csb25#5 = :ctf {eq nonce1(C#EVS5-1.SubCipher2)  = nonce2(C#EVS5-1.SubCipher2) .}

						:apply(csb25#5)

							-- Goal`5-1-3-1-1-2-1-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
							:def csb26#5 = :ctf [c@Cipher1 \in cenc1(N0#EVS5-1.Network)  .]

							:apply(csb26#5)

								-- Goal`5-1-3-1-1-2-1-1-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
								:def csb27#5 = :ctf [key(C#Cipher3)  .]

								:apply(csb27#5)

									-- Goal`5-1-3-1-1-2-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`5-1-3-1-1-2-1-1-2 Success by reduction
								:apply (rd)

							-- Goal`5-1-3-1-1-2-1-2  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
							:def csb28#5 = :ctf [c@Cipher1 \in cenc1(N0#EVS5-1.Network)  .]

							:apply(csb28#5)

								-- Goal`5-1-3-1-1-2-1-2-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
								:def csb29#5 = :ctf [key(C#Cipher3)  .]

								:apply(csb29#5)

									-- Goal`5-1-3-1-1-2-1-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`5-1-3-1-1-2-1-2-2 Success by reduction
								:apply (rd)

						-- Goal`5-1-3-1-1-2-2  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
						:def csb30#5 = :ctf [c@Cipher1 \in cenc1(N0#EVS5-1.Network)  .]

						:apply(csb30#5)

							-- Goal`5-1-3-1-1-2-2-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
							:def csb31#5 = :ctf [key(C#Cipher3)  .]

							:apply(csb31#5)

								-- Goal`5-1-3-1-1-2-2-1-1 Success by reduction
								:apply (rd)

							-- Goal`5-1-3-1-1-2-2-2 Success by reduction
							:apply (rd)

				-- Goal`5-1-3-1-2 Success by implication and reduction.
				:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

				:apply (rd)

			-- Goal`5-1-3-2 Success by implication and reduction.
			:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

			:apply (rd)

		-- Goal`5-1-4  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
		:def csb32#5 = :ctf {eq C#Cipher3  = C#EVS5-1.SubCipher3 .}

		:apply(csb32#5)

			-- Goal`5-1-4-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
			:def csb33#5 = :ctf [key(C#EVS5-1.SubCipher3)  .]

			:apply(csb33#5)

				-- Goal`5-1-4-1-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
				:def csb34#5 = :ctf [C#EVS5-1.SubCipher3 \in cenc3(N0#EVS5-1.Network)  .]

				:apply(csb34#5)

					-- Goal`5-1-4-1-1-1 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:imp [proven-goal2]  by {C:Cipher3 <- C#Cipher3 ;}

					:apply (rd)

					-- Goal`5-1-4-1-1-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)

			-- Goal`5-1-4-2  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
			:def csb35#5 = :ctf [C#Cipher3 \in cenc3(N0#EVS5-1.Network)  .]

			:apply(csb35#5)

				-- Goal`5-1-4-2-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
				:def csb36#5 = :ctf {eq nonce(c@Cipher1)  = nonce(C#Cipher3) .}

				:apply(csb36#5)

					-- Goal`5-1-4-2-1-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
					:def csb37#5 = :ctf {eq nonce(C#Cipher3)  = nonce(C#EVS5-1.SubCipher3) .}

					:apply(csb37#5)

						-- Goal`5-1-4-2-1-1-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
						:def csb38#5 = :ctf [c@Cipher1 \in cenc1(N0#EVS5-1.Network)  .]

						:apply(csb38#5)

							-- Goal`5-1-4-2-1-1-1-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
							:def csb39#5 = :ctf [key(C#Cipher3)  .]

							:apply(csb39#5)

								-- Goal`5-1-4-2-1-1-1-1-1 Success by reduction
								:apply (rd)

							-- Goal`5-1-4-2-1-1-1-2 Success by reduction
							:apply (rd)

						-- Goal`5-1-4-2-1-1-2  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
						:def csb40#5 = :ctf [c@Cipher1 \in cenc1(N0#EVS5-1.Network)  .]

						:apply(csb40#5)

							-- Goal`5-1-4-2-1-1-2-1  -  inv140(fkm31(S#Sys, P#Prin, P0#Prin, C#Cipher3), c@Cipher1)  - Success
							:def csb41#5 = :ctf [key(C#Cipher3)  .]

							:apply(csb41#5)

								-- Goal`5-1-4-2-1-1-2-1-1 Success by reduction
								:apply (rd)

							-- Goal`5-1-4-2-1-1-2-2 Success by reduction
							:apply (rd)

					-- Goal`5-1-4-2-1-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)

				-- Goal`5-1-4-2-2 Success by implication and reduction.
				:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

				:apply (rd)


:sel(7)
	:apply(tc)

	-- The corresponding proof score was not present.
	:apply (rd)


:sel(6)
	:apply(tc)

	-- Goal`6-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
	:def csb1#6 = :cvs [nw(S#Sys)  .]

	:apply(csb1#6)

		-- Goal`6-1-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
		:def csb2#6 = :ctf [creator(N#Nonce)  .]

		:apply(csb2#6)

			-- Goal`6-1-1-1 Success by reduction
			:apply (rd)

		-- Goal`6-1-2  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
		:def csb3#6 = :ctf {eq nonce(C#EVS6-1.SubCipher1)  = N#Nonce .}

		:apply(csb3#6)

			-- Goal`6-1-2-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
			:def csb4#6 = :ctf [key(C#EVS6-1.SubCipher1)  .]

			:apply(csb4#6)

				-- Goal`6-1-2-1-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
				:def csb5#6 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

				:apply(csb5#6)

					-- Goal`6-1-2-1-1-1 Success by reduction
					:apply (rd)

					-- Goal`6-1-2-1-1-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)

			-- Goal`6-1-2-2  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
			:def csb6#6 = :ctf [N#Nonce \in cnonce(N0#EVS6-1.Network)  .]

			:apply(csb6#6)

				-- Goal`6-1-2-2-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
				:def csb7#6 = :ctf {eq C#EVS6-1.SubCipher1  = c@Cipher1 .}

				:apply(csb7#6)

					-- Goal`6-1-2-2-1-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb8#6 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

					:apply(csb8#6)

						-- Goal`6-1-2-2-1-1-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb9#6 = :ctf [key(c@Cipher1)  .]

						:apply(csb9#6)

							-- Goal`6-1-2-2-1-1-1-1 Success by reduction
							:apply (rd)

						-- Goal`6-1-2-2-1-1-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

					-- Goal`6-1-2-2-1-2  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb10#6 = :ctf {eq nonce(C#EVS6-1.SubCipher1)  = nonce(c@Cipher1) .}

					:apply(csb10#6)

						-- Goal`6-1-2-2-1-2-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb11#6 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

						:apply(csb11#6)

							-- Goal`6-1-2-2-1-2-1-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
							:def csb12#6 = :ctf [key(C#EVS6-1.SubCipher1)  .]

							:apply(csb12#6)

								-- Goal`6-1-2-2-1-2-1-1-1 Success by reduction
								:apply (rd)

							-- Goal`6-1-2-2-1-2-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

						-- Goal`6-1-2-2-1-2-2  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb13#6 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

						:apply(csb13#6)

							-- Goal`6-1-2-2-1-2-2-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
							:def csb14#6 = :ctf [P0#Prin  .]

							:apply(csb14#6)

								-- Goal`6-1-2-2-1-2-2-1-1 Success by reduction
								:apply (rd)

							-- Goal`6-1-2-2-1-2-2-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

				-- Goal`6-1-2-2-2 Success by implication and reduction.
				:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

				:apply (rd)

		-- Goal`6-1-3  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
		:def csb15#6 = :ctf {eq nonce1(C#EVS6-1.SubCipher2)  = N#Nonce .}

		:apply(csb15#6)

			-- Goal`6-1-3-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
			:def csb16#6 = :ctf {eq nonce2(C#EVS6-1.SubCipher2)  = N#Nonce .}

			:apply(csb16#6)

				-- Goal`6-1-3-1-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
				:def csb17#6 = :ctf [key(C#EVS6-1.SubCipher2)  .]

				:apply(csb17#6)

					-- Goal`6-1-3-1-1-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb18#6 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

					:apply(csb18#6)

						-- Goal`6-1-3-1-1-1-1 Success by reduction
						:apply (rd)

						-- Goal`6-1-3-1-1-1-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

				-- Goal`6-1-3-1-2  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
				:def csb19#6 = :ctf [key(C#EVS6-1.SubCipher2)  .]

				:apply(csb19#6)

					-- Goal`6-1-3-1-2-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb20#6 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

					:apply(csb20#6)

						-- Goal`6-1-3-1-2-1-1 Success by reduction
						:apply (rd)

						-- Goal`6-1-3-1-2-1-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

			-- Goal`6-1-3-2  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
			:def csb21#6 = :ctf {eq nonce2(C#EVS6-1.SubCipher2)  = N#Nonce .}

			:apply(csb21#6)

				-- Goal`6-1-3-2-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
				:def csb22#6 = :ctf [key(C#EVS6-1.SubCipher2)  .]

				:apply(csb22#6)

					-- Goal`6-1-3-2-1-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb23#6 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

					:apply(csb23#6)

						-- Goal`6-1-3-2-1-1-1 Success by reduction
						:apply (rd)

						-- Goal`6-1-3-2-1-1-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

				-- Goal`6-1-3-2-2  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
				:def csb24#6 = :ctf [N#Nonce \in cnonce(N0#EVS6-1.Network)  .]

				:apply(csb24#6)

					-- Goal`6-1-3-2-2-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb25#6 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

					:apply(csb25#6)

						-- Goal`6-1-3-2-2-1-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
						:def csb26#6 = :ctf [P0#Prin  .]

						:apply(csb26#6)

							-- Goal`6-1-3-2-2-1-1-1 Success by reduction
							:apply (rd)

						-- Goal`6-1-3-2-2-1-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

					-- Goal`6-1-3-2-2-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)

		-- Goal`6-1-4  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
		:def csb27#6 = :ctf {eq nonce(C#EVS6-1.SubCipher3)  = N#Nonce .}

		:apply(csb27#6)

			-- Goal`6-1-4-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
			:def csb28#6 = :ctf [key(C#EVS6-1.SubCipher3)  .]

			:apply(csb28#6)

				-- Goal`6-1-4-1-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
				:def csb29#6 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

				:apply(csb29#6)

					-- Goal`6-1-4-1-1-1 Success by reduction
					:apply (rd)

					-- Goal`6-1-4-1-1-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)

			-- Goal`6-1-4-2  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
			:def csb30#6 = :ctf [N#Nonce \in cnonce(N0#EVS6-1.Network)  .]

			:apply(csb30#6)

				-- Goal`6-1-4-2-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
				:def csb31#6 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

				:apply(csb31#6)

					-- Goal`6-1-4-2-1-1  -  inv140(fkm32(S#Sys, P#Prin, P0#Prin, N#Nonce), c@Cipher1)  - Success
					:def csb32#6 = :ctf [P0#Prin  .]

					:apply(csb32#6)

						-- Goal`6-1-4-2-1-1-1 Success by reduction
						:apply (rd)

					-- Goal`6-1-4-2-1-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)

				-- Goal`6-1-4-2-2 Success by implication and reduction.
				:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

				:apply (rd)


:sel(8)
	:apply(tc)

	-- Goal`8-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
	:def csb1#8 = :cvs [ur(S#Sys)  .]

	:apply(csb1#8)

		-- Goal`8-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
		:def csb2#8 = :ctf {eq enc1(P0#Prin, n(P#Prin, P0#Prin, R#Rand), P#Prin)  = c@Cipher1 .}

		:apply(csb2#8)

			-- Goal`8-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
			:def csb3#8 = :ctf [key(c@Cipher1)  .]

			:apply(csb3#8)

				-- Goal`8-1-1-1-1 Success by reduction
				:apply (rd)

			-- Goal`8-1-1-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
	:def csb4#8 = :cvs [nw(S#Sys)  .]

	:apply(csb4#8)

				-- Goal`8-1-1-2-1 Success by reduction
				:apply (rd)

				-- Goal`8-1-1-2-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
				:def csb5#8 = :ctf {eq C#EVS8-1-1-2.SubCipher1  = c@Cipher1 .}

				:apply(csb5#8)

					-- Goal`8-1-1-2-2-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
					:def csb6#8 = :ctf [P0#Prin  .]

					:apply(csb6#8)

						-- Goal`8-1-1-2-2-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
						:def csb7#8 = :ctf [key(c@Cipher1)  .]

						:apply(csb7#8)

							-- Goal`8-1-1-2-2-1-1-1 Success by reduction
							:apply (rd)

					-- Goal`8-1-1-2-2-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
					:def csb8#8 = :ctf {eq nonce(C#EVS8-1-1-2.SubCipher1)  = nonce(c@Cipher1) .}

					:apply(csb8#8)

						-- Goal`8-1-1-2-2-2-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
						:def csb9#8 = :ctf [P0#Prin  .]

						:apply(csb9#8)

							-- Goal`8-1-1-2-2-2-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
							:def csb10#8 = :ctf [c@Cipher1 \in cenc1(N0#EVS8-1-1-2.Network)  .]

							:apply(csb10#8)

								-- Goal`8-1-1-2-2-2-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
								:def csb11#8 = :ctf [key(C#EVS8-1-1-2.SubCipher1)  .]

								:apply(csb11#8)

									-- Goal`8-1-1-2-2-2-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`8-1-1-2-2-2-1-1-2 Success by reduction
								:apply (rd)

						-- Goal`8-1-1-2-2-2-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
						:def csb12#8 = :ctf [P0#Prin  .]

						:apply(csb12#8)

							-- Goal`8-1-1-2-2-2-2-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
							:def csb13#8 = :ctf [c@Cipher1 \in cenc1(N0#EVS8-1-1-2.Network)  .]

							:apply(csb13#8)

								-- Goal`8-1-1-2-2-2-2-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
								:def csb14#8 = :ctf [nonce(c@Cipher1)  .]

								:apply(csb14#8)

									-- Goal`8-1-1-2-2-2-2-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
									:def csb15#8 = :ctf {eq P#CS8-1-1-2-2-2-2-1-1.Prin  = P#Prin .}

									:apply(csb15#8)

										-- Goal`8-1-1-2-2-2-2-1-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
										:def csb16#8 = :ctf {eq R#CS8-1-1-2-2-2-2-1-1.Rand  = R#Rand .}

										:apply(csb16#8)

											-- Goal`8-1-1-2-2-2-2-1-1-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
											:def csb17#8 = :ctf [P0#CS8-1-1-2-2-2-2-1-1.Prin  .]

											:apply(csb17#8)

												-- Goal`8-1-1-2-2-2-2-1-1-1-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`8-1-1-2-2-2-2-1-1-1-1-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

										-- Goal`8-1-1-2-2-2-2-1-1-1-2 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

								-- Goal`8-1-1-2-2-2-2-1-2 Success by reduction
								:apply (rd)

				-- Goal`8-1-1-2-3  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
				:def csb18#8 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#EVS8-1-1-2.SubCipher2) .}

				:apply(csb18#8)

					-- Goal`8-1-1-2-3-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
					:def csb19#8 = :ctf {eq nonce1(C#EVS8-1-1-2.SubCipher2)  = nonce2(C#EVS8-1-1-2.SubCipher2) .}

					:apply(csb19#8)

						-- Goal`8-1-1-2-3-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
						:def csb20#8 = :ctf [P0#Prin  .]

						:apply(csb20#8)

							-- Goal`8-1-1-2-3-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
							:def csb21#8 = :ctf [c@Cipher1 \in cenc1(N0#EVS8-1-1-2.Network)  .]

							:apply(csb21#8)

								-- Goal`8-1-1-2-3-1-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
								:def csb22#8 = :ctf [key(C#EVS8-1-1-2.SubCipher2)  .]

								:apply(csb22#8)

									-- Goal`8-1-1-2-3-1-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`8-1-1-2-3-1-1-1-2 Success by reduction
								:apply (rd)

						-- Goal`8-1-1-2-3-1-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
						:def csb23#8 = :ctf [P0#Prin  .]

						:apply(csb23#8)

							-- Goal`8-1-1-2-3-1-2-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
							:def csb24#8 = :ctf [c@Cipher1 \in cenc1(N0#EVS8-1-1-2.Network)  .]

							:apply(csb24#8)

								-- Goal`8-1-1-2-3-1-2-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
								:def csb25#8 = :ctf [key(C#EVS8-1-1-2.SubCipher2)  .]

								:apply(csb25#8)

									-- Goal`8-1-1-2-3-1-2-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`8-1-1-2-3-1-2-1-2 Success by reduction
								:apply (rd)

					-- Goal`8-1-1-2-3-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
					:def csb26#8 = :ctf {eq nonce(c@Cipher1)  = nonce2(C#EVS8-1-1-2.SubCipher2) .}

					:apply(csb26#8)

						-- Goal`8-1-1-2-3-2-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
						:def csb27#8 = :ctf {eq nonce1(C#EVS8-1-1-2.SubCipher2)  = nonce2(C#EVS8-1-1-2.SubCipher2) .}

						:apply(csb27#8)

							-- Goal`8-1-1-2-3-2-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
							:def csb28#8 = :ctf [P0#Prin  .]

							:apply(csb28#8)

								-- Goal`8-1-1-2-3-2-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
								:def csb29#8 = :ctf [c@Cipher1 \in cenc1(N0#EVS8-1-1-2.Network)  .]

								:apply(csb29#8)

									-- Goal`8-1-1-2-3-2-1-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
									:def csb30#8 = :ctf [key(C#EVS8-1-1-2.SubCipher2)  .]

									:apply(csb30#8)

										-- Goal`8-1-1-2-3-2-1-1-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`8-1-1-2-3-2-1-1-1-2 Success by reduction
									:apply (rd)

							-- Goal`8-1-1-2-3-2-1-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
							:def csb31#8 = :ctf [P0#Prin  .]

							:apply(csb31#8)

								-- Goal`8-1-1-2-3-2-1-2-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
								:def csb32#8 = :ctf [c@Cipher1 \in cenc1(N0#EVS8-1-1-2.Network)  .]

								:apply(csb32#8)

									-- Goal`8-1-1-2-3-2-1-2-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
									:def csb33#8 = :ctf [key(C#EVS8-1-1-2.SubCipher2)  .]

									:apply(csb33#8)

										-- Goal`8-1-1-2-3-2-1-2-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`8-1-1-2-3-2-1-2-1-2 Success by reduction
									:apply (rd)

						-- Goal`8-1-1-2-3-2-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
						:def csb34#8 = :ctf [P0#Prin  .]

						:apply(csb34#8)

							-- Goal`8-1-1-2-3-2-2-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
							:def csb35#8 = :ctf [c@Cipher1 \in cenc1(N0#EVS8-1-1-2.Network)  .]

							:apply(csb35#8)

								-- Goal`8-1-1-2-3-2-2-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
								:def csb36#8 = :ctf [nonce(c@Cipher1)  .]

								:apply(csb36#8)

									-- Goal`8-1-1-2-3-2-2-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
									:def csb37#8 = :ctf {eq P#CS8-1-1-2-3-2-2-1-1.Prin  = P#Prin .}

									:apply(csb37#8)

										-- Goal`8-1-1-2-3-2-2-1-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
										:def csb38#8 = :ctf {eq R#CS8-1-1-2-3-2-2-1-1.Rand  = R#Rand .}

										:apply(csb38#8)

											-- Goal`8-1-1-2-3-2-2-1-1-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
											:def csb39#8 = :ctf [P0#CS8-1-1-2-3-2-2-1-1.Prin  .]

											:apply(csb39#8)

												-- Goal`8-1-1-2-3-2-2-1-1-1-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`8-1-1-2-3-2-2-1-1-1-1-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

										-- Goal`8-1-1-2-3-2-2-1-1-1-2 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

								-- Goal`8-1-1-2-3-2-2-1-2 Success by reduction
								:apply (rd)

				-- Goal`8-1-1-2-4  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
				:def csb40#8 = :ctf {eq nonce(c@Cipher1)  = nonce(C#EVS8-1-1-2.SubCipher3) .}

				:apply(csb40#8)

					-- Goal`8-1-1-2-4-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
					:def csb41#8 = :ctf [P0#Prin  .]

					:apply(csb41#8)

						-- Goal`8-1-1-2-4-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
						:def csb42#8 = :ctf [c@Cipher1 \in cenc1(N0#EVS8-1-1-2.Network)  .]

						:apply(csb42#8)

							-- Goal`8-1-1-2-4-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
							:def csb43#8 = :ctf [key(C#EVS8-1-1-2.SubCipher3)  .]

							:apply(csb43#8)

								-- Goal`8-1-1-2-4-1-1-1-1 Success by reduction
								:apply (rd)

							-- Goal`8-1-1-2-4-1-1-2 Success by reduction
							:apply (rd)

					-- Goal`8-1-1-2-4-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
					:def csb44#8 = :ctf [P0#Prin  .]

					:apply(csb44#8)

						-- Goal`8-1-1-2-4-2-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
						:def csb45#8 = :ctf [c@Cipher1 \in cenc1(N0#EVS8-1-1-2.Network)  .]

						:apply(csb45#8)

							-- Goal`8-1-1-2-4-2-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
							:def csb46#8 = :ctf [nonce(c@Cipher1)  .]

							:apply(csb46#8)

								-- Goal`8-1-1-2-4-2-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
								:def csb47#8 = :ctf {eq P#CS8-1-1-2-4-2-1-1.Prin  = P#Prin .}

								:apply(csb47#8)

									-- Goal`8-1-1-2-4-2-1-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
									:def csb48#8 = :ctf {eq R#CS8-1-1-2-4-2-1-1.Rand  = R#Rand .}

									:apply(csb48#8)

										-- Goal`8-1-1-2-4-2-1-1-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
										:def csb49#8 = :ctf [P0#CS8-1-1-2-4-2-1-1.Prin  .]

										:apply(csb49#8)

											-- Goal`8-1-1-2-4-2-1-1-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`8-1-1-2-4-2-1-1-1-1-2 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

									-- Goal`8-1-1-2-4-2-1-1-1-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

							-- Goal`8-1-1-2-4-2-1-2 Success by reduction
							:apply (rd)

		-- Goal`8-1-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
		:def csb50#8 = :ctf {eq EVS8-1.SubRand  = R#Rand .}

		:apply(csb50#8)

			-- Goal`8-1-2-1 Success by implication and reduction.
			:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

			:apply (rd)

			-- Goal`8-1-2-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
			:def csb51#8 = :ctf [R#Rand \in U0#EVS8-1.URand  .]

			:apply(csb51#8)

				-- Goal`8-1-2-2-1 Success by implication and reduction.
				:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

				:apply (rd)

				-- Goal`8-1-2-2-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
				:def csb52#8 = :ctf {eq enc1(P0#Prin, n(P#Prin, P0#Prin, R#Rand), P#Prin)  = c@Cipher1 .}

				:apply(csb52#8)

					-- Goal`8-1-2-2-2-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
					:def csb53#8 = :ctf [key(c@Cipher1)  .]

					:apply(csb53#8)

						-- Goal`8-1-2-2-2-1-1 Success by reduction
						:apply (rd)

					-- Goal`8-1-2-2-2-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
	:def csb54#8 = :cvs [nw(S#Sys)  .]

	:apply(csb54#8)

						-- Goal`8-1-2-2-2-2-1 Success by reduction
						:apply (rd)

						-- Goal`8-1-2-2-2-2-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
						:def csb55#8 = :ctf {eq C#EVS8-1-2-2-2-2.SubCipher1  = c@Cipher1 .}

						:apply(csb55#8)

							-- Goal`8-1-2-2-2-2-2-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
							:def csb56#8 = :ctf [P0#Prin  .]

							:apply(csb56#8)

								-- Goal`8-1-2-2-2-2-2-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
								:def csb57#8 = :ctf [key(c@Cipher1)  .]

								:apply(csb57#8)

									-- Goal`8-1-2-2-2-2-2-1-1-1 Success by reduction
									:apply (rd)

							-- Goal`8-1-2-2-2-2-2-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
							:def csb58#8 = :ctf {eq nonce(C#EVS8-1-2-2-2-2.SubCipher1)  = nonce(c@Cipher1) .}

							:apply(csb58#8)

								-- Goal`8-1-2-2-2-2-2-2-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
								:def csb59#8 = :ctf [P0#Prin  .]

								:apply(csb59#8)

									-- Goal`8-1-2-2-2-2-2-2-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
									:def csb60#8 = :ctf [c@Cipher1 \in cenc1(N0#EVS8-1-2-2-2-2.Network)  .]

									:apply(csb60#8)

										-- Goal`8-1-2-2-2-2-2-2-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
										:def csb61#8 = :ctf [key(C#EVS8-1-2-2-2-2.SubCipher1)  .]

										:apply(csb61#8)

											-- Goal`8-1-2-2-2-2-2-2-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`8-1-2-2-2-2-2-2-1-1-2 Success by reduction
										:apply (rd)

								-- Goal`8-1-2-2-2-2-2-2-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
								:def csb62#8 = :ctf [P0#Prin  .]

								:apply(csb62#8)

									-- Goal`8-1-2-2-2-2-2-2-2-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
									:def csb63#8 = :ctf [c@Cipher1 \in cenc1(N0#EVS8-1-2-2-2-2.Network)  .]

									:apply(csb63#8)

										-- Goal`8-1-2-2-2-2-2-2-2-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
										:def csb64#8 = :ctf [nonce(c@Cipher1)  .]

										:apply(csb64#8)

											-- Goal`8-1-2-2-2-2-2-2-2-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
											:def csb65#8 = :ctf {eq P#CS8-1-2-2-2-2-2-2-2-1-1.Prin  = P#Prin .}

											:apply(csb65#8)

												-- Goal`8-1-2-2-2-2-2-2-2-1-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
												:def csb66#8 = :ctf {eq R#CS8-1-2-2-2-2-2-2-2-1-1.Rand  = R#Rand .}

												:apply(csb66#8)

													-- Goal`8-1-2-2-2-2-2-2-2-1-1-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
													:def csb67#8 = :ctf [P0#CS8-1-2-2-2-2-2-2-2-1-1.Prin  .]

													:apply(csb67#8)

														-- Goal`8-1-2-2-2-2-2-2-2-1-1-1-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`8-1-2-2-2-2-2-2-2-1-1-1-1-2 Success by implication and reduction.
													:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

													:apply (rd)

												-- Goal`8-1-2-2-2-2-2-2-2-1-1-1-2 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

										-- Goal`8-1-2-2-2-2-2-2-2-1-2 Success by reduction
										:apply (rd)

						-- Goal`8-1-2-2-2-2-3  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
						:def csb68#8 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#EVS8-1-2-2-2-2.SubCipher2) .}

						:apply(csb68#8)

							-- Goal`8-1-2-2-2-2-3-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
							:def csb69#8 = :ctf {eq nonce1(C#EVS8-1-2-2-2-2.SubCipher2)  = nonce2(C#EVS8-1-2-2-2-2.SubCipher2) .}

							:apply(csb69#8)

								-- Goal`8-1-2-2-2-2-3-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
								:def csb70#8 = :ctf [P0#Prin  .]

								:apply(csb70#8)

									-- Goal`8-1-2-2-2-2-3-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
									:def csb71#8 = :ctf [c@Cipher1 \in cenc1(N0#EVS8-1-2-2-2-2.Network)  .]

									:apply(csb71#8)

										-- Goal`8-1-2-2-2-2-3-1-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
										:def csb72#8 = :ctf [key(C#EVS8-1-2-2-2-2.SubCipher2)  .]

										:apply(csb72#8)

											-- Goal`8-1-2-2-2-2-3-1-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`8-1-2-2-2-2-3-1-1-1-2 Success by reduction
										:apply (rd)

								-- Goal`8-1-2-2-2-2-3-1-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
								:def csb73#8 = :ctf [P0#Prin  .]

								:apply(csb73#8)

									-- Goal`8-1-2-2-2-2-3-1-2-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
									:def csb74#8 = :ctf [c@Cipher1 \in cenc1(N0#EVS8-1-2-2-2-2.Network)  .]

									:apply(csb74#8)

										-- Goal`8-1-2-2-2-2-3-1-2-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
										:def csb75#8 = :ctf [key(C#EVS8-1-2-2-2-2.SubCipher2)  .]

										:apply(csb75#8)

											-- Goal`8-1-2-2-2-2-3-1-2-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`8-1-2-2-2-2-3-1-2-1-2 Success by reduction
										:apply (rd)

							-- Goal`8-1-2-2-2-2-3-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
							:def csb76#8 = :ctf {eq nonce(c@Cipher1)  = nonce2(C#EVS8-1-2-2-2-2.SubCipher2) .}

							:apply(csb76#8)

								-- Goal`8-1-2-2-2-2-3-2-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
								:def csb77#8 = :ctf {eq nonce1(C#EVS8-1-2-2-2-2.SubCipher2)  = nonce2(C#EVS8-1-2-2-2-2.SubCipher2) .}

								:apply(csb77#8)

									-- Goal`8-1-2-2-2-2-3-2-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
									:def csb78#8 = :ctf [P0#Prin  .]

									:apply(csb78#8)

										-- Goal`8-1-2-2-2-2-3-2-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
										:def csb79#8 = :ctf [c@Cipher1 \in cenc1(N0#EVS8-1-2-2-2-2.Network)  .]

										:apply(csb79#8)

											-- Goal`8-1-2-2-2-2-3-2-1-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
											:def csb80#8 = :ctf [key(C#EVS8-1-2-2-2-2.SubCipher2)  .]

											:apply(csb80#8)

												-- Goal`8-1-2-2-2-2-3-2-1-1-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`8-1-2-2-2-2-3-2-1-1-1-2 Success by reduction
											:apply (rd)

									-- Goal`8-1-2-2-2-2-3-2-1-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
									:def csb81#8 = :ctf [P0#Prin  .]

									:apply(csb81#8)

										-- Goal`8-1-2-2-2-2-3-2-1-2-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
										:def csb82#8 = :ctf [c@Cipher1 \in cenc1(N0#EVS8-1-2-2-2-2.Network)  .]

										:apply(csb82#8)

											-- Goal`8-1-2-2-2-2-3-2-1-2-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
											:def csb83#8 = :ctf [key(C#EVS8-1-2-2-2-2.SubCipher2)  .]

											:apply(csb83#8)

												-- Goal`8-1-2-2-2-2-3-2-1-2-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`8-1-2-2-2-2-3-2-1-2-1-2 Success by reduction
											:apply (rd)

								-- Goal`8-1-2-2-2-2-3-2-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
								:def csb84#8 = :ctf [P0#Prin  .]

								:apply(csb84#8)

									-- Goal`8-1-2-2-2-2-3-2-2-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
									:def csb85#8 = :ctf [c@Cipher1 \in cenc1(N0#EVS8-1-2-2-2-2.Network)  .]

									:apply(csb85#8)

										-- Goal`8-1-2-2-2-2-3-2-2-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
										:def csb86#8 = :ctf [nonce(c@Cipher1)  .]

										:apply(csb86#8)

											-- Goal`8-1-2-2-2-2-3-2-2-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
											:def csb87#8 = :ctf {eq P#CS8-1-2-2-2-2-3-2-2-1-1.Prin  = P#Prin .}

											:apply(csb87#8)

												-- Goal`8-1-2-2-2-2-3-2-2-1-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
												:def csb88#8 = :ctf {eq R#CS8-1-2-2-2-2-3-2-2-1-1.Rand  = R#Rand .}

												:apply(csb88#8)

													-- Goal`8-1-2-2-2-2-3-2-2-1-1-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
													:def csb89#8 = :ctf [P0#CS8-1-2-2-2-2-3-2-2-1-1.Prin  .]

													:apply(csb89#8)

														-- Goal`8-1-2-2-2-2-3-2-2-1-1-1-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`8-1-2-2-2-2-3-2-2-1-1-1-1-2 Success by implication and reduction.
													:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

													:apply (rd)

												-- Goal`8-1-2-2-2-2-3-2-2-1-1-1-2 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

										-- Goal`8-1-2-2-2-2-3-2-2-1-2 Success by reduction
										:apply (rd)

						-- Goal`8-1-2-2-2-2-4  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
						:def csb90#8 = :ctf {eq nonce(c@Cipher1)  = nonce(C#EVS8-1-2-2-2-2.SubCipher3) .}

						:apply(csb90#8)

							-- Goal`8-1-2-2-2-2-4-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
							:def csb91#8 = :ctf [P0#Prin  .]

							:apply(csb91#8)

								-- Goal`8-1-2-2-2-2-4-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
								:def csb92#8 = :ctf [c@Cipher1 \in cenc1(N0#EVS8-1-2-2-2-2.Network)  .]

								:apply(csb92#8)

									-- Goal`8-1-2-2-2-2-4-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
									:def csb93#8 = :ctf [key(C#EVS8-1-2-2-2-2.SubCipher3)  .]

									:apply(csb93#8)

										-- Goal`8-1-2-2-2-2-4-1-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`8-1-2-2-2-2-4-1-1-2 Success by reduction
									:apply (rd)

							-- Goal`8-1-2-2-2-2-4-2  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
							:def csb94#8 = :ctf [P0#Prin  .]

							:apply(csb94#8)

								-- Goal`8-1-2-2-2-2-4-2-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
								:def csb95#8 = :ctf [c@Cipher1 \in cenc1(N0#EVS8-1-2-2-2-2.Network)  .]

								:apply(csb95#8)

									-- Goal`8-1-2-2-2-2-4-2-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
									:def csb96#8 = :ctf [nonce(c@Cipher1)  .]

									:apply(csb96#8)

										-- Goal`8-1-2-2-2-2-4-2-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
										:def csb97#8 = :ctf {eq P#CS8-1-2-2-2-2-4-2-1-1.Prin  = P#Prin .}

										:apply(csb97#8)

											-- Goal`8-1-2-2-2-2-4-2-1-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
											:def csb98#8 = :ctf {eq R#CS8-1-2-2-2-2-4-2-1-1.Rand  = R#Rand .}

											:apply(csb98#8)

												-- Goal`8-1-2-2-2-2-4-2-1-1-1-1-1  -  inv140(sdm1(S#Sys, P#Prin, P0#Prin, R#Rand), c@Cipher1)  - Success
												:def csb99#8 = :ctf [P0#CS8-1-2-2-2-2-4-2-1-1.Prin  .]

												:apply(csb99#8)

													-- Goal`8-1-2-2-2-2-4-2-1-1-1-1-1-1 Success by reduction
													:apply (rd)

												-- Goal`8-1-2-2-2-2-4-2-1-1-1-1-2 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

											-- Goal`8-1-2-2-2-2-4-2-1-1-1-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

									-- Goal`8-1-2-2-2-2-4-2-1-2 Success by reduction
									:apply (rd)


:sel(4)
	:apply(tc)

	-- Goal`4-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
	:def csb1#4 = :cvs [nw(S#Sys)  .]

	:apply(csb1#4)

		-- Goal`4-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
		:def csb2#4 = :ctf [creator(N#Nonce)  .]

		:apply(csb2#4)

			-- Goal`4-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
			:def csb3#4 = :ctf [creator(N0#Nonce)  .]

			:apply(csb3#4)

				-- Goal`4-1-1-1-1 Success by reduction
				:apply (rd)

		-- Goal`4-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
		:def csb4#4 = :ctf {eq nonce(C#EVS4-1.SubCipher1)  = N#Nonce .}

		:apply(csb4#4)

			-- Goal`4-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
			:def csb5#4 = :ctf {eq N#Nonce  = N0#Nonce .}

			:apply(csb5#4)

				-- Goal`4-1-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
				:def csb6#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

				:apply(csb6#4)

					-- Goal`4-1-2-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
					:def csb7#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

					:apply(csb7#4)

						-- Goal`4-1-2-1-1-1-1 Success by reduction
						:apply (rd)

						-- Goal`4-1-2-1-1-1-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

				-- Goal`4-1-2-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
				:def csb8#4 = :ctf [N0#Nonce \in cnonce(N0#EVS4-1.Network)  .]

				:apply(csb8#4)

					-- Goal`4-1-2-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
					:def csb9#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

					:apply(csb9#4)

						-- Goal`4-1-2-1-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb10#4 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

						:apply(csb10#4)

							-- Goal`4-1-2-1-2-1-1-1 Success by reduction
							:apply (rd)

							-- Goal`4-1-2-1-2-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb11#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

							:apply(csb11#4)

								-- Goal`4-1-2-1-2-1-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb12#4 = :ctf [P0#Prin  .]

								:apply(csb12#4)

									-- Goal`4-1-2-1-2-1-1-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`4-1-2-1-2-1-1-2-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

					-- Goal`4-1-2-1-2-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)

			-- Goal`4-1-2-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
			:def csb13#4 = :ctf {eq nonce(C#EVS4-1.SubCipher1)  = N0#Nonce .}

			:apply(csb13#4)

				-- Goal`4-1-2-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
				:def csb14#4 = :ctf {eq N#Nonce  = N0#Nonce .}

				:apply(csb14#4)

					-- Goal`4-1-2-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
					:def csb15#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

					:apply(csb15#4)

						-- Goal`4-1-2-2-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb16#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

						:apply(csb16#4)

							-- Goal`4-1-2-2-1-1-1-1 Success by reduction
							:apply (rd)

							-- Goal`4-1-2-2-1-1-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

					-- Goal`4-1-2-2-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
					:def csb17#4 = :ctf [N#Nonce \in cnonce(N0#EVS4-1.Network)  .]

					:apply(csb17#4)

						-- Goal`4-1-2-2-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb18#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

						:apply(csb18#4)

							-- Goal`4-1-2-2-1-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb19#4 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

							:apply(csb19#4)

								-- Goal`4-1-2-2-1-2-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb20#4 = :ctf [P0#Prin  .]

								:apply(csb20#4)

									-- Goal`4-1-2-2-1-2-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`4-1-2-2-1-2-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb21#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

								:apply(csb21#4)

									-- Goal`4-1-2-2-1-2-1-1-2-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-2-2-1-2-1-1-2-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

						-- Goal`4-1-2-2-1-2-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

				-- Goal`4-1-2-2-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
				:def csb22#4 = :ctf [N#Nonce \in cnonce(N0#EVS4-1.Network)  .]

				:apply(csb22#4)

					-- Goal`4-1-2-2-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
					:def csb23#4 = :ctf [N0#Nonce \in cnonce(N0#EVS4-1.Network)  .]

					:apply(csb23#4)

						-- Goal`4-1-2-2-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb24#4 = :ctf {eq C#EVS4-1.SubCipher1  = c@Cipher1 .}

						:apply(csb24#4)

							-- Goal`4-1-2-2-2-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb25#4 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

							:apply(csb25#4)

								-- Goal`4-1-2-2-2-1-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb26#4 = :ctf {eq N#Nonce  = N0#Nonce .}

								:apply(csb26#4)

									-- Goal`4-1-2-2-2-1-1-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
									:def csb27#4 = :ctf [key(c@Cipher1)  .]

									:apply(csb27#4)

										-- Goal`4-1-2-2-2-1-1-1-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`4-1-2-2-2-1-1-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
									:def csb28#4 = :ctf [key(c@Cipher1)  .]

									:apply(csb28#4)

										-- Goal`4-1-2-2-2-1-1-1-1-2-1 Success by reduction
										:apply (rd)

								-- Goal`4-1-2-2-2-1-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb29#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

								:apply(csb29#4)

									-- Goal`4-1-2-2-2-1-1-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
									:def csb30#4 = :ctf {eq N#Nonce  = N0#Nonce .}

									:apply(csb30#4)

										-- Goal`4-1-2-2-2-1-1-1-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb31#4 = :ctf [key(c@Cipher1)  .]

										:apply(csb31#4)

											-- Goal`4-1-2-2-2-1-1-1-2-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`4-1-2-2-2-1-1-1-2-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb32#4 = :ctf [key(c@Cipher1)  .]

										:apply(csb32#4)

											-- Goal`4-1-2-2-2-1-1-1-2-1-2-1 Success by reduction
											:apply (rd)

									-- Goal`4-1-2-2-2-1-1-1-2-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

							-- Goal`4-1-2-2-2-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb33#4 = :ctf {eq nonce(C#EVS4-1.SubCipher1)  = nonce(c@Cipher1) .}

							:apply(csb33#4)

								-- Goal`4-1-2-2-2-1-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb34#4 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

								:apply(csb34#4)

									-- Goal`4-1-2-2-2-1-1-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
									:def csb35#4 = :ctf {eq N#Nonce  = N0#Nonce .}

									:apply(csb35#4)

										-- Goal`4-1-2-2-2-1-1-2-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb36#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

										:apply(csb36#4)

											-- Goal`4-1-2-2-2-1-1-2-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`4-1-2-2-2-1-1-2-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb37#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

										:apply(csb37#4)

											-- Goal`4-1-2-2-2-1-1-2-1-1-2-1 Success by reduction
											:apply (rd)

									-- Goal`4-1-2-2-2-1-1-2-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
									:def csb38#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

									:apply(csb38#4)

										-- Goal`4-1-2-2-2-1-1-2-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb39#4 = :ctf {eq N#Nonce  = N0#Nonce .}

										:apply(csb39#4)

											-- Goal`4-1-2-2-2-1-1-2-1-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
											:def csb40#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

											:apply(csb40#4)

												-- Goal`4-1-2-2-2-1-1-2-1-2-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`4-1-2-2-2-1-1-2-1-2-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
											:def csb41#4 = :ctf [key(C#EVS4-1.SubCipher1)  .]

											:apply(csb41#4)

												-- Goal`4-1-2-2-2-1-1-2-1-2-1-2-1 Success by reduction
												:apply (rd)

										-- Goal`4-1-2-2-2-1-1-2-1-2-2 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

								-- Goal`4-1-2-2-2-1-1-2-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb42#4 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

								:apply(csb42#4)

									-- Goal`4-1-2-2-2-1-1-2-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
									:def csb43#4 = :ctf {eq N#Nonce  = N0#Nonce .}

									:apply(csb43#4)

										-- Goal`4-1-2-2-2-1-1-2-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb44#4 = :ctf [P0#Prin  .]

										:apply(csb44#4)

											-- Goal`4-1-2-2-2-1-1-2-2-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`4-1-2-2-2-1-1-2-2-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb45#4 = :ctf [P0#Prin  .]

										:apply(csb45#4)

											-- Goal`4-1-2-2-2-1-1-2-2-1-2-1 Success by reduction
											:apply (rd)

									-- Goal`4-1-2-2-2-1-1-2-2-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
									:def csb46#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

									:apply(csb46#4)

										-- Goal`4-1-2-2-2-1-1-2-2-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb47#4 = :ctf {eq N#Nonce  = N0#Nonce .}

										:apply(csb47#4)

											-- Goal`4-1-2-2-2-1-1-2-2-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
											:def csb48#4 = :ctf [P0#Prin  .]

											:apply(csb48#4)

												-- Goal`4-1-2-2-2-1-1-2-2-2-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`4-1-2-2-2-1-1-2-2-2-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
											:def csb49#4 = :ctf [P0#Prin  .]

											:apply(csb49#4)

												-- Goal`4-1-2-2-2-1-1-2-2-2-1-2-1 Success by reduction
												:apply (rd)

										-- Goal`4-1-2-2-2-1-1-2-2-2-2 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

						-- Goal`4-1-2-2-2-1-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

					-- Goal`4-1-2-2-2-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)

		-- Goal`4-1-3  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
		:def csb50#4 = :ctf {eq nonce1(C#EVS4-1.SubCipher2)  = N#Nonce .}

		:apply(csb50#4)

			-- Goal`4-1-3-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
			:def csb51#4 = :ctf {eq N#Nonce  = N0#Nonce .}

			:apply(csb51#4)

				-- Goal`4-1-3-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
				:def csb52#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = N0#Nonce .}

				:apply(csb52#4)

					-- Goal`4-1-3-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
					:def csb53#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

					:apply(csb53#4)

						-- Goal`4-1-3-1-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb54#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

						:apply(csb54#4)

							-- Goal`4-1-3-1-1-1-1-1 Success by reduction
							:apply (rd)

							-- Goal`4-1-3-1-1-1-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

					-- Goal`4-1-3-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
					:def csb55#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

					:apply(csb55#4)

						-- Goal`4-1-3-1-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb56#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

						:apply(csb56#4)

							-- Goal`4-1-3-1-1-2-1-1 Success by reduction
							:apply (rd)

							-- Goal`4-1-3-1-1-2-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

				-- Goal`4-1-3-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
				:def csb57#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = N#Nonce .}

				:apply(csb57#4)

					-- Goal`4-1-3-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
					:def csb58#4 = :ctf [N0#Nonce \in cnonce(N0#EVS4-1.Network)  .]

					:apply(csb58#4)

						-- Goal`4-1-3-1-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb59#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

						:apply(csb59#4)

							-- Goal`4-1-3-1-2-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb60#4 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

							:apply(csb60#4)

								-- Goal`4-1-3-1-2-1-1-1-1 Success by reduction
								:apply (rd)

								-- Goal`4-1-3-1-2-1-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb61#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

								:apply(csb61#4)

									-- Goal`4-1-3-1-2-1-1-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
									:def csb62#4 = :ctf [P0#Prin  .]

									:apply(csb62#4)

										-- Goal`4-1-3-1-2-1-1-1-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`4-1-3-1-2-1-1-1-2-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

						-- Goal`4-1-3-1-2-1-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

					-- Goal`4-1-3-1-2-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
					:def csb63#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = N0#Nonce .}

					:apply(csb63#4)

						-- Goal`4-1-3-1-2-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb64#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

						:apply(csb64#4)

							-- Goal`4-1-3-1-2-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb65#4 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

							:apply(csb65#4)

								-- Goal`4-1-3-1-2-2-1-1-1 Success by reduction
								:apply (rd)

								-- Goal`4-1-3-1-2-2-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb66#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

								:apply(csb66#4)

									-- Goal`4-1-3-1-2-2-1-1-2-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-3-1-2-2-1-1-2-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

						-- Goal`4-1-3-1-2-2-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb67#4 = :ctf [N0#Nonce \in cnonce(N0#EVS4-1.Network)  .]

						:apply(csb67#4)

							-- Goal`4-1-3-1-2-2-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb68#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

							:apply(csb68#4)

								-- Goal`4-1-3-1-2-2-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb69#4 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

								:apply(csb69#4)

									-- Goal`4-1-3-1-2-2-2-1-1-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-3-1-2-2-2-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
									:def csb70#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

									:apply(csb70#4)

										-- Goal`4-1-3-1-2-2-2-1-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb71#4 = :ctf [P0#Prin  .]

										:apply(csb71#4)

											-- Goal`4-1-3-1-2-2-2-1-1-2-1-1 Success by reduction
											:apply (rd)

										-- Goal`4-1-3-1-2-2-2-1-1-2-2 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

							-- Goal`4-1-3-1-2-2-2-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

			-- Goal`4-1-3-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
			:def csb72#4 = :ctf {eq nonce1(C#EVS4-1.SubCipher2)  = N0#Nonce .}

			:apply(csb72#4)

				-- Goal`4-1-3-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
				:def csb73#4 = :ctf {eq N#Nonce  = N0#Nonce .}

				:apply(csb73#4)

					-- Goal`4-1-3-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
					:def csb74#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = N0#Nonce .}

					:apply(csb74#4)

						-- Goal`4-1-3-2-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb75#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

						:apply(csb75#4)

							-- Goal`4-1-3-2-1-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb76#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

							:apply(csb76#4)

								-- Goal`4-1-3-2-1-1-1-1-1 Success by reduction
								:apply (rd)

								-- Goal`4-1-3-2-1-1-1-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

						-- Goal`4-1-3-2-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb77#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

						:apply(csb77#4)

							-- Goal`4-1-3-2-1-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb78#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

							:apply(csb78#4)

								-- Goal`4-1-3-2-1-1-2-1-1 Success by reduction
								:apply (rd)

								-- Goal`4-1-3-2-1-1-2-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

					-- Goal`4-1-3-2-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
					:def csb79#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = N#Nonce .}

					:apply(csb79#4)

						-- Goal`4-1-3-2-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb80#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

						:apply(csb80#4)

							-- Goal`4-1-3-2-1-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb81#4 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

							:apply(csb81#4)

								-- Goal`4-1-3-2-1-2-1-1-1 Success by reduction
								:apply (rd)

								-- Goal`4-1-3-2-1-2-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb82#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

								:apply(csb82#4)

									-- Goal`4-1-3-2-1-2-1-1-2-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-3-2-1-2-1-1-2-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

						-- Goal`4-1-3-2-1-2-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb83#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = N0#Nonce .}

						:apply(csb83#4)

							-- Goal`4-1-3-2-1-2-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb84#4 = :ctf [N#Nonce \in cnonce(N0#EVS4-1.Network)  .]

							:apply(csb84#4)

								-- Goal`4-1-3-2-1-2-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb85#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

								:apply(csb85#4)

									-- Goal`4-1-3-2-1-2-2-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
									:def csb86#4 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

									:apply(csb86#4)

										-- Goal`4-1-3-2-1-2-2-1-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb87#4 = :ctf [P0#Prin  .]

										:apply(csb87#4)

											-- Goal`4-1-3-2-1-2-2-1-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`4-1-3-2-1-2-2-1-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb88#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

										:apply(csb88#4)

											-- Goal`4-1-3-2-1-2-2-1-1-1-2-1 Success by reduction
											:apply (rd)

											-- Goal`4-1-3-2-1-2-2-1-1-1-2-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

								-- Goal`4-1-3-2-1-2-2-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`4-1-3-2-1-2-2-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb89#4 = :ctf [N#Nonce \in cnonce(N0#EVS4-1.Network)  .]

							:apply(csb89#4)

								-- Goal`4-1-3-2-1-2-2-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb90#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

								:apply(csb90#4)

									-- Goal`4-1-3-2-1-2-2-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
									:def csb91#4 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

									:apply(csb91#4)

										-- Goal`4-1-3-2-1-2-2-2-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb92#4 = :ctf [P0#Prin  .]

										:apply(csb92#4)

											-- Goal`4-1-3-2-1-2-2-2-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`4-1-3-2-1-2-2-2-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb93#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

										:apply(csb93#4)

											-- Goal`4-1-3-2-1-2-2-2-1-1-2-1 Success by reduction
											:apply (rd)

											-- Goal`4-1-3-2-1-2-2-2-1-1-2-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

								-- Goal`4-1-3-2-1-2-2-2-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

				-- Goal`4-1-3-2-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
				:def csb94#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = N#Nonce .}

				:apply(csb94#4)

					-- Goal`4-1-3-2-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
					:def csb95#4 = :ctf {eq N#Nonce  = N0#Nonce .}

					:apply(csb95#4)

						-- Goal`4-1-3-2-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb96#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

						:apply(csb96#4)

							-- Goal`4-1-3-2-2-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb97#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

							:apply(csb97#4)

								-- Goal`4-1-3-2-2-1-1-1-1 Success by reduction
								:apply (rd)

								-- Goal`4-1-3-2-2-1-1-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

						-- Goal`4-1-3-2-2-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb98#4 = :ctf [N0#Nonce \in cnonce(N0#EVS4-1.Network)  .]

						:apply(csb98#4)

							-- Goal`4-1-3-2-2-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb99#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

							:apply(csb99#4)

								-- Goal`4-1-3-2-2-1-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb100#4 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

								:apply(csb100#4)

									-- Goal`4-1-3-2-2-1-2-1-1-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-3-2-2-1-2-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
									:def csb101#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

									:apply(csb101#4)

										-- Goal`4-1-3-2-2-1-2-1-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb102#4 = :ctf [P0#Prin  .]

										:apply(csb102#4)

											-- Goal`4-1-3-2-2-1-2-1-1-2-1-1 Success by reduction
											:apply (rd)

										-- Goal`4-1-3-2-2-1-2-1-1-2-2 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

							-- Goal`4-1-3-2-2-1-2-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

					-- Goal`4-1-3-2-2-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
					:def csb103#4 = :ctf {eq nonce2(C#EVS4-1.SubCipher2)  = N0#Nonce .}

					:apply(csb103#4)

						-- Goal`4-1-3-2-2-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb104#4 = :ctf {eq N#Nonce  = N0#Nonce .}

						:apply(csb104#4)

							-- Goal`4-1-3-2-2-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb105#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

							:apply(csb105#4)

								-- Goal`4-1-3-2-2-2-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb106#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

								:apply(csb106#4)

									-- Goal`4-1-3-2-2-2-1-1-1-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-3-2-2-2-1-1-1-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

							-- Goal`4-1-3-2-2-2-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb107#4 = :ctf [N#Nonce \in cnonce(N0#EVS4-1.Network)  .]

							:apply(csb107#4)

								-- Goal`4-1-3-2-2-2-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb108#4 = :ctf [key(C#EVS4-1.SubCipher2)  .]

								:apply(csb108#4)

									-- Goal`4-1-3-2-2-2-1-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
									:def csb109#4 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

									:apply(csb109#4)

										-- Goal`4-1-3-2-2-2-1-2-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb110#4 = :ctf [P0#Prin  .]

										:apply(csb110#4)

											-- Goal`4-1-3-2-2-2-1-2-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`4-1-3-2-2-2-1-2-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb111#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

										:apply(csb111#4)

											-- Goal`4-1-3-2-2-2-1-2-1-1-2-1 Success by reduction
											:apply (rd)

											-- Goal`4-1-3-2-2-2-1-2-1-1-2-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

								-- Goal`4-1-3-2-2-2-1-2-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

						-- Goal`4-1-3-2-2-2-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb112#4 = :ctf [N#Nonce \in cnonce(N0#EVS4-1.Network)  .]

						:apply(csb112#4)

							-- Goal`4-1-3-2-2-2-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb113#4 = :ctf [N0#Nonce \in cnonce(N0#EVS4-1.Network)  .]

							:apply(csb113#4)

								-- Goal`4-1-3-2-2-2-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb114#4 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

								:apply(csb114#4)

									-- Goal`4-1-3-2-2-2-2-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
									:def csb115#4 = :ctf {eq N#Nonce  = N0#Nonce .}

									:apply(csb115#4)

										-- Goal`4-1-3-2-2-2-2-1-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb116#4 = :ctf [P0#Prin  .]

										:apply(csb116#4)

											-- Goal`4-1-3-2-2-2-2-1-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`4-1-3-2-2-2-2-1-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb117#4 = :ctf [P0#Prin  .]

										:apply(csb117#4)

											-- Goal`4-1-3-2-2-2-2-1-1-1-2-1 Success by reduction
											:apply (rd)

									-- Goal`4-1-3-2-2-2-2-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
									:def csb118#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

									:apply(csb118#4)

										-- Goal`4-1-3-2-2-2-2-1-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
										:def csb119#4 = :ctf {eq N#Nonce  = N0#Nonce .}

										:apply(csb119#4)

											-- Goal`4-1-3-2-2-2-2-1-1-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
											:def csb120#4 = :ctf [P0#Prin  .]

											:apply(csb120#4)

												-- Goal`4-1-3-2-2-2-2-1-1-2-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`4-1-3-2-2-2-2-1-1-2-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
											:def csb121#4 = :ctf [P0#Prin  .]

											:apply(csb121#4)

												-- Goal`4-1-3-2-2-2-2-1-1-2-1-2-1 Success by reduction
												:apply (rd)

										-- Goal`4-1-3-2-2-2-2-1-1-2-2 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

								-- Goal`4-1-3-2-2-2-2-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`4-1-3-2-2-2-2-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

		-- Goal`4-1-4  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
		:def csb122#4 = :ctf {eq nonce(C#EVS4-1.SubCipher3)  = N#Nonce .}

		:apply(csb122#4)

			-- Goal`4-1-4-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
			:def csb123#4 = :ctf {eq N#Nonce  = N0#Nonce .}

			:apply(csb123#4)

				-- Goal`4-1-4-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
				:def csb124#4 = :ctf [key(C#EVS4-1.SubCipher3)  .]

				:apply(csb124#4)

					-- Goal`4-1-4-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
					:def csb125#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

					:apply(csb125#4)

						-- Goal`4-1-4-1-1-1-1 Success by reduction
						:apply (rd)

						-- Goal`4-1-4-1-1-1-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

				-- Goal`4-1-4-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
				:def csb126#4 = :ctf [N0#Nonce \in cnonce(N0#EVS4-1.Network)  .]

				:apply(csb126#4)

					-- Goal`4-1-4-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
					:def csb127#4 = :ctf [key(C#EVS4-1.SubCipher3)  .]

					:apply(csb127#4)

						-- Goal`4-1-4-1-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb128#4 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

						:apply(csb128#4)

							-- Goal`4-1-4-1-2-1-1-1 Success by reduction
							:apply (rd)

							-- Goal`4-1-4-1-2-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb129#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

							:apply(csb129#4)

								-- Goal`4-1-4-1-2-1-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb130#4 = :ctf [P0#Prin  .]

								:apply(csb130#4)

									-- Goal`4-1-4-1-2-1-1-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`4-1-4-1-2-1-1-2-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

					-- Goal`4-1-4-1-2-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)

			-- Goal`4-1-4-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
			:def csb131#4 = :ctf {eq nonce(C#EVS4-1.SubCipher3)  = N0#Nonce .}

			:apply(csb131#4)

				-- Goal`4-1-4-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
				:def csb132#4 = :ctf {eq N#Nonce  = N0#Nonce .}

				:apply(csb132#4)

					-- Goal`4-1-4-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
					:def csb133#4 = :ctf [key(C#EVS4-1.SubCipher3)  .]

					:apply(csb133#4)

						-- Goal`4-1-4-2-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb134#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

						:apply(csb134#4)

							-- Goal`4-1-4-2-1-1-1-1 Success by reduction
							:apply (rd)

							-- Goal`4-1-4-2-1-1-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

					-- Goal`4-1-4-2-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
					:def csb135#4 = :ctf [N#Nonce \in cnonce(N0#EVS4-1.Network)  .]

					:apply(csb135#4)

						-- Goal`4-1-4-2-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb136#4 = :ctf [key(C#EVS4-1.SubCipher3)  .]

						:apply(csb136#4)

							-- Goal`4-1-4-2-1-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb137#4 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

							:apply(csb137#4)

								-- Goal`4-1-4-2-1-2-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb138#4 = :ctf [P0#Prin  .]

								:apply(csb138#4)

									-- Goal`4-1-4-2-1-2-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`4-1-4-2-1-2-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb139#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

								:apply(csb139#4)

									-- Goal`4-1-4-2-1-2-1-1-2-1 Success by reduction
									:apply (rd)

									-- Goal`4-1-4-2-1-2-1-1-2-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

						-- Goal`4-1-4-2-1-2-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

				-- Goal`4-1-4-2-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
				:def csb140#4 = :ctf [N#Nonce \in cnonce(N0#EVS4-1.Network)  .]

				:apply(csb140#4)

					-- Goal`4-1-4-2-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
					:def csb141#4 = :ctf [N0#Nonce \in cnonce(N0#EVS4-1.Network)  .]

					:apply(csb141#4)

						-- Goal`4-1-4-2-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
						:def csb142#4 = :ctf {eq nonce(c@Cipher1)  = N#Nonce .}

						:apply(csb142#4)

							-- Goal`4-1-4-2-2-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb143#4 = :ctf {eq N#Nonce  = N0#Nonce .}

							:apply(csb143#4)

								-- Goal`4-1-4-2-2-1-1-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb144#4 = :ctf [P0#Prin  .]

								:apply(csb144#4)

									-- Goal`4-1-4-2-2-1-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`4-1-4-2-2-1-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb145#4 = :ctf [P0#Prin  .]

								:apply(csb145#4)

									-- Goal`4-1-4-2-2-1-1-1-2-1 Success by reduction
									:apply (rd)

							-- Goal`4-1-4-2-2-1-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
							:def csb146#4 = :ctf {eq nonce(c@Cipher1)  = N0#Nonce .}

							:apply(csb146#4)

								-- Goal`4-1-4-2-2-1-1-2-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
								:def csb147#4 = :ctf {eq N#Nonce  = N0#Nonce .}

								:apply(csb147#4)

									-- Goal`4-1-4-2-2-1-1-2-1-1  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
									:def csb148#4 = :ctf [P0#Prin  .]

									:apply(csb148#4)

										-- Goal`4-1-4-2-2-1-1-2-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`4-1-4-2-2-1-1-2-1-2  -  inv140(fkm22(S#Sys, P#Prin, P0#Prin, N#Nonce, N0#Nonce), c@Cipher1)  - Success
									:def csb149#4 = :ctf [P0#Prin  .]

									:apply(csb149#4)

										-- Goal`4-1-4-2-2-1-1-2-1-2-1 Success by reduction
										:apply (rd)

								-- Goal`4-1-4-2-2-1-1-2-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

						-- Goal`4-1-4-2-2-1-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

					-- Goal`4-1-4-2-2-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)


:sel(3)
	:apply(tc)

	-- Goal`3-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
	:def csb1#3 = :cvs [nw(S#Sys)  .]

	:apply(csb1#3)

		-- Goal`3-1-1 Success by reduction
		:apply (rd)

		-- Goal`3-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
		:def csb2#3 = :ctf [C#Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

		:apply(csb2#3)

			-- Goal`3-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
			:def csb3#3 = :ctf {eq C#EVS3-1.SubCipher1  = c@Cipher1 .}

			:apply(csb3#3)

				-- Goal`3-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
				:def csb4#3 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#Cipher2) .}

				:apply(csb4#3)

					-- Goal`3-1-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
					:def csb5#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#Cipher2) .}

					:apply(csb5#3)

						-- Goal`3-1-2-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
						:def csb6#3 = :ctf [key(C#Cipher2)  .]

						:apply(csb6#3)

							-- Goal`3-1-2-1-1-1-1-1 Success by reduction
							:apply (rd)

						-- Goal`3-1-2-1-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
						:def csb7#3 = :ctf [key(C#Cipher2)  .]

						:apply(csb7#3)

							-- Goal`3-1-2-1-1-1-2-1 Success by reduction
							:apply (rd)

					-- Goal`3-1-2-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
					:def csb8#3 = :ctf {eq nonce(c@Cipher1)  = nonce2(C#Cipher2) .}

					:apply(csb8#3)

						-- Goal`3-1-2-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
						:def csb9#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#Cipher2) .}

						:apply(csb9#3)

							-- Goal`3-1-2-1-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb10#3 = :ctf [key(C#Cipher2)  .]

							:apply(csb10#3)

								-- Goal`3-1-2-1-1-2-1-1-1 Success by reduction
								:apply (rd)

							-- Goal`3-1-2-1-1-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb11#3 = :ctf [key(C#Cipher2)  .]

							:apply(csb11#3)

								-- Goal`3-1-2-1-1-2-1-2-1 Success by reduction
								:apply (rd)

						-- Goal`3-1-2-1-1-2-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

				-- Goal`3-1-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
				:def csb12#3 = :ctf {eq nonce(C#EVS3-1.SubCipher1)  = nonce(c@Cipher1) .}

				:apply(csb12#3)

					-- Goal`3-1-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
					:def csb13#3 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#Cipher2) .}

					:apply(csb13#3)

						-- Goal`3-1-2-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
						:def csb14#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#Cipher2) .}

						:apply(csb14#3)

							-- Goal`3-1-2-1-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb15#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

							:apply(csb15#3)

								-- Goal`3-1-2-1-2-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb16#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb16#3)

									-- Goal`3-1-2-1-2-1-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-2-1-2-1-1-1-2 Success by reduction
								:apply (rd)

							-- Goal`3-1-2-1-2-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb17#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

							:apply(csb17#3)

								-- Goal`3-1-2-1-2-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb18#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb18#3)

									-- Goal`3-1-2-1-2-1-1-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-2-1-2-1-1-2-2 Success by reduction
								:apply (rd)

						-- Goal`3-1-2-1-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
						:def csb19#3 = :ctf {eq nonce(c@Cipher1)  = nonce2(C#Cipher2) .}

						:apply(csb19#3)

							-- Goal`3-1-2-1-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb20#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#Cipher2) .}

							:apply(csb20#3)

								-- Goal`3-1-2-1-2-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb21#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

								:apply(csb21#3)

									-- Goal`3-1-2-1-2-1-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb22#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb22#3)

										-- Goal`3-1-2-1-2-1-2-1-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-2-1-2-1-2-1-1-2 Success by reduction
									:apply (rd)

								-- Goal`3-1-2-1-2-1-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb23#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

								:apply(csb23#3)

									-- Goal`3-1-2-1-2-1-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb24#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb24#3)

										-- Goal`3-1-2-1-2-1-2-1-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-2-1-2-1-2-1-2-2 Success by reduction
									:apply (rd)

							-- Goal`3-1-2-1-2-1-2-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

					-- Goal`3-1-2-1-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
					:def csb25#3 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#Cipher2) .}

					:apply(csb25#3)

						-- Goal`3-1-2-1-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
						:def csb26#3 = :ctf {eq nonce(C#EVS3-1.SubCipher1)  = nonce1(C#Cipher2) .}

						:apply(csb26#3)

							-- Goal`3-1-2-1-2-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb27#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#Cipher2) .}

							:apply(csb27#3)

								-- Goal`3-1-2-1-2-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb28#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

								:apply(csb28#3)

									-- Goal`3-1-2-1-2-2-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb29#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb29#3)

										-- Goal`3-1-2-1-2-2-1-1-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-2-1-2-2-1-1-1-2 Success by reduction
									:apply (rd)

								-- Goal`3-1-2-1-2-2-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb30#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

								:apply(csb30#3)

									-- Goal`3-1-2-1-2-2-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb31#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb31#3)

										-- Goal`3-1-2-1-2-2-1-1-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-2-1-2-2-1-1-2-2 Success by reduction
									:apply (rd)

							-- Goal`3-1-2-1-2-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb32#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#Cipher2) .}

							:apply(csb32#3)

								-- Goal`3-1-2-1-2-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb33#3 = :ctf {eq nonce(C#EVS3-1.SubCipher1)  = nonce2(C#Cipher2) .}

								:apply(csb33#3)

									-- Goal`3-1-2-1-2-2-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb34#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

									:apply(csb34#3)

										-- Goal`3-1-2-1-2-2-1-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb35#3 = :ctf [key(C#Cipher2)  .]

										:apply(csb35#3)

											-- Goal`3-1-2-1-2-2-1-2-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`3-1-2-1-2-2-1-2-1-1-2 Success by reduction
										:apply (rd)

									-- Goal`3-1-2-1-2-2-1-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb36#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

									:apply(csb36#3)

										-- Goal`3-1-2-1-2-2-1-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb37#3 = :ctf [key(C#Cipher2)  .]

										:apply(csb37#3)

											-- Goal`3-1-2-1-2-2-1-2-1-2-1-1 Success by reduction
											:apply (rd)

										-- Goal`3-1-2-1-2-2-1-2-1-2-2 Success by reduction
										:apply (rd)

								-- Goal`3-1-2-1-2-2-1-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb38#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

								:apply(csb38#3)

									-- Goal`3-1-2-1-2-2-1-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb39#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb39#3)

										-- Goal`3-1-2-1-2-2-1-2-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-2-1-2-2-1-2-2-2 Success by reduction
									:apply (rd)

						-- Goal`3-1-2-1-2-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
						:def csb40#3 = :ctf {eq nonce(c@Cipher1)  = nonce2(C#Cipher2) .}

						:apply(csb40#3)

							-- Goal`3-1-2-1-2-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb41#3 = :ctf {eq nonce(C#EVS3-1.SubCipher1)  = nonce2(C#Cipher2) .}

							:apply(csb41#3)

								-- Goal`3-1-2-1-2-2-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb42#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#Cipher2) .}

								:apply(csb42#3)

									-- Goal`3-1-2-1-2-2-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb43#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

									:apply(csb43#3)

										-- Goal`3-1-2-1-2-2-2-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb44#3 = :ctf [key(C#Cipher2)  .]

										:apply(csb44#3)

											-- Goal`3-1-2-1-2-2-2-1-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`3-1-2-1-2-2-2-1-1-1-2 Success by reduction
										:apply (rd)

									-- Goal`3-1-2-1-2-2-2-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb45#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

									:apply(csb45#3)

										-- Goal`3-1-2-1-2-2-2-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb46#3 = :ctf [key(C#Cipher2)  .]

										:apply(csb46#3)

											-- Goal`3-1-2-1-2-2-2-1-1-2-1-1 Success by reduction
											:apply (rd)

										-- Goal`3-1-2-1-2-2-2-1-1-2-2 Success by reduction
										:apply (rd)

								-- Goal`3-1-2-1-2-2-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb47#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#Cipher2) .}

								:apply(csb47#3)

									-- Goal`3-1-2-1-2-2-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb48#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

									:apply(csb48#3)

										-- Goal`3-1-2-1-2-2-2-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb49#3 = :ctf [key(C#Cipher2)  .]

										:apply(csb49#3)

											-- Goal`3-1-2-1-2-2-2-1-2-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`3-1-2-1-2-2-2-1-2-1-2 Success by reduction
										:apply (rd)

									-- Goal`3-1-2-1-2-2-2-1-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb50#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

									:apply(csb50#3)

										-- Goal`3-1-2-1-2-2-2-1-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb51#3 = :ctf [key(C#Cipher2)  .]

										:apply(csb51#3)

											-- Goal`3-1-2-1-2-2-2-1-2-2-1-1 Success by reduction
											:apply (rd)

										-- Goal`3-1-2-1-2-2-2-1-2-2-2 Success by reduction
										:apply (rd)

							-- Goal`3-1-2-1-2-2-2-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

			-- Goal`3-1-2-2 Success by implication and reduction.
			:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

			:apply (rd)

		-- Goal`3-1-3  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
		:def csb52#3 = :ctf {eq C#Cipher2  = C#EVS3-1.SubCipher2 .}

		:apply(csb52#3)

			-- Goal`3-1-3-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
			:def csb53#3 = :ctf [key(C#EVS3-1.SubCipher2)  .]

			:apply(csb53#3)

				-- Goal`3-1-3-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
				:def csb54#3 = :ctf [C#EVS3-1.SubCipher2 \in cenc2(N0#EVS3-1.Network)  .]

				:apply(csb54#3)

					-- Goal`3-1-3-1-1-1 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:imp [proven-goal1]  by {C:Cipher2 <- C#Cipher2 ;}

					:apply (rd)

					-- Goal`3-1-3-1-1-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)

			-- Goal`3-1-3-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
			:def csb55#3 = :ctf [C#Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

			:apply(csb55#3)

				-- Goal`3-1-3-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
				:def csb56#3 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#Cipher2) .}

				:apply(csb56#3)

					-- Goal`3-1-3-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
					:def csb57#3 = :ctf {eq nonce1(C#Cipher2)  = nonce1(C#EVS3-1.SubCipher2) .}

					:apply(csb57#3)

						-- Goal`3-1-3-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
						:def csb58#3 = :ctf {eq nonce1(C#EVS3-1.SubCipher2)  = nonce2(C#Cipher2) .}

						:apply(csb58#3)

							-- Goal`3-1-3-2-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb59#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

							:apply(csb59#3)

								-- Goal`3-1-3-2-1-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb60#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

								:apply(csb60#3)

									-- Goal`3-1-3-2-1-1-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb61#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb61#3)

										-- Goal`3-1-3-2-1-1-1-1-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-3-2-1-1-1-1-1-2 Success by reduction
									:apply (rd)

								-- Goal`3-1-3-2-1-1-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb62#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

								:apply(csb62#3)

									-- Goal`3-1-3-2-1-1-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb63#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb63#3)

										-- Goal`3-1-3-2-1-1-1-1-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-3-2-1-1-1-1-2-2 Success by reduction
									:apply (rd)

							-- Goal`3-1-3-2-1-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb64#3 = :ctf {eq nonce1(C#EVS3-1.SubCipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

							:apply(csb64#3)

								-- Goal`3-1-3-2-1-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb65#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

								:apply(csb65#3)

									-- Goal`3-1-3-2-1-1-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb66#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

									:apply(csb66#3)

										-- Goal`3-1-3-2-1-1-1-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb67#3 = :ctf [key(C#Cipher2)  .]

										:apply(csb67#3)

											-- Goal`3-1-3-2-1-1-1-2-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-1-1-2-1-1-2 Success by reduction
										:apply (rd)

									-- Goal`3-1-3-2-1-1-1-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb68#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

									:apply(csb68#3)

										-- Goal`3-1-3-2-1-1-1-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb69#3 = :ctf [key(C#Cipher2)  .]

										:apply(csb69#3)

											-- Goal`3-1-3-2-1-1-1-2-1-2-1-1 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-1-1-2-1-2-2 Success by reduction
										:apply (rd)

								-- Goal`3-1-3-2-1-1-1-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb70#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

								:apply(csb70#3)

									-- Goal`3-1-3-2-1-1-1-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb71#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb71#3)

										-- Goal`3-1-3-2-1-1-1-2-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-3-2-1-1-1-2-2-2 Success by reduction
									:apply (rd)

						-- Goal`3-1-3-2-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
						:def csb72#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#Cipher2) .}

						:apply(csb72#3)

							-- Goal`3-1-3-2-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb73#3 = :ctf {eq nonce1(C#EVS3-1.SubCipher2)  = nonce2(C#Cipher2) .}

							:apply(csb73#3)

								-- Goal`3-1-3-2-1-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb74#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

								:apply(csb74#3)

									-- Goal`3-1-3-2-1-1-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb75#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

									:apply(csb75#3)

										-- Goal`3-1-3-2-1-1-2-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb76#3 = :ctf [key(C#Cipher2)  .]

										:apply(csb76#3)

											-- Goal`3-1-3-2-1-1-2-1-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-1-2-1-1-1-2 Success by reduction
										:apply (rd)

									-- Goal`3-1-3-2-1-1-2-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb77#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

									:apply(csb77#3)

										-- Goal`3-1-3-2-1-1-2-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb78#3 = :ctf [key(C#Cipher2)  .]

										:apply(csb78#3)

											-- Goal`3-1-3-2-1-1-2-1-1-2-1-1 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-1-2-1-1-2-2 Success by reduction
										:apply (rd)

								-- Goal`3-1-3-2-1-1-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb79#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

								:apply(csb79#3)

									-- Goal`3-1-3-2-1-1-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb80#3 = :ctf {eq nonce1(C#EVS3-1.SubCipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

									:apply(csb80#3)

										-- Goal`3-1-3-2-1-1-2-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb81#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

										:apply(csb81#3)

											-- Goal`3-1-3-2-1-1-2-1-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb82#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb82#3)

												-- Goal`3-1-3-2-1-1-2-1-2-1-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-1-2-1-2-1-1-2 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-1-2-1-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb83#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

										:apply(csb83#3)

											-- Goal`3-1-3-2-1-1-2-1-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb84#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb84#3)

												-- Goal`3-1-3-2-1-1-2-1-2-1-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-1-2-1-2-1-2-2 Success by reduction
											:apply (rd)

									-- Goal`3-1-3-2-1-1-2-1-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb85#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

									:apply(csb85#3)

										-- Goal`3-1-3-2-1-1-2-1-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb86#3 = :ctf [key(C#Cipher2)  .]

										:apply(csb86#3)

											-- Goal`3-1-3-2-1-1-2-1-2-2-1-1 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-1-2-1-2-2-2 Success by reduction
										:apply (rd)

							-- Goal`3-1-3-2-1-1-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb87#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

							:apply(csb87#3)

								-- Goal`3-1-3-2-1-1-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb88#3 = :ctf {eq nonce1(C#EVS3-1.SubCipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

								:apply(csb88#3)

									-- Goal`3-1-3-2-1-1-2-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb89#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

									:apply(csb89#3)

										-- Goal`3-1-3-2-1-1-2-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb90#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

										:apply(csb90#3)

											-- Goal`3-1-3-2-1-1-2-2-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb91#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb91#3)

												-- Goal`3-1-3-2-1-1-2-2-1-1-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-1-2-2-1-1-1-2 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-1-2-2-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb92#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

										:apply(csb92#3)

											-- Goal`3-1-3-2-1-1-2-2-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb93#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb93#3)

												-- Goal`3-1-3-2-1-1-2-2-1-1-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-1-2-2-1-1-2-2 Success by reduction
											:apply (rd)

									-- Goal`3-1-3-2-1-1-2-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb94#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

									:apply(csb94#3)

										-- Goal`3-1-3-2-1-1-2-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb95#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

										:apply(csb95#3)

											-- Goal`3-1-3-2-1-1-2-2-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb96#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb96#3)

												-- Goal`3-1-3-2-1-1-2-2-1-2-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-1-2-2-1-2-1-2 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-1-2-2-1-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb97#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

										:apply(csb97#3)

											-- Goal`3-1-3-2-1-1-2-2-1-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb98#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb98#3)

												-- Goal`3-1-3-2-1-1-2-2-1-2-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-1-2-2-1-2-2-2 Success by reduction
											:apply (rd)

								-- Goal`3-1-3-2-1-1-2-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb99#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

								:apply(csb99#3)

									-- Goal`3-1-3-2-1-1-2-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb100#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb100#3)

										-- Goal`3-1-3-2-1-1-2-2-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-3-2-1-1-2-2-2-2 Success by reduction
									:apply (rd)

					-- Goal`3-1-3-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
					:def csb101#3 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#EVS3-1.SubCipher2) .}

					:apply(csb101#3)

						-- Goal`3-1-3-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
						:def csb102#3 = :ctf {eq nonce1(C#Cipher2)  = nonce1(C#EVS3-1.SubCipher2) .}

						:apply(csb102#3)

							-- Goal`3-1-3-2-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb103#3 = :ctf {eq nonce1(C#EVS3-1.SubCipher2)  = nonce2(C#Cipher2) .}

							:apply(csb103#3)

								-- Goal`3-1-3-2-1-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb104#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

								:apply(csb104#3)

									-- Goal`3-1-3-2-1-2-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb105#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

									:apply(csb105#3)

										-- Goal`3-1-3-2-1-2-1-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb106#3 = :ctf [key(C#Cipher2)  .]

										:apply(csb106#3)

											-- Goal`3-1-3-2-1-2-1-1-1-1-1-1 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-2-1-1-1-1-2 Success by reduction
										:apply (rd)

									-- Goal`3-1-3-2-1-2-1-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb107#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

									:apply(csb107#3)

										-- Goal`3-1-3-2-1-2-1-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb108#3 = :ctf [key(C#Cipher2)  .]

										:apply(csb108#3)

											-- Goal`3-1-3-2-1-2-1-1-1-2-1-1 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-2-1-1-1-2-2 Success by reduction
										:apply (rd)

								-- Goal`3-1-3-2-1-2-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb109#3 = :ctf {eq nonce1(C#EVS3-1.SubCipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

								:apply(csb109#3)

									-- Goal`3-1-3-2-1-2-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb110#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

									:apply(csb110#3)

										-- Goal`3-1-3-2-1-2-1-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb111#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

										:apply(csb111#3)

											-- Goal`3-1-3-2-1-2-1-1-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb112#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb112#3)

												-- Goal`3-1-3-2-1-2-1-1-2-1-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-1-1-2-1-1-2 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-2-1-1-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb113#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

										:apply(csb113#3)

											-- Goal`3-1-3-2-1-2-1-1-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb114#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb114#3)

												-- Goal`3-1-3-2-1-2-1-1-2-1-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-1-1-2-1-2-2 Success by reduction
											:apply (rd)

									-- Goal`3-1-3-2-1-2-1-1-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb115#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

									:apply(csb115#3)

										-- Goal`3-1-3-2-1-2-1-1-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb116#3 = :ctf [key(C#Cipher2)  .]

										:apply(csb116#3)

											-- Goal`3-1-3-2-1-2-1-1-2-2-1-1 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-2-1-1-2-2-2 Success by reduction
										:apply (rd)

							-- Goal`3-1-3-2-1-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb117#3 = :ctf {eq nonce1(C#EVS3-1.SubCipher2)  = nonce2(C#Cipher2) .}

							:apply(csb117#3)

								-- Goal`3-1-3-2-1-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb118#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#Cipher2) .}

								:apply(csb118#3)

									-- Goal`3-1-3-2-1-2-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb119#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

									:apply(csb119#3)

										-- Goal`3-1-3-2-1-2-1-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb120#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

										:apply(csb120#3)

											-- Goal`3-1-3-2-1-2-1-2-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb121#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb121#3)

												-- Goal`3-1-3-2-1-2-1-2-1-1-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-1-2-1-1-1-2 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-2-1-2-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb122#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

										:apply(csb122#3)

											-- Goal`3-1-3-2-1-2-1-2-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb123#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb123#3)

												-- Goal`3-1-3-2-1-2-1-2-1-1-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-1-2-1-1-2-2 Success by reduction
											:apply (rd)

									-- Goal`3-1-3-2-1-2-1-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb124#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

									:apply(csb124#3)

										-- Goal`3-1-3-2-1-2-1-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb125#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

										:apply(csb125#3)

											-- Goal`3-1-3-2-1-2-1-2-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb126#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

											:apply(csb126#3)

												-- Goal`3-1-3-2-1-2-1-2-1-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
												:def csb127#3 = :ctf [key(C#Cipher2)  .]

												:apply(csb127#3)

													-- Goal`3-1-3-2-1-2-1-2-1-2-1-1-1-1 Success by reduction
													:apply (rd)

												-- Goal`3-1-3-2-1-2-1-2-1-2-1-1-2 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-1-2-1-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb128#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

											:apply(csb128#3)

												-- Goal`3-1-3-2-1-2-1-2-1-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
												:def csb129#3 = :ctf [key(C#Cipher2)  .]

												:apply(csb129#3)

													-- Goal`3-1-3-2-1-2-1-2-1-2-1-2-1-1 Success by reduction
													:apply (rd)

												-- Goal`3-1-3-2-1-2-1-2-1-2-1-2-2 Success by reduction
												:apply (rd)

										-- Goal`3-1-3-2-1-2-1-2-1-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb130#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

										:apply(csb130#3)

											-- Goal`3-1-3-2-1-2-1-2-1-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb131#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb131#3)

												-- Goal`3-1-3-2-1-2-1-2-1-2-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-1-2-1-2-2-2 Success by reduction
											:apply (rd)

								-- Goal`3-1-3-2-1-2-1-2-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

						-- Goal`3-1-3-2-1-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
						:def csb132#3 = :ctf {eq nonce(c@Cipher1)  = nonce2(C#Cipher2) .}

						:apply(csb132#3)

							-- Goal`3-1-3-2-1-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb133#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#Cipher2) .}

							:apply(csb133#3)

								-- Goal`3-1-3-2-1-2-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb134#3 = :ctf {eq nonce1(C#EVS3-1.SubCipher2)  = nonce2(C#Cipher2) .}

								:apply(csb134#3)

									-- Goal`3-1-3-2-1-2-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb135#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

									:apply(csb135#3)

										-- Goal`3-1-3-2-1-2-2-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb136#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

										:apply(csb136#3)

											-- Goal`3-1-3-2-1-2-2-1-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb137#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb137#3)

												-- Goal`3-1-3-2-1-2-2-1-1-1-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-1-1-1-1-2 Success by reduction
											:apply (rd)

										-- Goal`3-1-3-2-1-2-2-1-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb138#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

										:apply(csb138#3)

											-- Goal`3-1-3-2-1-2-2-1-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb139#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb139#3)

												-- Goal`3-1-3-2-1-2-2-1-1-1-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-1-1-1-2-2 Success by reduction
											:apply (rd)

									-- Goal`3-1-3-2-1-2-2-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb140#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

									:apply(csb140#3)

										-- Goal`3-1-3-2-1-2-2-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb141#3 = :ctf {eq nonce1(C#EVS3-1.SubCipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

										:apply(csb141#3)

											-- Goal`3-1-3-2-1-2-2-1-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb142#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

											:apply(csb142#3)

												-- Goal`3-1-3-2-1-2-2-1-1-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
												:def csb143#3 = :ctf [key(C#Cipher2)  .]

												:apply(csb143#3)

													-- Goal`3-1-3-2-1-2-2-1-1-2-1-1-1-1 Success by reduction
													:apply (rd)

												-- Goal`3-1-3-2-1-2-2-1-1-2-1-1-2 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-1-1-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb144#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

											:apply(csb144#3)

												-- Goal`3-1-3-2-1-2-2-1-1-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
												:def csb145#3 = :ctf [key(C#Cipher2)  .]

												:apply(csb145#3)

													-- Goal`3-1-3-2-1-2-2-1-1-2-1-2-1-1 Success by reduction
													:apply (rd)

												-- Goal`3-1-3-2-1-2-2-1-1-2-1-2-2 Success by reduction
												:apply (rd)

										-- Goal`3-1-3-2-1-2-2-1-1-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb146#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

										:apply(csb146#3)

											-- Goal`3-1-3-2-1-2-2-1-1-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb147#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb147#3)

												-- Goal`3-1-3-2-1-2-2-1-1-2-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-1-1-2-2-2 Success by reduction
											:apply (rd)

								-- Goal`3-1-3-2-1-2-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb148#3 = :ctf {eq nonce1(C#EVS3-1.SubCipher2)  = nonce2(C#Cipher2) .}

								:apply(csb148#3)

									-- Goal`3-1-3-2-1-2-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb149#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

									:apply(csb149#3)

										-- Goal`3-1-3-2-1-2-2-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb150#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

										:apply(csb150#3)

											-- Goal`3-1-3-2-1-2-2-1-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb151#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

											:apply(csb151#3)

												-- Goal`3-1-3-2-1-2-2-1-2-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
												:def csb152#3 = :ctf [key(C#Cipher2)  .]

												:apply(csb152#3)

													-- Goal`3-1-3-2-1-2-2-1-2-1-1-1-1-1 Success by reduction
													:apply (rd)

												-- Goal`3-1-3-2-1-2-2-1-2-1-1-1-2 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-1-2-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb153#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

											:apply(csb153#3)

												-- Goal`3-1-3-2-1-2-2-1-2-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
												:def csb154#3 = :ctf [key(C#Cipher2)  .]

												:apply(csb154#3)

													-- Goal`3-1-3-2-1-2-2-1-2-1-1-2-1-1 Success by reduction
													:apply (rd)

												-- Goal`3-1-3-2-1-2-2-1-2-1-1-2-2 Success by reduction
												:apply (rd)

										-- Goal`3-1-3-2-1-2-2-1-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb155#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

										:apply(csb155#3)

											-- Goal`3-1-3-2-1-2-2-1-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb156#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb156#3)

												-- Goal`3-1-3-2-1-2-2-1-2-1-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-1-2-1-2-2 Success by reduction
											:apply (rd)

									-- Goal`3-1-3-2-1-2-2-1-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb157#3 = :ctf {eq nonce2(C#Cipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

									:apply(csb157#3)

										-- Goal`3-1-3-2-1-2-2-1-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb158#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

										:apply(csb158#3)

											-- Goal`3-1-3-2-1-2-2-1-2-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb159#3 = :ctf {eq nonce1(C#EVS3-1.SubCipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

											:apply(csb159#3)

												-- Goal`3-1-3-2-1-2-2-1-2-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
												:def csb160#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

												:apply(csb160#3)

													-- Goal`3-1-3-2-1-2-2-1-2-2-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
													:def csb161#3 = :ctf [key(C#Cipher2)  .]

													:apply(csb161#3)

														-- Goal`3-1-3-2-1-2-2-1-2-2-1-1-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`3-1-3-2-1-2-2-1-2-2-1-1-1-2 Success by reduction
													:apply (rd)

												-- Goal`3-1-3-2-1-2-2-1-2-2-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
												:def csb162#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

												:apply(csb162#3)

													-- Goal`3-1-3-2-1-2-2-1-2-2-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
													:def csb163#3 = :ctf [key(C#Cipher2)  .]

													:apply(csb163#3)

														-- Goal`3-1-3-2-1-2-2-1-2-2-1-1-2-1-1 Success by reduction
														:apply (rd)

													-- Goal`3-1-3-2-1-2-2-1-2-2-1-1-2-2 Success by reduction
													:apply (rd)

											-- Goal`3-1-3-2-1-2-2-1-2-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb164#3 = :ctf {eq nonce1(C#EVS3-1.SubCipher2)  = nonce2(C#EVS3-1.SubCipher2) .}

											:apply(csb164#3)

												-- Goal`3-1-3-2-1-2-2-1-2-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
												:def csb165#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

												:apply(csb165#3)

													-- Goal`3-1-3-2-1-2-2-1-2-2-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
													:def csb166#3 = :ctf [key(C#Cipher2)  .]

													:apply(csb166#3)

														-- Goal`3-1-3-2-1-2-2-1-2-2-1-2-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`3-1-3-2-1-2-2-1-2-2-1-2-1-2 Success by reduction
													:apply (rd)

												-- Goal`3-1-3-2-1-2-2-1-2-2-1-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
												:def csb167#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

												:apply(csb167#3)

													-- Goal`3-1-3-2-1-2-2-1-2-2-1-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
													:def csb168#3 = :ctf [key(C#Cipher2)  .]

													:apply(csb168#3)

														-- Goal`3-1-3-2-1-2-2-1-2-2-1-2-2-1-1 Success by reduction
														:apply (rd)

													-- Goal`3-1-3-2-1-2-2-1-2-2-1-2-2-2 Success by reduction
													:apply (rd)

										-- Goal`3-1-3-2-1-2-2-1-2-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
										:def csb169#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

										:apply(csb169#3)

											-- Goal`3-1-3-2-1-2-2-1-2-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
											:def csb170#3 = :ctf [key(C#Cipher2)  .]

											:apply(csb170#3)

												-- Goal`3-1-3-2-1-2-2-1-2-2-2-1-1 Success by reduction
												:apply (rd)

											-- Goal`3-1-3-2-1-2-2-1-2-2-2-2 Success by reduction
											:apply (rd)

							-- Goal`3-1-3-2-1-2-2-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

				-- Goal`3-1-3-2-2 Success by implication and reduction.
				:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

				:apply (rd)

		-- Goal`3-1-4  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
		:def csb171#3 = :ctf [C#Cipher2 \in cenc2(N0#EVS3-1.Network)  .]

		:apply(csb171#3)

			-- Goal`3-1-4-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
			:def csb172#3 = :ctf {eq nonce(c@Cipher1)  = nonce(C#EVS3-1.SubCipher3) .}

			:apply(csb172#3)

				-- Goal`3-1-4-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
				:def csb173#3 = :ctf {eq nonce(C#EVS3-1.SubCipher3)  = nonce1(C#Cipher2) .}

				:apply(csb173#3)

					-- Goal`3-1-4-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
					:def csb174#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#Cipher2) .}

					:apply(csb174#3)

						-- Goal`3-1-4-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
						:def csb175#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

						:apply(csb175#3)

							-- Goal`3-1-4-1-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb176#3 = :ctf [key(C#Cipher2)  .]

							:apply(csb176#3)

								-- Goal`3-1-4-1-1-1-1-1-1 Success by reduction
								:apply (rd)

							-- Goal`3-1-4-1-1-1-1-2 Success by reduction
							:apply (rd)

						-- Goal`3-1-4-1-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
						:def csb177#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

						:apply(csb177#3)

							-- Goal`3-1-4-1-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb178#3 = :ctf [key(C#Cipher2)  .]

							:apply(csb178#3)

								-- Goal`3-1-4-1-1-1-2-1-1 Success by reduction
								:apply (rd)

							-- Goal`3-1-4-1-1-1-2-2 Success by reduction
							:apply (rd)

					-- Goal`3-1-4-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
					:def csb179#3 = :ctf {eq nonce(C#EVS3-1.SubCipher3)  = nonce2(C#Cipher2) .}

					:apply(csb179#3)

						-- Goal`3-1-4-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
						:def csb180#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#Cipher2) .}

						:apply(csb180#3)

							-- Goal`3-1-4-1-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb181#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

							:apply(csb181#3)

								-- Goal`3-1-4-1-1-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb182#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb182#3)

									-- Goal`3-1-4-1-1-2-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-4-1-1-2-1-1-2 Success by reduction
								:apply (rd)

							-- Goal`3-1-4-1-1-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb183#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

							:apply(csb183#3)

								-- Goal`3-1-4-1-1-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb184#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb184#3)

									-- Goal`3-1-4-1-1-2-1-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-4-1-1-2-1-2-2 Success by reduction
								:apply (rd)

						-- Goal`3-1-4-1-1-2-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

				-- Goal`3-1-4-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
				:def csb185#3 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#Cipher2) .}

				:apply(csb185#3)

					-- Goal`3-1-4-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
					:def csb186#3 = :ctf {eq nonce(C#EVS3-1.SubCipher3)  = nonce1(C#Cipher2) .}

					:apply(csb186#3)

						-- Goal`3-1-4-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
						:def csb187#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#Cipher2) .}

						:apply(csb187#3)

							-- Goal`3-1-4-1-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb188#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

							:apply(csb188#3)

								-- Goal`3-1-4-1-2-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb189#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb189#3)

									-- Goal`3-1-4-1-2-1-1-1-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-4-1-2-1-1-1-2 Success by reduction
								:apply (rd)

							-- Goal`3-1-4-1-2-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb190#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

							:apply(csb190#3)

								-- Goal`3-1-4-1-2-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb191#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb191#3)

									-- Goal`3-1-4-1-2-1-1-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-4-1-2-1-1-2-2 Success by reduction
								:apply (rd)

						-- Goal`3-1-4-1-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
						:def csb192#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#Cipher2) .}

						:apply(csb192#3)

							-- Goal`3-1-4-1-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb193#3 = :ctf {eq nonce(C#EVS3-1.SubCipher3)  = nonce2(C#Cipher2) .}

							:apply(csb193#3)

								-- Goal`3-1-4-1-2-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb194#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

								:apply(csb194#3)

									-- Goal`3-1-4-1-2-1-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb195#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb195#3)

										-- Goal`3-1-4-1-2-1-2-1-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-4-1-2-1-2-1-1-2 Success by reduction
									:apply (rd)

								-- Goal`3-1-4-1-2-1-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb196#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

								:apply(csb196#3)

									-- Goal`3-1-4-1-2-1-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb197#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb197#3)

										-- Goal`3-1-4-1-2-1-2-1-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-4-1-2-1-2-1-2-2 Success by reduction
									:apply (rd)

							-- Goal`3-1-4-1-2-1-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb198#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

							:apply(csb198#3)

								-- Goal`3-1-4-1-2-1-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb199#3 = :ctf [key(C#Cipher2)  .]

								:apply(csb199#3)

									-- Goal`3-1-4-1-2-1-2-2-1-1 Success by reduction
									:apply (rd)

								-- Goal`3-1-4-1-2-1-2-2-2 Success by reduction
								:apply (rd)

					-- Goal`3-1-4-1-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
					:def csb200#3 = :ctf {eq nonce(c@Cipher1)  = nonce2(C#Cipher2) .}

					:apply(csb200#3)

						-- Goal`3-1-4-1-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
						:def csb201#3 = :ctf {eq nonce(C#EVS3-1.SubCipher3)  = nonce2(C#Cipher2) .}

						:apply(csb201#3)

							-- Goal`3-1-4-1-2-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb202#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#Cipher2) .}

							:apply(csb202#3)

								-- Goal`3-1-4-1-2-2-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb203#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

								:apply(csb203#3)

									-- Goal`3-1-4-1-2-2-1-1-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb204#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb204#3)

										-- Goal`3-1-4-1-2-2-1-1-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-4-1-2-2-1-1-1-2 Success by reduction
									:apply (rd)

								-- Goal`3-1-4-1-2-2-1-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb205#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

								:apply(csb205#3)

									-- Goal`3-1-4-1-2-2-1-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb206#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb206#3)

										-- Goal`3-1-4-1-2-2-1-1-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-4-1-2-2-1-1-2-2 Success by reduction
									:apply (rd)

							-- Goal`3-1-4-1-2-2-1-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
							:def csb207#3 = :ctf {eq nonce1(C#Cipher2)  = nonce2(C#Cipher2) .}

							:apply(csb207#3)

								-- Goal`3-1-4-1-2-2-1-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb208#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

								:apply(csb208#3)

									-- Goal`3-1-4-1-2-2-1-2-1-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb209#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb209#3)

										-- Goal`3-1-4-1-2-2-1-2-1-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-4-1-2-2-1-2-1-2 Success by reduction
									:apply (rd)

								-- Goal`3-1-4-1-2-2-1-2-2  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
								:def csb210#3 = :ctf [c@Cipher1 \in cenc1(N0#EVS3-1.Network)  .]

								:apply(csb210#3)

									-- Goal`3-1-4-1-2-2-1-2-2-1  -  inv140(fkm21(S#Sys, P#Prin, P0#Prin, C#Cipher2), c@Cipher1)  - Success
									:def csb211#3 = :ctf [key(C#Cipher2)  .]

									:apply(csb211#3)

										-- Goal`3-1-4-1-2-2-1-2-2-1-1 Success by reduction
										:apply (rd)

									-- Goal`3-1-4-1-2-2-1-2-2-2 Success by reduction
									:apply (rd)

						-- Goal`3-1-4-1-2-2-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

			-- Goal`3-1-4-2 Success by implication and reduction.
			:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

			:apply (rd)


:sel(9)
	:apply(tc)

	-- Goal`9-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
	:def csb1#9 = :cvs [nw(S#Sys)  .]

	:apply(csb1#9)

		-- Goal`9-1-1 Success by reduction
		:apply (rd)

		-- Goal`9-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
	:def csb2#9 = :cvs [ur(S#Sys)  .]

	:apply(csb2#9)

			-- Goal`9-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
			:def csb3#9 = :ctf {eq cipher1(M#Msg)  = C#EVS9-1.SubCipher1 .}

			:apply(csb3#9)

				-- Goal`9-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
				:def csb4#9 = :ctf {eq creator(M#Msg)  = P#EVS9-1.SubPrin .}

				:apply(csb4#9)

					-- Goal`9-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
					:def csb5#9 = :ctf {eq key(C#EVS9-1.SubCipher1)  = P#Prin .}

					:apply(csb5#9)

						-- Goal`9-1-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
						:def csb6#9 = :ctf {eq principal(C#EVS9-1.SubCipher1)  = sender(M#Msg) .}

						:apply(csb6#9)

							-- Goal`9-1-2-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
							:def csb7#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

							:apply(csb7#9)

								-- Goal`9-1-2-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
								:def csb8#9 = :ctf {eq P#Prin  = P1#EVS9-1.SubPrin .}

								:apply(csb8#9)

									-- Goal`9-1-2-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb9#9 = :ctf {eq sender(M#Msg)  = P0#EVS9-1.SubPrin .}

									:apply(csb9#9)

										-- Goal`9-1-2-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb10#9 = :ctf [m1?(M#Msg)  .]

										:apply(csb10#9)

											-- Goal`9-1-2-1-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb11#9 = :ctf {eq C#EVS9-1.SubCipher1  = c@Cipher1 .}

											:apply(csb11#9)

												-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb12#9 = :ctf {eq key(c@Cipher1)  = P1#EVS9-1.SubPrin .}

												:apply(csb12#9)

													-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb13#9 = :ctf {eq principal(c@Cipher1)  = P0#EVS9-1.SubPrin .}

													:apply(csb13#9)

														-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb14#9 = :ctf [P0#EVS9-1.SubPrin  .]

														:apply(csb14#9)

															-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1-1-2 Success by implication and reduction.
														:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

														:apply (rd)

													-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-1-2 Success by implication and reduction.
													:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

													:apply (rd)

												-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb15#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce(c@Cipher1) .}

												:apply(csb15#9)

													-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb16#9 = :ctf [P0#EVS9-1.SubPrin  .]

													:apply(csb16#9)

														-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb17#9 = :ctf [P0#EVS9-1.SubPrin  .]

													:apply(csb17#9)

														-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb18#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb18#9)

															-- Goal`9-1-2-1-1-1-1-1-1-1-1-1-2-2-1-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

											-- Goal`9-1-2-1-1-1-1-1-1-1-1-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

										-- Goal`9-1-2-1-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb19#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

										:apply(csb19#9)

											-- Goal`9-1-2-1-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb20#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb20#9)

												-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb21#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce(c@Cipher1) .}

												:apply(csb21#9)

													-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb22#9 = :ctf [P1#EVS9-1.SubPrin  .]

													:apply(csb22#9)

														-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb23#9 = :ctf [P1#EVS9-1.SubPrin  .]

													:apply(csb23#9)

														-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb24#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb24#9)

															-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-1-2-1-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

												-- Goal`9-1-2-1-1-1-1-1-1-1-2-1-2 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

											-- Goal`9-1-2-1-1-1-1-1-1-1-2-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

									-- Goal`9-1-2-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb25#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

									:apply(csb25#9)

										-- Goal`9-1-2-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb26#9 = :ctf [m1?(M#Msg)  .]

										:apply(csb26#9)

											-- Goal`9-1-2-1-1-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb27#9 = :ctf {eq C#EVS9-1.SubCipher1  = c@Cipher1 .}

											:apply(csb27#9)

												-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb28#9 = :ctf {eq key(c@Cipher1)  = P#Prin .}

												:apply(csb28#9)

													-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb29#9 = :ctf {eq principal(c@Cipher1)  = sender(M#Msg) .}

													:apply(csb29#9)

														-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb30#9 = :ctf [P#Prin  .]

														:apply(csb30#9)

															-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1-1-2 Success by implication and reduction.
														:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

														:apply (rd)

													-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-1-2 Success by implication and reduction.
													:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

													:apply (rd)

												-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb31#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce(c@Cipher1) .}

												:apply(csb31#9)

													-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb32#9 = :ctf [P#Prin  .]

													:apply(csb32#9)

														-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb33#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

													:apply(csb33#9)

														-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb34#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb34#9)

															-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-2-1-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

														-- Goal`9-1-2-1-1-1-1-1-1-2-1-1-2-2-2 Success by reduction
														:apply (rd)

											-- Goal`9-1-2-1-1-1-1-1-1-2-1-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

										-- Goal`9-1-2-1-1-1-1-1-1-2-2 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

								-- Goal`9-1-2-1-1-1-1-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`9-1-2-1-1-1-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

						-- Goal`9-1-2-1-1-1-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

					-- Goal`9-1-2-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
					:def csb35#9 = :ctf {eq key(C#EVS9-1.SubCipher1)  = P#Prin .}

					:apply(csb35#9)

						-- Goal`9-1-2-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
						:def csb36#9 = :ctf {eq principal(C#EVS9-1.SubCipher1)  = sender(M#Msg) .}

						:apply(csb36#9)

							-- Goal`9-1-2-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
							:def csb37#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

							:apply(csb37#9)

								-- Goal`9-1-2-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
								:def csb38#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

								:apply(csb38#9)

									-- Goal`9-1-2-1-1-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb39#9 = :ctf [m1?(M#Msg)  .]

									:apply(csb39#9)

										-- Goal`9-1-2-1-1-2-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb40#9 = :ctf {eq C#EVS9-1.SubCipher1  = c@Cipher1 .}

										:apply(csb40#9)

											-- Goal`9-1-2-1-1-2-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb41#9 = :ctf {eq key(c@Cipher1)  = P#Prin .}

											:apply(csb41#9)

												-- Goal`9-1-2-1-1-2-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb42#9 = :ctf {eq principal(c@Cipher1)  = sender(M#Msg) .}

												:apply(csb42#9)

													-- Goal`9-1-2-1-1-2-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb43#9 = :ctf [P#Prin  .]

													:apply(csb43#9)

														-- Goal`9-1-2-1-1-2-1-1-1-1-1-1-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-2-1-1-2-1-1-1-1-1-1-1-2 Success by implication and reduction.
													:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

													:apply (rd)

												-- Goal`9-1-2-1-1-2-1-1-1-1-1-1-2 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

											-- Goal`9-1-2-1-1-2-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb44#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce(c@Cipher1) .}

											:apply(csb44#9)

												-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb45#9 = :ctf [P#Prin  .]

												:apply(csb45#9)

													-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-1-1 Success by reduction
													:apply (rd)

												-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb46#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

												:apply(csb46#9)

													-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb47#9 = :ctf [nonce(c@Cipher1)  .]

													:apply(csb47#9)

														-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb48#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb48#9)

															-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-2-1-1-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

													-- Goal`9-1-2-1-1-2-1-1-1-1-1-2-2-2 Success by reduction
													:apply (rd)

										-- Goal`9-1-2-1-1-2-1-1-1-1-2 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

									-- Goal`9-1-2-1-1-2-1-1-1-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

								-- Goal`9-1-2-1-1-2-1-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`9-1-2-1-1-2-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

						-- Goal`9-1-2-1-1-2-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

				-- Goal`9-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
				:def csb49#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

				:apply(csb49#9)

					-- Goal`9-1-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
					:def csb50#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

					:apply(csb50#9)

						-- Goal`9-1-2-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
						:def csb51#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

						:apply(csb51#9)

							-- Goal`9-1-2-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
							:def csb52#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

							:apply(csb52#9)

								-- Goal`9-1-2-1-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
								:def csb53#9 = :ctf [m1?(M#Msg)  .]

								:apply(csb53#9)

									-- Goal`9-1-2-1-2-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb54#9 = :ctf {eq C#EVS9-1.SubCipher1  = c@Cipher1 .}

									:apply(csb54#9)

										-- Goal`9-1-2-1-2-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb55#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

										:apply(csb55#9)

											-- Goal`9-1-2-1-2-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb56#9 = :ctf [P#Prin  .]

											:apply(csb56#9)

												-- Goal`9-1-2-1-2-1-1-1-1-1-1-1-1 Success by reduction
												:apply (rd)

											-- Goal`9-1-2-1-2-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb57#9 = :ctf [key(c@Cipher1)  .]

											:apply(csb57#9)

												-- Goal`9-1-2-1-2-1-1-1-1-1-1-2-1 Success by reduction
												:apply (rd)

										-- Goal`9-1-2-1-2-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb58#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce(c@Cipher1) .}

										:apply(csb58#9)

											-- Goal`9-1-2-1-2-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb59#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

											:apply(csb59#9)

												-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb60#9 = :ctf [P#Prin  .]

												:apply(csb60#9)

													-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-1-1 Success by reduction
													:apply (rd)

												-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb61#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

												:apply(csb61#9)

													-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb62#9 = :ctf [key(C#EVS9-1.SubCipher1)  .]

													:apply(csb62#9)

														-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-2-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-2-1-2-1-1-1-1-1-2-1-2-2 Success by reduction
													:apply (rd)

											-- Goal`9-1-2-1-2-1-1-1-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb63#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

											:apply(csb63#9)

												-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb64#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce(cipher1(M#Msg)) .}

												:apply(csb64#9)

													-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb65#9 = :ctf [P#Prin  .]

													:apply(csb65#9)

														-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb66#9 = :ctf [P#Prin  .]

													:apply(csb66#9)

														-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-1-2-1 Success by reduction
														:apply (rd)

												-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb67#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

												:apply(csb67#9)

													-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb68#9 = :ctf [nonce(c@Cipher1)  .]

													:apply(csb68#9)

														-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb69#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb69#9)

															-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-2-1-1-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

													-- Goal`9-1-2-1-2-1-1-1-1-1-2-2-2-2 Success by reduction
													:apply (rd)

									-- Goal`9-1-2-1-2-1-1-1-1-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

								-- Goal`9-1-2-1-2-1-1-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`9-1-2-1-2-1-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

						-- Goal`9-1-2-1-2-1-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

					-- Goal`9-1-2-1-2-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)

			-- Goal`9-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
			:def csb70#9 = :ctf {eq EVS9-1-2.SubRand  = R#Rand .}

			:apply(csb70#9)

				-- Goal`9-1-2-2-1 Success by implication and reduction.
				:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

				:apply (rd)

				-- Goal`9-1-2-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
				:def csb71#9 = :ctf {eq cipher1(M#Msg)  = C#EVS9-1.SubCipher1 .}

				:apply(csb71#9)

					-- Goal`9-1-2-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
					:def csb72#9 = :ctf {eq creator(M#Msg)  = P#EVS9-1.SubPrin .}

					:apply(csb72#9)

						-- Goal`9-1-2-2-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
						:def csb73#9 = :ctf {eq key(C#EVS9-1.SubCipher1)  = P#Prin .}

						:apply(csb73#9)

							-- Goal`9-1-2-2-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
							:def csb74#9 = :ctf {eq principal(C#EVS9-1.SubCipher1)  = sender(M#Msg) .}

							:apply(csb74#9)

								-- Goal`9-1-2-2-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
								:def csb75#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

								:apply(csb75#9)

									-- Goal`9-1-2-2-2-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb76#9 = :ctf {eq P#Prin  = P1#EVS9-1.SubPrin .}

									:apply(csb76#9)

										-- Goal`9-1-2-2-2-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb77#9 = :ctf {eq sender(M#Msg)  = P0#EVS9-1.SubPrin .}

										:apply(csb77#9)

											-- Goal`9-1-2-2-2-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb78#9 = :ctf [R#Rand \in U0#EVS9-1-2.URand  .]

											:apply(csb78#9)

												-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-1 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

												-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb79#9 = :ctf [m1?(M#Msg)  .]

												:apply(csb79#9)

													-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb80#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce(c@Cipher1) .}

													:apply(csb80#9)

														-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb81#9 = :ctf [P0#EVS9-1.SubPrin  .]

														:apply(csb81#9)

															-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb82#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb82#9)

															-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-1-2-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

													-- Goal`9-1-2-2-2-1-1-1-1-1-1-1-2-2 Success by implication and reduction.
													:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

													:apply (rd)

											-- Goal`9-1-2-2-2-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb83#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

											:apply(csb83#9)

												-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb84#9 = :ctf [R#Rand \in U0#EVS9-1-2.URand  .]

												:apply(csb84#9)

													-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-1 Success by implication and reduction.
													:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

													:apply (rd)

													-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb85#9 = :ctf [m1?(M#Msg)  .]

													:apply(csb85#9)

														-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb86#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb86#9)

															-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-2-1-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

														-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-1-2-2 Success by implication and reduction.
														:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

														:apply (rd)

												-- Goal`9-1-2-2-2-1-1-1-1-1-1-2-2 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

										-- Goal`9-1-2-2-2-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb87#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

										:apply(csb87#9)

											-- Goal`9-1-2-2-2-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb88#9 = :ctf [R#Rand \in U0#EVS9-1-2.URand  .]

											:apply(csb88#9)

												-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-1 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

												-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb89#9 = :ctf [m1?(M#Msg)  .]

												:apply(csb89#9)

													-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb90#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce(c@Cipher1) .}

													:apply(csb90#9)

														-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb91#9 = :ctf [P#Prin  .]

														:apply(csb91#9)

															-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb92#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb92#9)

															-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-1-2-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

													-- Goal`9-1-2-2-2-1-1-1-1-1-2-1-2-2 Success by implication and reduction.
													:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

													:apply (rd)

											-- Goal`9-1-2-2-2-1-1-1-1-1-2-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

									-- Goal`9-1-2-2-2-1-1-1-1-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

								-- Goal`9-1-2-2-2-1-1-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`9-1-2-2-2-1-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

						-- Goal`9-1-2-2-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
						:def csb93#9 = :ctf {eq key(C#EVS9-1.SubCipher1)  = P#Prin .}

						:apply(csb93#9)

							-- Goal`9-1-2-2-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
							:def csb94#9 = :ctf {eq principal(C#EVS9-1.SubCipher1)  = sender(M#Msg) .}

							:apply(csb94#9)

								-- Goal`9-1-2-2-2-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
								:def csb95#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

								:apply(csb95#9)

									-- Goal`9-1-2-2-2-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb96#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

									:apply(csb96#9)

										-- Goal`9-1-2-2-2-1-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb97#9 = :ctf [R#Rand \in U0#EVS9-1-2.URand  .]

										:apply(csb97#9)

											-- Goal`9-1-2-2-2-1-2-1-1-1-1-1 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

											-- Goal`9-1-2-2-2-1-2-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb98#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb98#9)

												-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb99#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce(c@Cipher1) .}

												:apply(csb99#9)

													-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb100#9 = :ctf [P#Prin  .]

													:apply(csb100#9)

														-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb101#9 = :ctf [P#Prin  .]

													:apply(csb101#9)

														-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb102#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb102#9)

															-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-1-2-1-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

												-- Goal`9-1-2-2-2-1-2-1-1-1-1-2-2 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

										-- Goal`9-1-2-2-2-1-2-1-1-1-2 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

									-- Goal`9-1-2-2-2-1-2-1-1-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

								-- Goal`9-1-2-2-2-1-2-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`9-1-2-2-2-1-2-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

					-- Goal`9-1-2-2-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
					:def csb103#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

					:apply(csb103#9)

						-- Goal`9-1-2-2-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
						:def csb104#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

						:apply(csb104#9)

							-- Goal`9-1-2-2-2-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
							:def csb105#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

							:apply(csb105#9)

								-- Goal`9-1-2-2-2-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
								:def csb106#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

								:apply(csb106#9)

									-- Goal`9-1-2-2-2-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb107#9 = :ctf [R#Rand \in U0#EVS9-1-2.URand  .]

									:apply(csb107#9)

										-- Goal`9-1-2-2-2-2-1-1-1-1-1 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

										-- Goal`9-1-2-2-2-2-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb108#9 = :ctf [m1?(M#Msg)  .]

										:apply(csb108#9)

											-- Goal`9-1-2-2-2-2-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb109#9 = :ctf {eq C#EVS9-1.SubCipher1  = c@Cipher1 .}

											:apply(csb109#9)

												-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb110#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

												:apply(csb110#9)

													-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb111#9 = :ctf [P#Prin  .]

													:apply(csb111#9)

														-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb112#9 = :ctf [key(c@Cipher1)  .]

													:apply(csb112#9)

														-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-1-2-1 Success by reduction
														:apply (rd)

												-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb113#9 = :ctf {eq nonce(C#EVS9-1.SubCipher1)  = nonce(c@Cipher1) .}

												:apply(csb113#9)

													-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb114#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

													:apply(csb114#9)

														-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb115#9 = :ctf [P#Prin  .]

														:apply(csb115#9)

															-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb116#9 = :ctf [key(C#EVS9-1.SubCipher1)  .]

														:apply(csb116#9)

															-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb117#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

													:apply(csb117#9)

														-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb118#9 = :ctf [P#Prin  .]

														:apply(csb118#9)

															-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb119#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb119#9)

															-- Goal`9-1-2-2-2-2-1-1-1-1-2-1-2-2-2-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

											-- Goal`9-1-2-2-2-2-1-1-1-1-2-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

									-- Goal`9-1-2-2-2-2-1-1-1-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

								-- Goal`9-1-2-2-2-2-1-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`9-1-2-2-2-2-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

						-- Goal`9-1-2-2-2-2-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

		-- Goal`9-1-3  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
	:def csb120#9 = :cvs [ur(S#Sys)  .]

	:apply(csb120#9)

			-- Goal`9-1-3-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
			:def csb121#9 = :ctf {eq cipher2(M#Msg)  = C#EVS9-1.SubCipher2 .}

			:apply(csb121#9)

				-- Goal`9-1-3-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
				:def csb122#9 = :ctf {eq creator(M#Msg)  = P#EVS9-1.SubPrin .}

				:apply(csb122#9)

					-- Goal`9-1-3-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
					:def csb123#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

					:apply(csb123#9)

						-- Goal`9-1-3-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
						:def csb124#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

						:apply(csb124#9)

							-- Goal`9-1-3-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
							:def csb125#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

							:apply(csb125#9)

								-- Goal`9-1-3-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
								:def csb126#9 = :ctf {eq P#Prin  = P1#EVS9-1.SubPrin .}

								:apply(csb126#9)

									-- Goal`9-1-3-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb127#9 = :ctf {eq sender(M#Msg)  = P0#EVS9-1.SubPrin .}

									:apply(csb127#9)

										-- Goal`9-1-3-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb128#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

										:apply(csb128#9)

											-- Goal`9-1-3-1-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb129#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb129#9)

												-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb130#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

												:apply(csb130#9)

													-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb131#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce1(C#EVS9-1.SubCipher2) .}

													:apply(csb131#9)

														-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb132#9 = :ctf [P0#EVS9-1.SubPrin  .]

														:apply(csb132#9)

															-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb133#9 = :ctf [P0#EVS9-1.SubPrin  .]

														:apply(csb133#9)

															-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb134#9 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#EVS9-1.SubCipher2) .}

													:apply(csb134#9)

														-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb135#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb135#9)

															-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb136#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb136#9)

															-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-1-2-2-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

												-- Goal`9-1-3-1-1-1-1-1-1-1-1-1-2 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

											-- Goal`9-1-3-1-1-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb137#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb137#9)

												-- Goal`9-1-3-1-1-1-1-1-1-1-1-2-1 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

												-- Goal`9-1-3-1-1-1-1-1-1-1-1-2-2 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

										-- Goal`9-1-3-1-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb138#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

										:apply(csb138#9)

											-- Goal`9-1-3-1-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb139#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb139#9)

												-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb140#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

												:apply(csb140#9)

													-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb141#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce1(C#EVS9-1.SubCipher2) .}

													:apply(csb141#9)

														-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb142#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb142#9)

															-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb143#9 = :ctf [P1#EVS9-1.SubPrin  .]

														:apply(csb143#9)

															-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb144#9 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#EVS9-1.SubCipher2) .}

													:apply(csb144#9)

														-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb145#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb145#9)

															-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb146#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb146#9)

															-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-1-2-2-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

												-- Goal`9-1-3-1-1-1-1-1-1-1-2-1-2 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

											-- Goal`9-1-3-1-1-1-1-1-1-1-2-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

									-- Goal`9-1-3-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb147#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

									:apply(csb147#9)

										-- Goal`9-1-3-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb148#9 = :ctf [m1?(M#Msg)  .]

										:apply(csb148#9)

											-- Goal`9-1-3-1-1-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb149#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

											:apply(csb149#9)

												-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb150#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce1(C#EVS9-1.SubCipher2) .}

												:apply(csb150#9)

													-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb151#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(C#EVS9-1.SubCipher2) .}

													:apply(csb151#9)

														-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb152#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb152#9)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb153#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb153#9)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb154#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(C#EVS9-1.SubCipher2) .}

													:apply(csb154#9)

														-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb155#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb155#9)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb156#9 = :ctf [P#Prin  .]

														:apply(csb156#9)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-1-2-2-1 Success by reduction
															:apply (rd)

												-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb157#9 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#EVS9-1.SubCipher2) .}

												:apply(csb157#9)

													-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb158#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce1(C#EVS9-1.SubCipher2) .}

													:apply(csb158#9)

														-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb159#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb159#9)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb160#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb160#9)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb161#9 = :ctf {eq nonce(c@Cipher1)  = nonce2(C#EVS9-1.SubCipher2) .}

													:apply(csb161#9)

														-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb162#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb162#9)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb163#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb163#9)

															-- Goal`9-1-3-1-1-1-1-1-1-2-1-1-2-2-2-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

											-- Goal`9-1-3-1-1-1-1-1-1-2-1-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

										-- Goal`9-1-3-1-1-1-1-1-1-2-2 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

								-- Goal`9-1-3-1-1-1-1-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`9-1-3-1-1-1-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

						-- Goal`9-1-3-1-1-1-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

					-- Goal`9-1-3-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
					:def csb164#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

					:apply(csb164#9)

						-- Goal`9-1-3-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
						:def csb165#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

						:apply(csb165#9)

							-- Goal`9-1-3-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
							:def csb166#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

							:apply(csb166#9)

								-- Goal`9-1-3-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
								:def csb167#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

								:apply(csb167#9)

									-- Goal`9-1-3-1-1-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb168#9 = :ctf [m1?(M#Msg)  .]

									:apply(csb168#9)

										-- Goal`9-1-3-1-1-2-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb169#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

										:apply(csb169#9)

											-- Goal`9-1-3-1-1-2-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb170#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce1(C#EVS9-1.SubCipher2) .}

											:apply(csb170#9)

												-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb171#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(C#EVS9-1.SubCipher2) .}

												:apply(csb171#9)

													-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb172#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

													:apply(csb172#9)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb173#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb173#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-1-1-2 Success by reduction
														:apply (rd)

													-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb174#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

													:apply(csb174#9)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb175#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb175#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-1-2-2 Success by reduction
														:apply (rd)

												-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb176#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(C#EVS9-1.SubCipher2) .}

												:apply(csb176#9)

													-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb177#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(C#EVS9-1.SubCipher2) .}

													:apply(csb177#9)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb178#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb178#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb179#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb179#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb180#9 = :ctf [P#Prin  .]

													:apply(csb180#9)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-1-2-2-1 Success by reduction
														:apply (rd)

											-- Goal`9-1-3-1-1-2-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb181#9 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#EVS9-1.SubCipher2) .}

											:apply(csb181#9)

												-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb182#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce1(C#EVS9-1.SubCipher2) .}

												:apply(csb182#9)

													-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb183#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(C#EVS9-1.SubCipher2) .}

													:apply(csb183#9)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb184#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb184#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb185#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb185#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb186#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(C#EVS9-1.SubCipher2) .}

													:apply(csb186#9)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb187#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb187#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb188#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb188#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-1-2-2-1 Success by reduction
															:apply (rd)

												-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb189#9 = :ctf {eq nonce(c@Cipher1)  = nonce2(C#EVS9-1.SubCipher2) .}

												:apply(csb189#9)

													-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb190#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(C#EVS9-1.SubCipher2) .}

													:apply(csb190#9)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb191#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb191#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb192#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb192#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb193#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

													:apply(csb193#9)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb194#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb194#9)

															-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-1-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

														-- Goal`9-1-3-1-1-2-1-1-1-1-1-2-2-2-2 Success by reduction
														:apply (rd)

										-- Goal`9-1-3-1-1-2-1-1-1-1-2 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

									-- Goal`9-1-3-1-1-2-1-1-1-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

								-- Goal`9-1-3-1-1-2-1-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`9-1-3-1-1-2-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

						-- Goal`9-1-3-1-1-2-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

				-- Goal`9-1-3-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
				:def csb195#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

				:apply(csb195#9)

					-- Goal`9-1-3-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
					:def csb196#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

					:apply(csb196#9)

						-- Goal`9-1-3-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
						:def csb197#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

						:apply(csb197#9)

							-- Goal`9-1-3-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
							:def csb198#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

							:apply(csb198#9)

								-- Goal`9-1-3-1-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
								:def csb199#9 = :ctf [m1?(M#Msg)  .]

								:apply(csb199#9)

									-- Goal`9-1-3-1-2-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb200#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

									:apply(csb200#9)

										-- Goal`9-1-3-1-2-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb201#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce1(C#EVS9-1.SubCipher2) .}

										:apply(csb201#9)

											-- Goal`9-1-3-1-2-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb202#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(C#EVS9-1.SubCipher2) .}

											:apply(csb202#9)

												-- Goal`9-1-3-1-2-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb203#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

												:apply(csb203#9)

													-- Goal`9-1-3-1-2-1-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb204#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

													:apply(csb204#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-1-1-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-3-1-2-1-1-1-1-1-1-1-1-2 Success by reduction
													:apply (rd)

												-- Goal`9-1-3-1-2-1-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb205#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

												:apply(csb205#9)

													-- Goal`9-1-3-1-2-1-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb206#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

													:apply(csb206#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-1-1-2-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-3-1-2-1-1-1-1-1-1-1-2-2 Success by reduction
													:apply (rd)

											-- Goal`9-1-3-1-2-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb207#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(C#EVS9-1.SubCipher2) .}

											:apply(csb207#9)

												-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb208#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(C#EVS9-1.SubCipher2) .}

												:apply(csb208#9)

													-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb209#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

													:apply(csb209#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb210#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb210#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1-1-2 Success by reduction
														:apply (rd)

													-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb211#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

													:apply(csb211#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb212#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb212#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-1-2-2 Success by reduction
														:apply (rd)

												-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb213#9 = :ctf [P#Prin  .]

												:apply(csb213#9)

													-- Goal`9-1-3-1-2-1-1-1-1-1-1-2-2-1 Success by reduction
													:apply (rd)

										-- Goal`9-1-3-1-2-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb214#9 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#EVS9-1.SubCipher2) .}

										:apply(csb214#9)

											-- Goal`9-1-3-1-2-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb215#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce1(C#EVS9-1.SubCipher2) .}

											:apply(csb215#9)

												-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb216#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(C#EVS9-1.SubCipher2) .}

												:apply(csb216#9)

													-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb217#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

													:apply(csb217#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb218#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb218#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1-1-2 Success by reduction
														:apply (rd)

													-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb219#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

													:apply(csb219#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb220#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb220#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-1-2-2 Success by reduction
														:apply (rd)

												-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb221#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(C#EVS9-1.SubCipher2) .}

												:apply(csb221#9)

													-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb222#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(C#EVS9-1.SubCipher2) .}

													:apply(csb222#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb223#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb223#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb224#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb224#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb225#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

													:apply(csb225#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb226#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb226#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-1-2-2-2 Success by reduction
														:apply (rd)

											-- Goal`9-1-3-1-2-1-1-1-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb227#9 = :ctf {eq nonce(c@Cipher1)  = nonce2(C#EVS9-1.SubCipher2) .}

											:apply(csb227#9)

												-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb228#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(C#EVS9-1.SubCipher2) .}

												:apply(csb228#9)

													-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb229#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(C#EVS9-1.SubCipher2) .}

													:apply(csb229#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb230#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb230#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb231#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb231#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb232#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(C#EVS9-1.SubCipher2) .}

													:apply(csb232#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb233#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb233#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb234#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb234#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-1-2-2-1 Success by reduction
															:apply (rd)

												-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb235#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

												:apply(csb235#9)

													-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb236#9 = :ctf [nonce(c@Cipher1)  .]

													:apply(csb236#9)

														-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb237#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb237#9)

															-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-1-1-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

													-- Goal`9-1-3-1-2-1-1-1-1-1-2-2-2-2 Success by reduction
													:apply (rd)

									-- Goal`9-1-3-1-2-1-1-1-1-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

								-- Goal`9-1-3-1-2-1-1-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`9-1-3-1-2-1-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

						-- Goal`9-1-3-1-2-1-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

					-- Goal`9-1-3-1-2-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)

			-- Goal`9-1-3-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
			:def csb238#9 = :ctf {eq EVS9-1-3.SubRand  = R#Rand .}

			:apply(csb238#9)

				-- Goal`9-1-3-2-1 Success by implication and reduction.
				:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

				:apply (rd)

				-- Goal`9-1-3-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
				:def csb239#9 = :ctf {eq cipher2(M#Msg)  = C#EVS9-1.SubCipher2 .}

				:apply(csb239#9)

					-- Goal`9-1-3-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
					:def csb240#9 = :ctf {eq creator(M#Msg)  = P#EVS9-1.SubPrin .}

					:apply(csb240#9)

						-- Goal`9-1-3-2-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
						:def csb241#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

						:apply(csb241#9)

							-- Goal`9-1-3-2-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
							:def csb242#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

							:apply(csb242#9)

								-- Goal`9-1-3-2-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
								:def csb243#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

								:apply(csb243#9)

									-- Goal`9-1-3-2-2-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb244#9 = :ctf {eq P#Prin  = P1#EVS9-1.SubPrin .}

									:apply(csb244#9)

										-- Goal`9-1-3-2-2-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb245#9 = :ctf {eq sender(M#Msg)  = P0#EVS9-1.SubPrin .}

										:apply(csb245#9)

											-- Goal`9-1-3-2-2-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb246#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

											:apply(csb246#9)

												-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb247#9 = :ctf [R#Rand \in U0#EVS9-1-3.URand  .]

												:apply(csb247#9)

													-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-1 Success by implication and reduction.
													:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

													:apply (rd)

													-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb248#9 = :ctf [m1?(M#Msg)  .]

													:apply(csb248#9)

														-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb249#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb249#9)

															-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-2-1-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

														-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-1-2-2 Success by implication and reduction.
														:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

														:apply (rd)

												-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb250#9 = :ctf [R#Rand \in U0#EVS9-1-3.URand  .]

												:apply(csb250#9)

													-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-2-1 Success by implication and reduction.
													:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

													:apply (rd)

													-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb251#9 = :ctf [m1?(M#Msg)  .]

													:apply(csb251#9)

														-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-2-2-1 Success by implication and reduction.
														:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

														:apply (rd)

														-- Goal`9-1-3-2-2-1-1-1-1-1-1-1-2-2-2 Success by implication and reduction.
														:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

														:apply (rd)

											-- Goal`9-1-3-2-2-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb252#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

											:apply(csb252#9)

												-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb253#9 = :ctf [R#Rand \in U0#EVS9-1-3.URand  .]

												:apply(csb253#9)

													-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-1 Success by implication and reduction.
													:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

													:apply (rd)

													-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb254#9 = :ctf [m1?(M#Msg)  .]

													:apply(csb254#9)

														-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb255#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb255#9)

															-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-2-1-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

														-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-1-2-2 Success by implication and reduction.
														:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

														:apply (rd)

												-- Goal`9-1-3-2-2-1-1-1-1-1-1-2-2 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

										-- Goal`9-1-3-2-2-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb256#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

										:apply(csb256#9)

											-- Goal`9-1-3-2-2-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb257#9 = :ctf [R#Rand \in U0#EVS9-1-3.URand  .]

											:apply(csb257#9)

												-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-1 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

												-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb258#9 = :ctf [m1?(M#Msg)  .]

												:apply(csb258#9)

													-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb259#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

													:apply(csb259#9)

														-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb260#9 = :ctf [P#Prin  .]

														:apply(csb260#9)

															-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb261#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb261#9)

															-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-1-2-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

													-- Goal`9-1-3-2-2-1-1-1-1-1-2-1-2-2 Success by implication and reduction.
													:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

													:apply (rd)

											-- Goal`9-1-3-2-2-1-1-1-1-1-2-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

									-- Goal`9-1-3-2-2-1-1-1-1-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

								-- Goal`9-1-3-2-2-1-1-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`9-1-3-2-2-1-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

						-- Goal`9-1-3-2-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
						:def csb262#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

						:apply(csb262#9)

							-- Goal`9-1-3-2-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
							:def csb263#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

							:apply(csb263#9)

								-- Goal`9-1-3-2-2-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
								:def csb264#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

								:apply(csb264#9)

									-- Goal`9-1-3-2-2-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb265#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

									:apply(csb265#9)

										-- Goal`9-1-3-2-2-1-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb266#9 = :ctf [R#Rand \in U0#EVS9-1-3.URand  .]

										:apply(csb266#9)

											-- Goal`9-1-3-2-2-1-2-1-1-1-1-1 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

											-- Goal`9-1-3-2-2-1-2-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb267#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb267#9)

												-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb268#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

												:apply(csb268#9)

													-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb269#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce1(C#EVS9-1.SubCipher2) .}

													:apply(csb269#9)

														-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb270#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb270#9)

															-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb271#9 = :ctf [P#Prin  .]

														:apply(csb271#9)

															-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb272#9 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#EVS9-1.SubCipher2) .}

													:apply(csb272#9)

														-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb273#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb273#9)

															-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb274#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb274#9)

															-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-1-2-2-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

												-- Goal`9-1-3-2-2-1-2-1-1-1-1-2-2 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

										-- Goal`9-1-3-2-2-1-2-1-1-1-2 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

									-- Goal`9-1-3-2-2-1-2-1-1-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

								-- Goal`9-1-3-2-2-1-2-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`9-1-3-2-2-1-2-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

					-- Goal`9-1-3-2-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
					:def csb275#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

					:apply(csb275#9)

						-- Goal`9-1-3-2-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
						:def csb276#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

						:apply(csb276#9)

							-- Goal`9-1-3-2-2-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
							:def csb277#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

							:apply(csb277#9)

								-- Goal`9-1-3-2-2-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
								:def csb278#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

								:apply(csb278#9)

									-- Goal`9-1-3-2-2-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb279#9 = :ctf [R#Rand \in U0#EVS9-1-3.URand  .]

									:apply(csb279#9)

										-- Goal`9-1-3-2-2-2-1-1-1-1-1 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

										-- Goal`9-1-3-2-2-2-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb280#9 = :ctf [m1?(M#Msg)  .]

										:apply(csb280#9)

											-- Goal`9-1-3-2-2-2-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb281#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

											:apply(csb281#9)

												-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb282#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce1(C#EVS9-1.SubCipher2) .}

												:apply(csb282#9)

													-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb283#9 = :ctf {eq nonce1(C#EVS9-1.SubCipher2)  = nonce2(C#EVS9-1.SubCipher2) .}

													:apply(csb283#9)

														-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb284#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb284#9)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb285#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb285#9)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb286#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce2(C#EVS9-1.SubCipher2) .}

													:apply(csb286#9)

														-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb287#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb287#9)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb288#9 = :ctf [P#Prin  .]

														:apply(csb288#9)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-1-2-2-1 Success by reduction
															:apply (rd)

												-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb289#9 = :ctf {eq nonce(c@Cipher1)  = nonce1(C#EVS9-1.SubCipher2) .}

												:apply(csb289#9)

													-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb290#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce1(C#EVS9-1.SubCipher2) .}

													:apply(csb290#9)

														-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb291#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb291#9)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb292#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb292#9)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb293#9 = :ctf {eq nonce(c@Cipher1)  = nonce2(C#EVS9-1.SubCipher2) .}

													:apply(csb293#9)

														-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb294#9 = :ctf [key(C#EVS9-1.SubCipher2)  .]

														:apply(csb294#9)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb295#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb295#9)

															-- Goal`9-1-3-2-2-2-1-1-1-1-2-1-2-2-2-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

											-- Goal`9-1-3-2-2-2-1-1-1-1-2-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

									-- Goal`9-1-3-2-2-2-1-1-1-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

								-- Goal`9-1-3-2-2-2-1-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`9-1-3-2-2-2-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

						-- Goal`9-1-3-2-2-2-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

		-- Goal`9-1-4  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
	:def csb296#9 = :cvs [ur(S#Sys)  .]

	:apply(csb296#9)

			-- Goal`9-1-4-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
			:def csb297#9 = :ctf {eq cipher3(M#Msg)  = C#EVS9-1.SubCipher3 .}

			:apply(csb297#9)

				-- Goal`9-1-4-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
				:def csb298#9 = :ctf {eq creator(M#Msg)  = P#EVS9-1.SubPrin .}

				:apply(csb298#9)

					-- Goal`9-1-4-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
					:def csb299#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

					:apply(csb299#9)

						-- Goal`9-1-4-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
						:def csb300#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

						:apply(csb300#9)

							-- Goal`9-1-4-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
							:def csb301#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

							:apply(csb301#9)

								-- Goal`9-1-4-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
								:def csb302#9 = :ctf {eq P#Prin  = P1#EVS9-1.SubPrin .}

								:apply(csb302#9)

									-- Goal`9-1-4-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb303#9 = :ctf {eq sender(M#Msg)  = P0#EVS9-1.SubPrin .}

									:apply(csb303#9)

										-- Goal`9-1-4-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb304#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

										:apply(csb304#9)

											-- Goal`9-1-4-1-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb305#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb305#9)

												-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb306#9 = :ctf {eq nonce(c@Cipher1)  = nonce(C#EVS9-1.SubCipher3) .}

												:apply(csb306#9)

													-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb307#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce(C#EVS9-1.SubCipher3) .}

													:apply(csb307#9)

														-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb308#9 = :ctf [P0#EVS9-1.SubPrin  .]

														:apply(csb308#9)

															-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb309#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb309#9)

															-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb310#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

													:apply(csb310#9)

														-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb311#9 = :ctf [P0#EVS9-1.SubPrin  .]

														:apply(csb311#9)

															-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb312#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb312#9)

															-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-1-2-2-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

												-- Goal`9-1-4-1-1-1-1-1-1-1-1-1-2 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

											-- Goal`9-1-4-1-1-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb313#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb313#9)

												-- Goal`9-1-4-1-1-1-1-1-1-1-1-2-1 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

												-- Goal`9-1-4-1-1-1-1-1-1-1-1-2-2 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

										-- Goal`9-1-4-1-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb314#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

										:apply(csb314#9)

											-- Goal`9-1-4-1-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb315#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb315#9)

												-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb316#9 = :ctf {eq nonce(c@Cipher1)  = nonce(C#EVS9-1.SubCipher3) .}

												:apply(csb316#9)

													-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb317#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce(C#EVS9-1.SubCipher3) .}

													:apply(csb317#9)

														-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb318#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb318#9)

															-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb319#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb319#9)

															-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb320#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

													:apply(csb320#9)

														-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb321#9 = :ctf [P1#EVS9-1.SubPrin  .]

														:apply(csb321#9)

															-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb322#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb322#9)

															-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-1-2-2-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

												-- Goal`9-1-4-1-1-1-1-1-1-1-2-1-2 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

											-- Goal`9-1-4-1-1-1-1-1-1-1-2-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

									-- Goal`9-1-4-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb323#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

									:apply(csb323#9)

										-- Goal`9-1-4-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb324#9 = :ctf [m1?(M#Msg)  .]

										:apply(csb324#9)

											-- Goal`9-1-4-1-1-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb325#9 = :ctf {eq nonce(c@Cipher1)  = nonce(C#EVS9-1.SubCipher3) .}

											:apply(csb325#9)

												-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb326#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce(C#EVS9-1.SubCipher3) .}

												:apply(csb326#9)

													-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb327#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

													:apply(csb327#9)

														-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb328#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb328#9)

															-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1-1-2 Success by reduction
														:apply (rd)

													-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb329#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

													:apply(csb329#9)

														-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb330#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb330#9)

															-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-1-2-2 Success by reduction
														:apply (rd)

												-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb331#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

												:apply(csb331#9)

													-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb332#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce(C#EVS9-1.SubCipher3) .}

													:apply(csb332#9)

														-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb333#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb333#9)

															-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb334#9 = :ctf [P#Prin  .]

														:apply(csb334#9)

															-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb335#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

													:apply(csb335#9)

														-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb336#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb336#9)

															-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2-1-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

														-- Goal`9-1-4-1-1-1-1-1-1-2-1-1-2-2-2 Success by reduction
														:apply (rd)

											-- Goal`9-1-4-1-1-1-1-1-1-2-1-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

										-- Goal`9-1-4-1-1-1-1-1-1-2-2 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

								-- Goal`9-1-4-1-1-1-1-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`9-1-4-1-1-1-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

						-- Goal`9-1-4-1-1-1-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

					-- Goal`9-1-4-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
					:def csb337#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

					:apply(csb337#9)

						-- Goal`9-1-4-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
						:def csb338#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

						:apply(csb338#9)

							-- Goal`9-1-4-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
							:def csb339#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

							:apply(csb339#9)

								-- Goal`9-1-4-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
								:def csb340#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

								:apply(csb340#9)

									-- Goal`9-1-4-1-1-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb341#9 = :ctf [m1?(M#Msg)  .]

									:apply(csb341#9)

										-- Goal`9-1-4-1-1-2-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb342#9 = :ctf {eq nonce(c@Cipher1)  = nonce(C#EVS9-1.SubCipher3) .}

										:apply(csb342#9)

											-- Goal`9-1-4-1-1-2-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb343#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce(C#EVS9-1.SubCipher3) .}

											:apply(csb343#9)

												-- Goal`9-1-4-1-1-2-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb344#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

												:apply(csb344#9)

													-- Goal`9-1-4-1-1-2-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb345#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

													:apply(csb345#9)

														-- Goal`9-1-4-1-1-2-1-1-1-1-1-1-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-4-1-1-2-1-1-1-1-1-1-1-2 Success by reduction
													:apply (rd)

												-- Goal`9-1-4-1-1-2-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb346#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

												:apply(csb346#9)

													-- Goal`9-1-4-1-1-2-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb347#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

													:apply(csb347#9)

														-- Goal`9-1-4-1-1-2-1-1-1-1-1-1-2-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-4-1-1-2-1-1-1-1-1-1-2-2 Success by reduction
													:apply (rd)

											-- Goal`9-1-4-1-1-2-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb348#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

											:apply(csb348#9)

												-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb349#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce(C#EVS9-1.SubCipher3) .}

												:apply(csb349#9)

													-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb350#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

													:apply(csb350#9)

														-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb351#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb351#9)

															-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-1-2 Success by reduction
														:apply (rd)

													-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb352#9 = :ctf [P#Prin  .]

													:apply(csb352#9)

														-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-1-2-1 Success by reduction
														:apply (rd)

												-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb353#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

												:apply(csb353#9)

													-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb354#9 = :ctf [nonce(c@Cipher1)  .]

													:apply(csb354#9)

														-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb355#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb355#9)

															-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-1-1-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

													-- Goal`9-1-4-1-1-2-1-1-1-1-1-2-2-2 Success by reduction
													:apply (rd)

										-- Goal`9-1-4-1-1-2-1-1-1-1-2 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

									-- Goal`9-1-4-1-1-2-1-1-1-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

								-- Goal`9-1-4-1-1-2-1-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`9-1-4-1-1-2-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

						-- Goal`9-1-4-1-1-2-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

				-- Goal`9-1-4-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
				:def csb356#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

				:apply(csb356#9)

					-- Goal`9-1-4-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
					:def csb357#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

					:apply(csb357#9)

						-- Goal`9-1-4-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
						:def csb358#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

						:apply(csb358#9)

							-- Goal`9-1-4-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
							:def csb359#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

							:apply(csb359#9)

								-- Goal`9-1-4-1-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
								:def csb360#9 = :ctf [m1?(M#Msg)  .]

								:apply(csb360#9)

									-- Goal`9-1-4-1-2-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb361#9 = :ctf {eq nonce(c@Cipher1)  = nonce(C#EVS9-1.SubCipher3) .}

									:apply(csb361#9)

										-- Goal`9-1-4-1-2-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb362#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce(C#EVS9-1.SubCipher3) .}

										:apply(csb362#9)

											-- Goal`9-1-4-1-2-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb363#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

											:apply(csb363#9)

												-- Goal`9-1-4-1-2-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb364#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

												:apply(csb364#9)

													-- Goal`9-1-4-1-2-1-1-1-1-1-1-1-1-1 Success by reduction
													:apply (rd)

												-- Goal`9-1-4-1-2-1-1-1-1-1-1-1-2 Success by reduction
												:apply (rd)

											-- Goal`9-1-4-1-2-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb365#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

											:apply(csb365#9)

												-- Goal`9-1-4-1-2-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb366#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

												:apply(csb366#9)

													-- Goal`9-1-4-1-2-1-1-1-1-1-1-2-1-1 Success by reduction
													:apply (rd)

												-- Goal`9-1-4-1-2-1-1-1-1-1-1-2-2 Success by reduction
												:apply (rd)

										-- Goal`9-1-4-1-2-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb367#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

										:apply(csb367#9)

											-- Goal`9-1-4-1-2-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb368#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce(C#EVS9-1.SubCipher3) .}

											:apply(csb368#9)

												-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb369#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

												:apply(csb369#9)

													-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb370#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

													:apply(csb370#9)

														-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-1-1-1 Success by reduction
														:apply (rd)

													-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-1-2 Success by reduction
													:apply (rd)

												-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb371#9 = :ctf [P#Prin  .]

												:apply(csb371#9)

													-- Goal`9-1-4-1-2-1-1-1-1-1-2-1-2-1 Success by reduction
													:apply (rd)

											-- Goal`9-1-4-1-2-1-1-1-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb372#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

											:apply(csb372#9)

												-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb373#9 = :ctf [nonce(c@Cipher1)  .]

												:apply(csb373#9)

													-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb374#9 = :ctf {eq P#CS9-1-4-1-2-1-1-1-1-1-2-2-1.Prin  = P#Prin .}

													:apply(csb374#9)

														-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb375#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb375#9)

															-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1-1-1-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

														-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb376#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb376#9)

															-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-1-1-2-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

												-- Goal`9-1-4-1-2-1-1-1-1-1-2-2-2 Success by reduction
												:apply (rd)

									-- Goal`9-1-4-1-2-1-1-1-1-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

								-- Goal`9-1-4-1-2-1-1-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`9-1-4-1-2-1-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

						-- Goal`9-1-4-1-2-1-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)

					-- Goal`9-1-4-1-2-2 Success by implication and reduction.
					:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

					:apply (rd)

			-- Goal`9-1-4-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
			:def csb377#9 = :ctf {eq EVS9-1-4.SubRand  = R#Rand .}

			:apply(csb377#9)

				-- Goal`9-1-4-2-1 Success by implication and reduction.
				:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

				:apply (rd)

				-- Goal`9-1-4-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
				:def csb378#9 = :ctf {eq cipher3(M#Msg)  = C#EVS9-1.SubCipher3 .}

				:apply(csb378#9)

					-- Goal`9-1-4-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
					:def csb379#9 = :ctf {eq creator(M#Msg)  = P#EVS9-1.SubPrin .}

					:apply(csb379#9)

						-- Goal`9-1-4-2-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
						:def csb380#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

						:apply(csb380#9)

							-- Goal`9-1-4-2-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
							:def csb381#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

							:apply(csb381#9)

								-- Goal`9-1-4-2-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
								:def csb382#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

								:apply(csb382#9)

									-- Goal`9-1-4-2-2-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb383#9 = :ctf {eq P#Prin  = P1#EVS9-1.SubPrin .}

									:apply(csb383#9)

										-- Goal`9-1-4-2-2-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb384#9 = :ctf {eq sender(M#Msg)  = P0#EVS9-1.SubPrin .}

										:apply(csb384#9)

											-- Goal`9-1-4-2-2-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb385#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

											:apply(csb385#9)

												-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb386#9 = :ctf [R#Rand \in U0#EVS9-1-4.URand  .]

												:apply(csb386#9)

													-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-1 Success by implication and reduction.
													:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

													:apply (rd)

													-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb387#9 = :ctf [m1?(M#Msg)  .]

													:apply(csb387#9)

														-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb388#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb388#9)

															-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-2-1-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

														-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-1-2-2 Success by implication and reduction.
														:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

														:apply (rd)

												-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb389#9 = :ctf [R#Rand \in U0#EVS9-1-4.URand  .]

												:apply(csb389#9)

													-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-2-1 Success by implication and reduction.
													:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

													:apply (rd)

													-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb390#9 = :ctf [m1?(M#Msg)  .]

													:apply(csb390#9)

														-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-2-2-1 Success by implication and reduction.
														:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

														:apply (rd)

														-- Goal`9-1-4-2-2-1-1-1-1-1-1-1-2-2-2 Success by implication and reduction.
														:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

														:apply (rd)

											-- Goal`9-1-4-2-2-1-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb391#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

											:apply(csb391#9)

												-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb392#9 = :ctf [R#Rand \in U0#EVS9-1-4.URand  .]

												:apply(csb392#9)

													-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-1 Success by implication and reduction.
													:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

													:apply (rd)

													-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb393#9 = :ctf [m1?(M#Msg)  .]

													:apply(csb393#9)

														-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb394#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb394#9)

															-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-2-1-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

														-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-1-2-2 Success by implication and reduction.
														:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

														:apply (rd)

												-- Goal`9-1-4-2-2-1-1-1-1-1-1-2-2 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

										-- Goal`9-1-4-2-2-1-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb395#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

										:apply(csb395#9)

											-- Goal`9-1-4-2-2-1-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb396#9 = :ctf [R#Rand \in U0#EVS9-1-4.URand  .]

											:apply(csb396#9)

												-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-1 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

												-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb397#9 = :ctf [m1?(M#Msg)  .]

												:apply(csb397#9)

													-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb398#9 = :ctf {eq nonce(c@Cipher1)  = nonce(C#EVS9-1.SubCipher3) .}

													:apply(csb398#9)

														-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb399#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb399#9)

															-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb400#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb400#9)

															-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-1-2-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

													-- Goal`9-1-4-2-2-1-1-1-1-1-2-1-2-2 Success by implication and reduction.
													:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

													:apply (rd)

											-- Goal`9-1-4-2-2-1-1-1-1-1-2-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

									-- Goal`9-1-4-2-2-1-1-1-1-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

								-- Goal`9-1-4-2-2-1-1-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`9-1-4-2-2-1-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

						-- Goal`9-1-4-2-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
						:def csb401#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

						:apply(csb401#9)

							-- Goal`9-1-4-2-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
							:def csb402#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

							:apply(csb402#9)

								-- Goal`9-1-4-2-2-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
								:def csb403#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

								:apply(csb403#9)

									-- Goal`9-1-4-2-2-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb404#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

									:apply(csb404#9)

										-- Goal`9-1-4-2-2-1-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb405#9 = :ctf [R#Rand \in U0#EVS9-1-4.URand  .]

										:apply(csb405#9)

											-- Goal`9-1-4-2-2-1-2-1-1-1-1-1 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

											-- Goal`9-1-4-2-2-1-2-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb406#9 = :ctf [m1?(M#Msg)  .]

											:apply(csb406#9)

												-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb407#9 = :ctf {eq nonce(c@Cipher1)  = nonce(C#EVS9-1.SubCipher3) .}

												:apply(csb407#9)

													-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb408#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce(C#EVS9-1.SubCipher3) .}

													:apply(csb408#9)

														-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb409#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb409#9)

															-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb410#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb410#9)

															-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb411#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

													:apply(csb411#9)

														-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb412#9 = :ctf [P#Prin  .]

														:apply(csb412#9)

															-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb413#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb413#9)

															-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-1-2-2-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

												-- Goal`9-1-4-2-2-1-2-1-1-1-1-2-2 Success by implication and reduction.
												:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

												:apply (rd)

										-- Goal`9-1-4-2-2-1-2-1-1-1-2 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

									-- Goal`9-1-4-2-2-1-2-1-1-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

								-- Goal`9-1-4-2-2-1-2-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`9-1-4-2-2-1-2-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

					-- Goal`9-1-4-2-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
					:def csb414#9 = :ctf {eq key(cipher1(M#Msg))  = P#Prin .}

					:apply(csb414#9)

						-- Goal`9-1-4-2-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
						:def csb415#9 = :ctf {eq principal(cipher1(M#Msg))  = sender(M#Msg) .}

						:apply(csb415#9)

							-- Goal`9-1-4-2-2-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
							:def csb416#9 = :ctf {eq receiver(M#Msg)  = P#Prin .}

							:apply(csb416#9)

								-- Goal`9-1-4-2-2-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
								:def csb417#9 = :ctf [M#Msg \in N0#EVS9-1.Network  .]

								:apply(csb417#9)

									-- Goal`9-1-4-2-2-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
									:def csb418#9 = :ctf [R#Rand \in U0#EVS9-1-4.URand  .]

									:apply(csb418#9)

										-- Goal`9-1-4-2-2-2-1-1-1-1-1 Success by implication and reduction.
										:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

										:apply (rd)

										-- Goal`9-1-4-2-2-2-1-1-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
										:def csb419#9 = :ctf [m1?(M#Msg)  .]

										:apply(csb419#9)

											-- Goal`9-1-4-2-2-2-1-1-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
											:def csb420#9 = :ctf {eq nonce(c@Cipher1)  = nonce(C#EVS9-1.SubCipher3) .}

											:apply(csb420#9)

												-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb421#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce(C#EVS9-1.SubCipher3) .}

												:apply(csb421#9)

													-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb422#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

													:apply(csb422#9)

														-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb423#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb423#9)

															-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1-1-2 Success by reduction
														:apply (rd)

													-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb424#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

													:apply(csb424#9)

														-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb425#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb425#9)

															-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1-2-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-1-2-2 Success by reduction
														:apply (rd)

												-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
												:def csb426#9 = :ctf {eq nonce(c@Cipher1)  = nonce(cipher1(M#Msg)) .}

												:apply(csb426#9)

													-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb427#9 = :ctf {eq nonce(cipher1(M#Msg))  = nonce(C#EVS9-1.SubCipher3) .}

													:apply(csb427#9)

														-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb428#9 = :ctf [key(C#EVS9-1.SubCipher3)  .]

														:apply(csb428#9)

															-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1-1-1 Success by reduction
															:apply (rd)

														-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb429#9 = :ctf [P#Prin  .]

														:apply(csb429#9)

															-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-1-2-1 Success by reduction
															:apply (rd)

													-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
													:def csb430#9 = :ctf [c@Cipher1 \in cenc1(N0#EVS9-1.Network)  .]

													:apply(csb430#9)

														-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2-1  -  inv140(sdm2(S#Sys, P#Prin, R#Rand, M#Msg), c@Cipher1)  - Success
														:def csb431#9 = :ctf [key(c@Cipher1)  .]

														:apply(csb431#9)

															-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2-1-1 Success by implication and reduction.
															:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

															:imp [proven-goal0]  by {C:Cipher1 <- c@Cipher1 ;}

															:apply (rd)

														-- Goal`9-1-4-2-2-2-1-1-1-1-2-1-2-2-2 Success by reduction
														:apply (rd)

											-- Goal`9-1-4-2-2-2-1-1-1-1-2-2 Success by implication and reduction.
											:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

											:apply (rd)

									-- Goal`9-1-4-2-2-2-1-1-1-2 Success by implication and reduction.
									:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

									:apply (rd)

								-- Goal`9-1-4-2-2-2-1-1-2 Success by implication and reduction.
								:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

								:apply (rd)

							-- Goal`9-1-4-2-2-2-1-2 Success by implication and reduction.
							:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

							:apply (rd)

						-- Goal`9-1-4-2-2-2-2 Success by implication and reduction.
						:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

						:apply (rd)


:sel(10)
	:apply(tc)

	:def csb1#10 = :ctf [M#Msg \in nw(S#Sys)  .]

	:apply(csb1#10)

	:def csb2#10 = :ctf [M0#Msg \in nw(S#Sys)  .]

	:apply(csb2#10)

	:def csb3#10 = :ctf [m1?(M#Msg)  .]

	:apply(csb3#10)

	:def csb4#10 = :ctf [m2?(M0#Msg)  .]

	:apply(csb4#10)

	:def csb5#10 = :ctf {eq creator(M#Msg)  = P#Prin .}

	:apply(csb5#10)

	:def csb6#10 = :ctf {eq sender(M#Msg)  = P#Prin .}

	:apply(csb6#10)

	:def csb7#10 = :ctf {eq receiver(M#Msg)  = sender(M0#Msg) .}

	:apply(csb7#10)

	:def csb8#10 = :ctf {eq key(cipher1(M#Msg))  = sender(M0#Msg) .}

	:apply(csb8#10)

	:def csb9#10 = :ctf {eq nonce(cipher1(M#Msg))  = n(P#Prin, sender(M0#Msg), R#Rand) .}

	:apply(csb9#10)

	:def csb10#10 = :ctf {eq principal(cipher1(M#Msg))  = P#Prin .}

	:apply(csb10#10)

	:def csb11#10 = :ctf {eq receiver(M0#Msg)  = P#Prin .}

	:apply(csb11#10)

	:def csb12#10 = :ctf {eq key(cipher2(M0#Msg))  = P#Prin .}

	:apply(csb12#10)

	:def csb13#10 = :ctf {eq nonce1(cipher2(M0#Msg))  = n(P#Prin, sender(M0#Msg), R#Rand) .}

	:apply(csb13#10)

	:def csb14#10 = :ctf {eq principal(cipher2(M0#Msg))  = sender(M0#Msg) .}

	:apply(csb14#10)

	:def csb15#10 = :ctf {eq sender(M0#Msg)  = intruder .}

	:apply(csb15#10)

	:def csb16#10 = :ctf {eq nonce(c@Cipher1)  = nonce2(cipher2(M0#Msg)) .}

	:apply(csb16#10)

	:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

	:apply (rd)

	:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

	:apply (rd)

	:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

	:apply (rd)

	:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

	:apply (rd)

	:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

	:apply (rd)

	:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

	:apply (rd)

	:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

	:apply (rd)

	:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

	:apply (rd)

	:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

	:apply (rd)

	:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

	:apply (rd)

	:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

	:apply (rd)

	:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

	:apply (rd)

	:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

	:apply (rd)

	:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

	:apply (rd)

	:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

	:apply (rd)

	:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

	:apply (rd)

	:imp [inv14]  by {c:Cipher1 <- c@Cipher1 ;}

	:apply (rd)

